/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2008-2009, Sotnikov Denis (fxexpert@freemail.ru)"
#property link      "fxexpert@freemail.ru"

#include <WinUser32.mqh>

extern bool MarketInfoMode = FALSE;
extern string OrderOptions = "--------   Orders options  --------";
extern double Lots = 0.0;
extern int LotsPercent = 10;
extern int MaxLotsPercent = 30;
double gd_104 = 0.0;
extern bool ResetMaxBalance = FALSE;
double gd_116 = 0.0;
extern string BalanceControlOptions = "------ BalanceControl options -----";
extern bool UseBalanceControl = TRUE;
extern bool SaveLotsValueAfterDD = FALSE;
extern int RestoreDepoMode = 1;
extern int RestoreOrderMode = 1;
extern bool AlwaysUseMaxLot = FALSE;
extern bool RestoreLostProfit = TRUE;
double gd_156 = 0.0;
extern int AverageTradeProfit = 2;
bool gi_168 = FALSE;
extern string CrossOverOptions = "-------- CrossOver options --------";
extern bool CheckCrossOver = FALSE;
extern bool CrossOverMode = FALSE;
bool gi_188 = FALSE;
bool gi_192 = FALSE;
int gi_196 = 250;
int gi_200 = 30000;
int gi_204 = 3000;
string gs_208 = "";
string gs_216 = "";
extern string TradeOptions = "--------   Trade  options  --------";
extern int SettingsNumber = 2;
extern int DDSettingsNumber = 0;
int gi_240 = 8;
int gi_244 = 1;
int gi_248 = 0;
bool gi_252 = FALSE;
int gi_256 = 0;
int g_str2int_260 = 1;
int gi_264 = 0;
extern bool InvisibleStopLoss = TRUE;
extern bool TrailingTakeProfit = TRUE;
bool g_str2int_276 = TRUE;
int g_str2int_280 = 0;
int g_str2int_284 = 20;
string gs_unused_288 = "--------";
extern int MinOrderLifeTime = 0;
int g_str2int_300 = 300;
bool g_str2int_304 = TRUE;
int g_str2int_308 = 60;
int gi_312 = 0;
bool g_str2int_316 = FALSE;
bool g_str2int_320 = FALSE;
int gi_324 = 0;
int g_slippage_328 = 2;
int g_slippage_332 = 2;
bool g_str2int_336 = FALSE;
bool g_str2int_340 = TRUE;
int gi_344 = 0;
int gi_348 = 0;
bool g_str2int_352 = FALSE;
int gi_356 = 0;
bool g_str2int_360 = FALSE;
bool g_str2int_364 = TRUE;
string gs_unused_368 = "--------";
bool g_str2int_376 = FALSE;
bool g_str2int_380 = FALSE;
bool g_str2int_384 = TRUE;
string gs_unused_388 = "--------";
double gd_396 = 0.0;
int g_str2int_404 = 0;
int g_str2int_408 = 0;
string gs_unused_412 = "--------";
double gd_420 = 0.0;
int g_str2int_428 = 0;
double gd_432 = 0.0;
int g_str2int_440 = 0;
int g_str2int_444 = 0;
int g_str2int_448 = 0;
int g_str2int_452 = 0;
int g_str2int_456 = 0;
int g_str2int_460 = 0;
int g_str2int_464 = 0;
int g_str2int_468 = 0;
string gs_unused_472 = "--------";
bool g_str2int_480 = TRUE;
int gi_484 = 0;
int gi_488 = 0;
int gi_492 = 0;
int gi_496 = 0;
bool gi_500 = TRUE;
bool g_str2int_504 = FALSE;
bool g_str2int_508 = FALSE;
bool g_str2int_512 = FALSE;
string gs_unused_516 = "--------";
int g_str2int_524 = 0;
bool g_str2int_528 = FALSE;
bool g_str2int_532 = FALSE;
bool g_str2int_536 = FALSE;
int g_period_540 = 0;
double gd_544 = 0.0;
int g_ma_method_552 = MODE_SMA;
int g_applied_price_556 = PRICE_CLOSE;
int g_str2int_560 = 0;
string gs_unused_564 = "--------";
int g_str2int_572 = 0;
double gd_576 = 0.0;
int g_str2int_584 = 0;
int g_str2int_588 = 0;
int g_str2int_592 = 0;
double gd_596 = 0.0;
int g_str2int_604 = 0;
int g_str2int_608 = 0;
string gs_unused_612 = "--------";
double gd_620 = 0.0;
int gi_628 = 0;
int g_str2int_632 = 150;
int gi_636 = 0;
int g_str2int_640 = 200;
int gi_644 = 0;
int g_str2int_648 = 0;
int g_str2int_652 = 0;
string gs_unused_656 = "--------";
bool g_str2int_664 = FALSE;
int g_str2int_668 = 60;
int gi_672 = 0;
int g_str2int_676 = 100;
int g_str2int_680 = 250;
int gi_684 = 0;
string gs_unused_688 = "--------";
bool g_str2int_696 = FALSE;
int g_timeframe_700 = 0;
int g_period_704 = 0;
int g_applied_price_708 = PRICE_CLOSE;
int g_timeframe_712 = 0;
int g_period_716 = 0;
double g_str2dbl_720 = 0.0;
double g_str2dbl_728 = 0.0;
int g_applied_price_736 = PRICE_CLOSE;
int g_period_740 = 0;
double gd_744 = 0.0;
int g_ma_method_752 = MODE_SMA;
int g_applied_price_756 = PRICE_CLOSE;
int gi_760 = 0;
int g_str2int_764 = 0;
int g_applied_price_768 = PRICE_CLOSE;
int gi_772 = 0;
int g_timeframe_776 = 0;
int g_period_780 = 0;
double g_str2dbl_784 = 0.0;
double g_str2dbl_792 = 0.0;
int g_str2int_800 = 0;
int g_str2int_804 = 0;
string gs_unused_808 = "--------";
extern int FletFilterLevel = 0;
extern int TrendFilterLevel = 0;
bool gi_824 = FALSE;
double gd_828 = 0.0;
double gd_836 = 0.0;
double gd_844 = 0.0;
bool gi_852 = TRUE;
bool gi_856 = FALSE;
extern string TimeOptions = "--------   Time   options  --------";
extern bool UseAutoTimeSettings = TRUE;
extern int TimeZone = 0;
extern int SWChangeMode = 0;
bool gi_880 = FALSE;
extern int TimeRiskFactor = 5;
int gi_888 = 0;
int gi_892 = 0;
extern bool BlockWeekBegin = TRUE;
extern bool BlockWeekEnd = TRUE;
bool gi_904 = FALSE;
int gi_908 = 0;
int gi_912 = 0;
extern bool TradeHourOptimization = FALSE;
extern int OpenHourAM = 0;
extern int CloseHourAM = 12;
extern int OpenHourPM = 12;
extern int CloseHourPM = 24;
int g_str2int_936 = -1;
int g_str2int_940 = -1;
extern int MailReportTimeHour = -1;
string gs_unused_948 = "--------Transmite options--------";
bool gi_956 = FALSE;
bool gi_960 = FALSE;
bool gi_unused_964 = FALSE;
int gi_unused_968 = 10;
bool gi_unused_972 = TRUE;
int gi_unused_976 = 10;
bool gi_unused_980 = FALSE;
string gs_unused_984 = "--------   News   options  --------";
bool gi_unused_992 = FALSE;
int gi_unused_996 = 5;
int gi_unused_1000 = 30;
int gi_unused_1004 = 60;
bool gi_unused_1008 = TRUE;
bool gi_unused_1012 = TRUE;
bool gi_unused_1016 = TRUE;
bool gi_unused_1020 = TRUE;
bool gi_unused_1024 = TRUE;
bool gi_unused_1028 = TRUE;
bool gi_unused_1032 = TRUE;
bool gi_unused_1036 = TRUE;
bool gi_unused_1040 = TRUE;
extern string OtherOptions = "--------   Other  options  --------";
extern int PersonalMagicNumber = 0;
bool gi_1056 = TRUE;
extern bool ShowTimes = FALSE;
extern bool ShowInformation = TRUE;
bool gi_1068 = FALSE;
extern int InformationStringNumber = 10;
extern bool ShowStateInfo = FALSE;
bool gi_1080 = TRUE;
bool gi_1084 = FALSE;
bool gi_1088 = FALSE;
bool gi_1092 = FALSE;
bool gi_1096 = FALSE;
bool gi_1100 = TRUE;
bool gi_1104 = TRUE;
bool gi_1108 = FALSE;
bool gi_1112 = TRUE;
bool gi_1116 = FALSE;
double gd_1120 = 5.0;
bool gi_1128 = TRUE;
extern string Language = "rus";
extern string AdvancedOptions = "-------- Advanced options  --------";
extern bool CheckFreeMargin = FALSE;
extern bool CheckStopOutLevel = TRUE;
extern bool IncreaseFreezeLevel = FALSE;
bool gi_unused_1160 = TRUE;
bool gi_unused_1164 = TRUE;
extern bool CheckRepeatClosePrice = TRUE;
bool gi_1172 = FALSE;
bool gi_1176 = FALSE;
extern bool UseCommissionCorrection = TRUE;
bool gi_1184 = TRUE;
bool gi_1188 = FALSE;
bool gi_1192 = TRUE;
extern int MaxSpreadValue = 0;
int gi_unused_1200 = 2;
bool gi_1204 = TRUE;
int gi_1208;
int gi_1212;
int gi_unused_1216;
bool gi_1220;
int gi_unused_1224;
int gi_unused_1228;
int gi_unused_1232;
int gi_1236;
int gi_1240;
int gi_1244;
int gi_unused_1248;
int gi_1252;
int gi_1256;
int g_count_1260;
int gi_1264;
bool gi_1268;
bool gi_1272;
int gi_1276;
int gi_1280;
bool g_bars_1284;
int gia_1288[5][10];
int gia_1292[500][10];
int g_str2int_1296;
int g_str2int_1300;
int g_str2int_1304;
int g_count_1308;
int gi_1312;
int gi_1316;
int gi_1320;
int gi_1324;
int gi_unused_1328 = 0;
int gi_unused_1332 = 0;
int gi_unused_1336 = 10;
int gi_unused_1340;
int g_day_of_week_1344;
int g_day_of_week_1348;
int gi_unused_1352;
int gi_unused_1356;
int gi_1360;
datetime g_time_1364;
int gi_1368;
int gi_unused_1372;
int gi_unused_1376;
int gi_unused_1380;
int gi_unused_1384;
int gi_unused_1388;
int gi_1392;
int g_stoplevel_1396;
int gi_unused_1400;
int gi_unused_1404;
int gi_unused_1408;
int gi_unused_1412;
int gi_unused_1416;
int gi_unused_1420;
int g_magic_1424;
int gi_unused_1428;
int gi_unused_1432;
int gi_unused_1436;
int g_minute_1440;
int gi_1444;
int gi_1448;
int gi_1452;
bool gi_1456;
int gi_1460;
int gi_1464;
int g_hour_1468;
int g_day_of_week_1472;
int gi_1476;
int g_month_1480;
int g_year_1484;
int g_count_1488;
double gd_1492;
double gd_unused_1500;
double gd_unused_1508;
double gd_unused_1516;
double gd_1524;
double gd_1532;
double gd_unused_1540;
double gd_1548;
double gd_1556;
double gd_1564;
double gd_1572;
double gd_unused_1580;
double g_global_var_1588;
double gd_unused_1596;
double gd_unused_1604;
double gd_unused_1612;
double gd_unused_1620;
double gda_1628[1][6];
double gda_1632[1][8];
double gda_1636[30];
double gd_1640;
double gd_1648;
int gi_unused_1656;
int gi_unused_1664;
int gi_unused_1668;
int gi_unused_1672;
bool gi_1676;
bool gi_1680;
int gi_unused_1684;
bool gi_1688;
bool gi_1692;
bool gi_1700;
bool gi_1704;
bool gi_1708;
bool gi_1712;
bool g_bool_1716;
bool gi_1720;
bool gi_1724;
bool gi_1728;
int gi_unused_1732;
bool gi_1736;
bool gi_1740;
int g_bool_1744;
int gi_unused_1752;
bool gi_1756;
bool gi_1760;
int gi_unused_1764;
bool gi_1768;
bool gi_1772;
int gi_unused_1776;
int gi_unused_1780;
int gi_unused_1784;
bool gi_1788;
int gi_unused_1792;
bool gi_1796;
int gi_unused_1800;
bool gi_1804;
int gi_unused_1808;
int gi_unused_1812;
bool gi_1816;
int gi_1820;
int gi_unused_1824;
int gi_unused_1828;
int gi_1832;
int gi_1836;
int gi_1840;
int gi_1844;
int gi_1848;
string gsa_1852[7];
string gsa_1856[50];
string gsa_1860[160][21];
string gsa_1864[160][21];
string gsa_1868[4300];
string gsa_1872[20];
string gs_1876;
string gs_1884;
string gs_unused_1892;
string gs_unused_1900;
string gs_1908;
string gs_1916;
string gs_1924;
string gs_1932;
string gs_1940;
string gs_1948;
string gs_1956;
string gs_1964;
string gs_1972;
string gs_1980;
string g_var_name_1988;
string g_var_name_1996;
string g_var_name_2004;
string g_var_name_2012;
string g_var_name_2020;
string gs_2028;
string gs_2036;
string gs_2044;
string gs_2052;
double gd_2060;
double gd_2068;
double gd_2076;
double g_point_2084;
int g_digits_2092;
double g_point_2096;
double g_point_2104;
double g_digits_2112;
double g_digits_2120;
double g_stoplevel_2128;
double gd_2136;
string g_symbol_2144;
string g_symbol_2152;
string gs_2160;
string gs_2168;
int gi_2176;
int gi_2180;
int gi_2184;
int gi_2188;
int gi_2192;
double gd_2196;
double gd_2204;
double gd_2212;
double gd_2220;
double g_bid_2228;
double g_ask_2236;
double g_bid_2244;
double g_ask_2252;
double g_spread_2260;
double g_spread_2268;
double gd_2276;
double gd_2284;
double gd_2292;
double gd_2300;
double gda_2308[48][5];
int g_count_2312;
int gia_2324[7][60];
string gsa_2328[7][60];
double gda_2332[7][60];
int gia_2336[7][60];
double gda_2340[50];
double gda_2344[50];
double gda_2348[50];
double gda_2352[50];
double gda_2356[50];
int gia_2360[50];
int gia_2364[50];
int g_datetime_2368;
datetime g_time_2372;
int gi_2376;
int gi_2380;
int gi_2384;
bool gi_2388;
bool gi_2396;
bool gi_2400;
int gi_unused_2404;
string gs_2408;
string gs_2416;
string gs_2424;
int gi_2432;
bool g_bars_2436;
int gi_2440;
double gda_2444[50];
double g_global_var_2448;
int gia_2456[6];

int init() {
   Comment("");
   FNC_079();
   FNC_030("ReceiveBuffer", 0);
   FNC_030("CommandBuffer", 0);
   FNC_030("VariablesBuffer", 0);
   FNC_030("InformationBuffer", 0);
   FNC_030("LogFileBuffer", 0);
   FNC_030("ErrorArray", 0);
   FNC_030("LoadSettingsArray", 0);
   FNC_030("SettingsArray", 0);
   FNC_030("SpreadArray", 0);
   FNC_030("OSbuffer", 0);
   FNC_030("OSbuffer", 1);
   FNC_030("OSbuffer", 2);
   FNC_030("OSbuffer", 3);
   FNC_030("OSbuffer", 4);
   FNC_030("OSbuffer", 5);
   FNC_030("OSbuffer", 6);
   gia_2324[0][2] = Time[0];
   gia_2324[1][2] = Time[0];
   gia_2324[2][2] = Time[0];
   gia_2324[3][2] = Time[0];
   gia_2324[4][2] = Time[0];
   gia_2324[5][2] = Time[0];
   gia_2324[6][2] = Time[0];
   if (gi_1204) HideTestIndicators(TRUE);
   g_bool_1716 = IsTradeAllowed();
   g_bool_1744 = IsConnected();
   g_time_2372 = 0;
   if (!g_str2int_480) {
      g_str2int_444 = g_str2int_440;
      g_str2int_452 = g_str2int_440;
      g_str2int_456 = g_str2int_440;
   }
   FNC_055();
   if (IsOptimization() || IsTesting()) {
      gi_1104 = FALSE;
      if (!IsVisualMode()) {
         gi_1056 = FALSE;
         gi_1080 = FALSE;
      }
      if (TradeHourOptimization) {
         if (OpenHourAM > 23) OpenHourAM = 23;
         CloseHourAM = OpenHourAM + 1;
         OpenHourPM = 24;
         CloseHourPM = 24;
      }
   } else TradeHourOptimization = FALSE;
   FNC_056();
   FNC_074();
   gd_1648 = FNC_059("Symbol");
   gd_1572 = NormalizeDouble(100000.0 * (0.95 * FNC_063(0)) / MarketInfo(Symbol(), MODE_LOTSIZE), 2);
   FNC_057();
   gi_1724 = FNC_053();
   FNC_048();
   FNC_051();
   FNC_049();
   FNC_064();
   FNC_050(SettingsNumber, 1);
   FNC_031(gi_888);
   FNC_043();
   FNC_019();
   gi_1720 = FNC_062();
   FNC_085(0, 0);
   if (g_str2int_336) {
      if (LotsPercent > 30 && Lots == 0.0) {
         g_str2int_336 = FALSE;
         FNC_046(8, "Init()", "Íåâîçìîæíî óñòàíîâèòü ContinueAfterClose: LotsPercent>30", "Unable to set ContinueAfterClose: LotsPercent>30");
      }
   }
   FNC_045();
   FNC_044();
   if (gi_1720) FNC_046(8, "Init()", "Èíèöèàëèçàöèÿ çàâåðøåíà (Ëèöåíçèÿ-ÍÅÒ)", "Initialization completed (License-NO)");
   else FNC_046(8, "Init()", "Èíèöèàëèçàöèÿ çàâåðøåíà (Ëèöåíçèÿ-ÎÊ)", "Initialization completed (License-OK)");
   FNC_058(" ");
   Print("Keys=" + gi_1448 + "." + gi_2432 + "." + gi_1264 + "." + gi_2192);
   return (0);
}

int start() {
   bool li_0 = TRUE;
   while (li_0) {
      if (gi_1736 && !IsTesting() && !IsOptimization()) return (0);
      gi_1368 = GetTickCount();
      FNC_074();
      FNC_019();
      if (!MarketInfoMode) FNC_003();
      FNC_094();
      if (CheckCrossOver && IsExpertEnabled()) Sleep(gi_196);      
      else li_0 = FALSE;
      if (IsStopped()) FNC_046(9, "start()", "IsStopped()", "IsStopped()");
      FNC_058(" ");
   }
   return (0);
}

int FNC_001() {
   string ls_unused_8;
   if (IsOptimization() || IsTesting()) return (0);
   string l_name_0 = gs_2416;
   int l_file_16 = FileOpen(l_name_0, FILE_CSV|FILE_READ, ';');
   if (l_file_16 < 1) return (0);
   bool li_24 = FALSE;
   for (int l_index_20 = 0; l_index_20 < 7; l_index_20++) {
      gia_2336[l_index_20][0] = StrToInteger(FileReadString(l_file_16));
      gia_2336[l_index_20][1] = StrToInteger(FileReadString(l_file_16));
      gsa_2328[l_index_20][0] = FileReadString(l_file_16);
      gsa_2328[l_index_20][1] = FileReadString(l_file_16);
      gsa_2328[l_index_20][2] = FileReadString(l_file_16);
      gda_2332[l_index_20][7] = StrToDouble(FileReadString(l_file_16));
      gia_2336[l_index_20][4] = StrToInteger(FileReadString(l_file_16));
      gia_2336[l_index_20][5] = StrToInteger(FileReadString(l_file_16));
      gia_2336[l_index_20][6] = StrToInteger(FileReadString(l_file_16));
      gia_2336[l_index_20][7] = StrToInteger(FileReadString(l_file_16));
      gia_2336[l_index_20][8] = StrToInteger(FileReadString(l_file_16));
      gia_2336[l_index_20][9] = StrToInteger(FileReadString(l_file_16));
      gia_2336[l_index_20][11] = StrToInteger(FileReadString(l_file_16));
      gia_2336[l_index_20][12] = StrToInteger(FileReadString(l_file_16));
      gia_2336[l_index_20][13] = StrToInteger(FileReadString(l_file_16));
      gia_2336[l_index_20][14] = StrToInteger(FileReadString(l_file_16));
      gda_2332[l_index_20][6] = StrToDouble(FileReadString(l_file_16));
      gda_2332[l_index_20][5] = StrToDouble(FileReadString(l_file_16));
      gia_2324[l_index_20][2] = StrToTime(FileReadString(l_file_16));
      gia_2324[l_index_20][3] = StrToTime(FileReadString(l_file_16));
      gia_2324[l_index_20][4] = StrToTime(FileReadString(l_file_16));
      gia_2324[l_index_20][5] = StrToTime(FileReadString(l_file_16));
      if (gia_2336[l_index_20][0] != 0) li_24 = TRUE;
   }
   if (li_24) FNC_046(8, "FNC_001()", "Çàãðóæåíû ñîñòîÿíèÿ ïðîøëûõ îðäåðîâ", "Loaded the state of last orders");
   FileClose(l_file_16);
   return (1);
}

int FNC_002() {
   string ls_unused_12;
   bool li_0 = FALSE;
   string l_name_4 = gs_2416;
   if (IsOptimization() || IsTesting()) return (0);
   for (int l_index_24 = 0; l_index_24 < 7; l_index_24++)
      if (gia_2456[l_index_24] != gia_2336[l_index_24][0]) li_0 = TRUE;
   if (!li_0) return (0);
   int l_file_20 = FileOpen(l_name_4, FILE_CSV|FILE_WRITE, ';');
   if (l_file_20 < 1) return (0);
   for (l_index_24 = 0; l_index_24 < 7; l_index_24++) {
      FileWrite(l_file_20, gia_2336[l_index_24][0], gia_2336[l_index_24][1], gsa_2328[l_index_24][0], gsa_2328[l_index_24][1], gsa_2328[l_index_24][2], gda_2332[l_index_24][7], gia_2336[l_index_24][4], gia_2336[l_index_24][5], gia_2336[l_index_24][6], gia_2336[l_index_24][7], gia_2336[l_index_24][8], gia_2336[l_index_24][9], gia_2336[l_index_24][11], gia_2336[l_index_24][12], gia_2336[l_index_24][13], gia_2336[l_index_24][14], gda_2332[l_index_24][6], gda_2332[l_index_24][5], TimeToStr(gia_2324[l_index_24][2], TIME_DATE|TIME_SECONDS), TimeToStr(gia_2324[l_index_24][3], TIME_DATE|TIME_SECONDS), TimeToStr(gia_2324[l_index_24][4], TIME_DATE|TIME_SECONDS), TimeToStr(gia_2324[l_index_24][5], TIME_DATE|TIME_SECONDS));
      gia_2456[l_index_24] = gia_2336[l_index_24][0];
   }
   FileClose(l_file_20);
   return (1);
}

int FNC_003() {
   bool li_4 = FALSE;
   bool li_8 = FALSE;
   if (!gi_2396) {
      gi_2396 = TRUE;
      FNC_001();
   }
   for (int l_count_12 = 0; l_count_12 < 7; l_count_12++)
      if (FNC_073(l_count_12)) FNC_068(l_count_12);
   int li_0 = 1;
   li_4 = FALSE;
   li_8 = FALSE;
   if (RestoreOrderMode != 0 && gi_1728) {
      if (gia_2336[0][0] != 0) {
         if (RestoreOrderMode == 1) {
            li_4 = TRUE;
            li_8 = TRUE;
         }
         if (RestoreOrderMode == 2) {
            if (gia_2336[0][1] == 0) li_8 = TRUE;
            if (gia_2336[0][1] == 1) li_4 = TRUE;
         }
         if (RestoreOrderMode == 3) {
            if (gia_2336[0][1] == 0) li_4 = TRUE;
            if (gia_2336[0][1] == 1) li_8 = TRUE;
         }
      }
   }
   FNC_067(li_0, li_4, li_8);
   li_0 = 0;
   li_4 = FALSE;
   li_8 = FALSE;
   if (gia_2336[1][0] == 0) {
      li_4 = TRUE;
      li_8 = TRUE;
   }
   FNC_067(li_0, li_4, li_8);
   bool li_16 = FALSE;
   bool li_20 = FALSE;
   li_0 = 2;
   li_4 = FALSE;
   li_8 = FALSE;
   if (gi_248 != 0 && !gi_1728) {
      if (gia_2336[0][0] == 96 && gia_2336[1][0] == 0) {
         if (gia_2336[0][10] <= (-1 * gi_240) && gi_244 > 0) {
            li_16 = FALSE;
            li_20 = FALSE;
            if (gia_2336[0][1] == 0) li_20 = TRUE;
            if (gia_2336[0][1] == 1) li_16 = TRUE;
            if (gi_248 == 1) {
               if (!li_16) li_4 = TRUE;
               if (!li_20) li_8 = TRUE;
            }
            if (gi_248 == 2) {
               if (gia_2336[0][1] == 0 && !li_20) li_8 = TRUE;
               if (gia_2336[0][1] == 1 && !li_16) li_4 = TRUE;
            }
            if (gi_248 == 3) {
               if (gia_2336[0][1] == 0) li_4 = TRUE;
               if (gia_2336[0][1] == 1) li_8 = TRUE;
            }
         }
      }
   }
   FNC_067(li_0, li_4, li_8);
   li_0 = 3;
   li_4 = FALSE;
   li_8 = FALSE;
   if (gi_248 != 0 && !gi_1728) {
      if (gia_2336[0][0] == 96 && gia_2336[1][0] == 0 && gia_2336[2][0] == 96) {
         if (gia_2336[0][10] <= (-2 * gi_240) && gi_244 > 1) {
            li_16 = FALSE;
            li_20 = FALSE;
            if (gia_2336[0][1] == 0) li_20 = TRUE;
            if (gia_2336[0][1] == 1) li_16 = TRUE;
            if (gi_248 == 1) {
               if (!li_16) li_4 = TRUE;
               if (!li_20) li_8 = TRUE;
            }
            if (gi_248 == 2) {
               if (gia_2336[0][1] == 0 && !li_20) li_8 = TRUE;
               if (gia_2336[0][1] == 1 && !li_16) li_4 = TRUE;
            }
            if (gi_248 == 3) {
               if (gia_2336[0][1] == 0) li_4 = TRUE;
               if (gia_2336[0][1] == 1) li_8 = TRUE;
            }
         }
      }
   }
   FNC_067(li_0, li_4, li_8);
   li_0 = 4;
   li_4 = FALSE;
   li_8 = FALSE;
   if (gi_248 != 0 && !gi_1728) {
      if (gia_2336[0][0] == 96 && gia_2336[1][0] == 0 && gia_2336[3][0] == 96) {
         if (gia_2336[0][10] <= (-3 * gi_240) && gi_244 > 2) {
            li_16 = FALSE;
            li_20 = FALSE;
            if (gia_2336[0][1] == 0) li_20 = TRUE;
            if (gia_2336[0][1] == 1) li_16 = TRUE;
            if (gi_248 == 1) {
               if (!li_16) li_4 = TRUE;
               if (!li_20) li_8 = TRUE;
            }
            if (gi_248 == 2) {
               if (gia_2336[0][1] == 0 && !li_20) li_8 = TRUE;
               if (gia_2336[0][1] == 1 && !li_16) li_4 = TRUE;
            }
            if (gi_248 == 3) {
               if (gia_2336[0][1] == 0) li_4 = TRUE;
               if (gia_2336[0][1] == 1) li_8 = TRUE;
            }
         }
      }
   }
   FNC_067(li_0, li_4, li_8);
   li_0 = 5;
   li_4 = FALSE;
   li_8 = FALSE;
   if (gi_248 != 0 && !gi_1728) {
      if (gia_2336[0][0] == 96 && gia_2336[1][0] == 0 && gia_2336[4][0] == 96) {
         if (gia_2336[0][10] <= (-4 * gi_240) && gi_244 > 3) {
            li_16 = FALSE;
            li_20 = FALSE;
            if (gia_2336[0][1] == 0) li_20 = TRUE;
            if (gia_2336[0][1] == 1) li_16 = TRUE;
            if (gi_248 == 1) {
               if (!li_16) li_4 = TRUE;
               if (!li_20) li_8 = TRUE;
            }
            if (gi_248 == 2) {
               if (gia_2336[0][1] == 0 && !li_20) li_8 = TRUE;
               if (gia_2336[0][1] == 1 && !li_16) li_4 = TRUE;
            }
            if (gi_248 == 3) {
               if (gia_2336[0][1] == 0) li_4 = TRUE;
               if (gia_2336[0][1] == 1) li_8 = TRUE;
            }
         }
      }
   }
   FNC_067(li_0, li_4, li_8);
   li_0 = 6;
   li_4 = FALSE;
   li_8 = FALSE;
   if (gi_248 != 0 && !gi_1728) {
      if (gia_2336[0][0] == 96 && gia_2336[1][0] == 0 && gia_2336[5][0] == 96) {
         if (gia_2336[0][10] <= (-5 * gi_240) && gi_244 > 4) {
            li_16 = FALSE;
            li_20 = FALSE;
            if (gia_2336[0][1] == 0) li_20 = TRUE;
            if (gia_2336[0][1] == 1) li_16 = TRUE;
            if (gi_248 == 1) {
               if (!li_16) li_4 = TRUE;
               if (!li_20) li_8 = TRUE;
            }
            if (gi_248 == 2) {
               if (gia_2336[0][1] == 0 && !li_20) li_8 = TRUE;
               if (gia_2336[0][1] == 1 && !li_16) li_4 = TRUE;
            }
            if (gi_248 == 3) {
               if (gia_2336[0][1] == 0) li_4 = TRUE;
               if (gia_2336[0][1] == 1) li_8 = TRUE;
            }
         }
      }
   }
   FNC_067(li_0, li_4, li_8);
   FNC_002();
   return (1);
}

int FNC_004(int ai_0, int ai_unused_4, int ai_8, int ai_unused_12, double a_pips_16, int ai_24) {
   double ld_32;
   bool li_ret_28 = TRUE;
   if (ai_8 != 0) {
      ld_32 = gda_2444[1];
      if (ai_24 == 1) ld_32 = MathRound(ld_32 / Point) * Point;
      if (ai_24 == 2 && ai_0 == 1) ld_32 = MathFloor(ld_32 / Point) * Point;
      if (ai_24 == 2 && ai_0 == 0) ld_32 = MathCeil(ld_32 / Point) * Point;
      if (ai_24 == 3 && ai_0 == 0) ld_32 = MathFloor(ld_32 / Point) * Point;
      if (ai_24 == 3 && ai_0 == 1) ld_32 = MathCeil(ld_32 / Point) * Point;
      if (MathAbs(Bid - ld_32 + gi_2192 * gi_2432) <= a_pips_16 * Point) li_ret_28 = FALSE;
   }
   return (li_ret_28);
}

int FNC_005(int ai_0) {
   bool li_ret_4 = FALSE;
   gs_2424 = "";
   if (!FNC_009(g_str2int_528) && !FNC_009(g_str2int_536) && !FNC_091(gi_500) && !gi_1688 && !gi_1768 && !gi_1700 && !gi_1692 && !gi_1704 && !gi_1708 && !gi_1740 && !gi_1720) {
      if (ai_0 == 1) {
         if (!gi_1712) {
            if ((g_str2int_260 == 0 || g_str2int_260 == 1 && FNC_004(1, g_ma_method_552, g_period_540, g_applied_price_556, gd_544, g_str2int_560) && FNC_025(1, g_str2int_444, g_str2int_504, gi_484)) ||
               (g_str2int_260 == 0 || g_str2int_260 == 2 && FNC_004(1, g_str2int_648, g_str2int_592, g_str2int_652, gd_596, g_str2int_560) && FNC_025(1, g_str2int_448, g_str2int_504, gi_488)) ||
               (g_str2int_260 == 4 && FNC_037(1))) li_ret_4 = TRUE;
         }
      }
      if (ai_0 == 0) {
         if (!gi_1712) {
            if ((g_str2int_260 == 0 || g_str2int_260 == 1 && FNC_004(0, g_ma_method_552, g_period_540, g_applied_price_556, gd_544, g_str2int_560) && FNC_025(0, g_str2int_444, g_str2int_504, gi_484)) ||
               (g_str2int_260 == 0 || g_str2int_260 == 2 && FNC_004(0, g_str2int_648, g_str2int_592, g_str2int_652, gd_596, g_str2int_560) && FNC_025(0, g_str2int_448, g_str2int_504, gi_488)) ||
               (g_str2int_260 == 4 && FNC_037(0))) li_ret_4 = TRUE;
         }
      }
   }
   return (li_ret_4);
}

int FNC_006() {
   bool li_ret_0 = FALSE;
   int li_4 = MathRound(gd_2060);
   if (gi_1268 != li_4 && gi_1092) {
      FNC_046(8, "FNC_006()", "Èçìåíèëîñü çíà÷åíèå ñïðåäà ñ " + gi_1268 + " íà " + li_4, "Spread value change from " + gi_1268 + " to " + li_4);
      gi_1268 = li_4;
   }
   if (li_4 <= MaxSpreadValue) li_ret_0 = TRUE;
   return (li_ret_0);
}

int FNC_007() {
   bool li_ret_0 = FALSE;
   if (CrossOverMode) return (li_ret_0);
   if (gi_1392 != gd_2136) {
      FNC_046(8, "FNC_007()", "Èçìåíèëîñü çíà÷åíèå FreezeLevel ñ " + gi_1392 + " íà " + gd_2136, "FreezeLevel value change from " + gi_1392 + " to " +
         gd_2136);
      gi_1392 = gd_2136;
   }
   if (g_stoplevel_1396 != g_stoplevel_2128) {
      FNC_046(8, "FNC_007()", "Èçìåíèëîñü çíà÷åíèå StopLevel ñ " + g_stoplevel_1396 + " íà " + g_stoplevel_2128, "StopLevel value change from " + g_stoplevel_1396 + " to " +
         g_stoplevel_2128);
      g_stoplevel_1396 = g_stoplevel_2128;
   }
   return (li_ret_0);
}

bool FNC_008(int ai_0) {
   bool li_ret_4 = FALSE;
   if (gia_2336[ai_0][1] == 1 && !FNC_009(g_str2int_532)) {
      if ((g_str2int_376 && FNC_026(1, g_str2int_452, g_str2int_508, gi_492, "MinProfit") && FNC_023(ai_0, gi_348 - gi_1212 + gi_1240 + gi_1208, "MinProfit")) || (!g_str2int_376 &&
         FNC_026(1, g_str2int_452, g_str2int_508, gi_492, "ChannelClose")) || (FNC_026(1, g_str2int_456, g_str2int_512, gi_496, "ChannelOff") && g_str2int_456 != 0) || (g_str2int_352 && FNC_023(ai_0, FNC_036(ai_0), "OptProfit")) ||
         FNC_024(1)) li_ret_4 = TRUE;
   }
   if (gia_2336[ai_0][1] == 0 && !FNC_009(g_str2int_532)) {
      if ((g_str2int_376 && FNC_026(0, g_str2int_452, g_str2int_508, gi_492, "MinProfit") && FNC_023(ai_0, gi_348 - gi_1212 + gi_1240 + gi_1208, "MinProfit")) || (!g_str2int_376 &&
         FNC_026(0, g_str2int_452, g_str2int_508, gi_492, "ChannelClose")) || (FNC_026(0, g_str2int_456, g_str2int_512, gi_496, "ChannelOff") && g_str2int_456 != 0) || (g_str2int_352 && FNC_023(ai_0, FNC_036(ai_0), "OptProfit")) ||
         FNC_024(0)) li_ret_4 = TRUE;
   }
   return (li_ret_4);
}

bool FNC_009(int ai_unused_0) {
   bool li_ret_4 = FALSE;
   return (li_ret_4);
}

int FNC_010(int ai_0, int a_cmd_4) {
   int l_bool_28;
   int li_32;
   string ls_44;
   double l_price_52;
   double l_ord_open_price_60;
   double l_ord_open_price_68;
   double l_ord_profit_76;
   double l_ord_profit_84;
   string ls_92;
   string ls_100;
   int l_datetime_108;
   int l_datetime_112;
   int l_cmd_116;
   int l_cmd_120;
   double l_ord_lots_124;
   double l_ord_lots_132;
   color l_color_140;
   bool li_144;
   bool li_148;
   bool li_ret_8 = FALSE;
   int li_unused_12 = 0;
   int li_unused_16 = 0;
   int li_unused_20 = 1;
   int l_pos_24 = 0;
   int l_error_40 = -1;
   if (TimeCurrent() - gia_2324[ai_0][5] < gi_204 * gia_2336[ai_0][14] / 1000) return (li_ret_8);
   li_unused_16 = 1;
   int li_36 = GetTickCount();
   if (a_cmd_4 == OP_BUY) ls_44 = "Buy";
   if (a_cmd_4 == OP_SELL) ls_44 = "Sell";
   if (CrossOverMode) ls_44 = "cross-" + ls_44;
   if (FNC_012()) return (li_ret_8);
   if (!CrossOverMode) {
      li_32 = OrdersTotal() - 1;
      for (l_pos_24 = li_32; l_pos_24 >= 0; l_pos_24--) {
         l_bool_28 = OrderSelect(l_pos_24, SELECT_BY_POS, MODE_TRADES);
         if (l_bool_28 > FALSE && OrderMagicNumber() == g_magic_1424 && OrderSymbol() == Symbol() && StringFind(OrderComment(), gsa_2328[ai_0][4]) >= 0) break;
      }
      if (l_bool_28 <= FALSE) {
         FNC_046(9, "FNC_010()", "Close ticket=0 (" + l_bool_28 + "): " + FNC_047(GetLastError()), "Close ticket=0 (" + l_bool_28 + "): " + FNC_047(GetLastError()));
         return (li_ret_8);
      }
      a_cmd_4 = OrderType();
      if (a_cmd_4 == OP_BUY) {
         if (gd_2076 >= gda_2332[ai_0][3] && gda_2332[ai_0][3] > 0.0) return (li_ret_8);
         FNC_074();
         li_ret_8 = FALSE;
         if ((gd_2076 >= gda_2332[ai_0][5] && CheckRepeatClosePrice) || !CheckRepeatClosePrice) li_ret_8 = TRUE;
         if (li_ret_8) gia_2336[ai_0][14]++;
         if (li_ret_8 && gia_2336[ai_0][3] < MinOrderLifeTime && MinOrderLifeTime > 0) {
            li_ret_8 = FALSE;
            l_error_40 = 4300;
         }
         if (li_ret_8 && !IsTradeAllowed()) {
            l_error_40 = 4;
            li_ret_8 = FALSE;
         }
         if (li_ret_8) {
            if (gia_2336[ai_0][14] > 1) {
               FNC_046(8, "FNC_010()", "Ïîâòîð çàêðûòèÿ îðäåðà " + ls_44 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gd_2076, g_digits_2092) + "/" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) +
                  "), ïîïûòêà " + gia_2336[ai_0][14], "Try to reclose " + ls_44 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), trial " + gia_2336[ai_0][14]);
            }
            if (!OrderClose(OrderTicket(), OrderLots(), Bid, g_slippage_332, Blue)) {
               l_error_40 = GetLastError();
               li_ret_8 = FALSE;
            }
         }
      }
      if (a_cmd_4 == OP_SELL) {
         if (gd_2068 <= gda_2332[ai_0][3] && gda_2332[ai_0][3] > 0.0) return (li_ret_8);
         FNC_074();
         li_ret_8 = FALSE;
         if ((gd_2068 <= gda_2332[ai_0][5] && CheckRepeatClosePrice) || !CheckRepeatClosePrice) li_ret_8 = TRUE;
         if (li_ret_8) gia_2336[ai_0][14]++;
         if (li_ret_8 && gia_2336[ai_0][3] < MinOrderLifeTime && MinOrderLifeTime > 0) {
            li_ret_8 = FALSE;
            l_error_40 = 4300;
         }
         if (li_ret_8 && !IsTradeAllowed()) {
            l_error_40 = 4;
            li_ret_8 = FALSE;
         }
         if (li_ret_8) {
            if (gia_2336[ai_0][14] > 1) {
               FNC_046(8, "FNC_010()", "Ïîâòîð çàêðûòèÿ îðäåðà " + ls_44 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gd_2068, g_digits_2092) + "/" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) +
                  "), ïîïûòêà " + gia_2336[ai_0][14], "Try to reclose " + ls_44 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), trial " + gia_2336[ai_0][14]);
            }
            if (!OrderClose(OrderTicket(), OrderLots(), Ask, g_slippage_332, Red)) {
               l_error_40 = GetLastError();
               li_ret_8 = FALSE;
            }
         }
      }
   } else {
      ls_92 = "";
      ls_100 = "";
      li_144 = FALSE;
      li_148 = FALSE;
      li_32 = OrdersTotal() - 1;
      for (l_pos_24 = li_32; l_pos_24 >= 0; l_pos_24--) {
         l_bool_28 = OrderSelect(l_pos_24, SELECT_BY_POS, MODE_TRADES);
         if (l_bool_28 > FALSE && OrderMagicNumber() == g_magic_1424 && OrderSymbol() == g_symbol_2144 && StringFind(OrderComment(), gsa_2328[ai_0][4]) >= 0) {
            l_ord_profit_76 = OrderProfit();
            ls_92 = OrderTicket();
            li_144 = TRUE;
            li_ret_8 = FALSE;
            break;
         }
      }
      if (l_bool_28 <= FALSE) FNC_046(9, "FNC_010()", "crL Close OrderSelect=0", "crL Close OrderSelect=0");
      if (ls_92 != "") {
         li_36 = GetTickCount();
         FNC_095(0);
         while (!li_ret_8) {
            FNC_074();
            if (OrderType() == OP_SELL) l_price_52 = g_ask_2236;
            else l_price_52 = g_bid_2228;
            if (OrderType() == OP_SELL) l_color_140 = Red;
            else l_color_140 = Blue;
            FNC_046(9, "", ls_44 + gsa_2328[ai_0][4] + " çàêðûâàåì îðäåð ïî " + gs_2160 + " " + OrderType() + "(" + OrderTicket() + "," + OrderLots() + "," + l_price_52 + ")", ls_44 +
               gsa_2328[ai_0][4] + " close cross orders " + gs_2160 + " " + OrderType() + "(" + OrderTicket() + "," + OrderLots() + "," + l_price_52 + ")");
            if (IsTradeAllowed()) {
               if (OrderClose(OrderTicket(), OrderLots(), NormalizeDouble(l_price_52, g_digits_2112), g_slippage_332 / gi_1236 * gi_2184, l_color_140)) li_ret_8 = TRUE;
               l_error_40 = GetLastError();
            }
            if (li_ret_8) {
               l_ord_open_price_60 = OrderOpenPrice();
               l_ord_profit_76 = OrderProfit();
               l_datetime_108 = OrderOpenTime();
               l_cmd_116 = OrderType();
               l_ord_lots_124 = OrderLots();
               break;
            }
            if (FNC_095(gi_200)) return (0);
            gia_2336[ai_0][14]++;
            Sleep(gi_204);
            if (gia_2336[ai_0][14] > 0) {
               FNC_046(8, "FNC_010()", "Ïîâòîð çàêðûòèÿ îðäåðà  " + g_symbol_2144 + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), ïîïûòêà " + gia_2336[ai_0][14], "Try to reclose  " +
                  g_symbol_2144 + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), trial " + gia_2336[ai_0][14]);
            }
         }
      }
      for (l_pos_24 = li_32; l_pos_24 >= 0; l_pos_24--) {
         l_bool_28 = OrderSelect(l_pos_24, SELECT_BY_POS, MODE_TRADES);
         if (l_bool_28 > FALSE && OrderMagicNumber() == g_magic_1424 && OrderSymbol() == g_symbol_2152 && StringFind(OrderComment(), gsa_2328[ai_0][4]) >= 0) {
            l_ord_profit_84 = OrderProfit();
            ls_100 = OrderTicket();
            li_ret_8 = FALSE;
            li_148 = TRUE;
            break;
         }
      }
      if (l_bool_28 <= FALSE) FNC_046(9, "FNC_010()", "crR Close ticket=0", "crR Close ticket=0");
      if (ls_100 != "") {
         FNC_095(0);
         while (!li_ret_8) {
            FNC_074();
            ls_100 = OrderTicket();
            if (OrderType() == OP_SELL) l_price_52 = g_ask_2252;
            else l_price_52 = g_bid_2244;
            if (OrderType() == OP_SELL) l_color_140 = Red;
            else l_color_140 = Blue;
            FNC_046(9, "", ls_44 + gsa_2328[ai_0][4] + " çàêðûâàåì îðäåð ïî " + gs_2168 + " " + OrderType() + "(" + OrderTicket() + "," + OrderLots() + "," + l_price_52 + ")", ls_44 +
               gsa_2328[ai_0][4] + " close cross orders " + gs_2168 + " " + OrderType() + "(" + OrderTicket() + "," + OrderLots() + "," + l_price_52 + ")");
            if (IsTradeAllowed()) {
               if (OrderClose(OrderTicket(), OrderLots(), NormalizeDouble(l_price_52, g_digits_2120), g_slippage_332 / gi_1236 * gi_2188, l_color_140)) li_ret_8 = TRUE;
               l_error_40 = GetLastError();
            }
            if (li_ret_8) {
               l_ord_open_price_68 = OrderOpenPrice();
               l_ord_profit_84 = OrderProfit();
               l_datetime_112 = OrderOpenTime();
               l_cmd_120 = OrderType();
               l_ord_lots_132 = OrderLots();
               li_148 = TRUE;
               break;
            }
            if (FNC_095(gi_200)) return (0);
            gia_2336[ai_0][14]++;
            Sleep(gi_204);
            if (gia_2336[ai_0][14] > 0) {
               FNC_046(8, "FNC_010()", "Ïîâòîð çàêðûòèÿ îðäåðà  " + g_symbol_2152 + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), ïîïûòêà " + gia_2336[ai_0][14], "Try to reclose  " +
                  g_symbol_2152 + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), trial " + gia_2336[ai_0][14]);
            }
         }
      }
   }
   gia_2336[ai_0][12] = GetTickCount() - li_36;
   if (li_ret_8) {
      if (CrossOverMode) {
         if (li_144 && li_148) {
            gda_2332[ai_0][1] = FNC_069(l_ord_open_price_60, l_ord_open_price_68);
            gda_2332[ai_0][2] = 0.0;
            gda_2332[ai_0][3] = 0.0;
            gda_2332[ai_0][4] = l_ord_profit_76 + l_ord_profit_84;
            gia_2324[ai_0][0] = 0;
            if (l_datetime_108 > l_datetime_112) gia_2324[ai_0][1] = l_datetime_108;
            else gia_2324[ai_0][1] = l_datetime_112;
            gia_2336[ai_0][1] = FNC_070(l_cmd_116, l_cmd_120);
            gia_2336[ai_0][2] = OrderMagicNumber();
            gsa_2328[ai_0][0] = ls_92 + "/" + ls_100;
            gsa_2328[ai_0][1] = g_symbol_2144 + "/" + g_symbol_2152;
            gsa_2328[ai_0][2] = gs_2160 + "/" + gs_2168;
            gda_2332[ai_0][7] = l_ord_lots_124;
            gia_2336[ai_0][3] = TimeCurrent() - gia_2324[ai_0][1];
            if (gia_2336[ai_0][1] == 1) gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][6]) / g_point_2084);
            if (gia_2336[ai_0][1] == 0) gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][6] - gda_2332[ai_0][1]) / g_point_2084);
            gia_2324[ai_0][3] = Time[0];
            gia_2336[ai_0][7] = gd_2060;
            gia_2336[ai_0][8] = gi_1244;
            gia_2336[ai_0][12] = GetTickCount() - li_36;
            li_ret_8 = TRUE;
         }
      } else {
         gda_2332[ai_0][1] = OrderOpenPrice();
         gda_2332[ai_0][2] = OrderStopLoss();
         gda_2332[ai_0][3] = OrderTakeProfit();
         gda_2332[ai_0][4] = OrderProfit();
         gia_2324[ai_0][1] = OrderOpenTime();
         gia_2336[ai_0][1] = OrderType();
         gia_2336[ai_0][2] = OrderMagicNumber();
         gsa_2328[ai_0][0] = OrderTicket();
         gsa_2328[ai_0][1] = OrderSymbol();
         gsa_2328[ai_0][2] = gs_1924;
         gda_2332[ai_0][7] = OrderLots();
         if (gia_2336[ai_0][1] == 1) gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][6]) / g_point_2084);
         if (gia_2336[ai_0][1] == 0) gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][6] - gda_2332[ai_0][1]) / g_point_2084);
         gia_2324[ai_0][3] = Time[0];
         gia_2336[ai_0][7] = gd_2060;
         gia_2336[ai_0][8] = gi_1244;
         gia_2336[ai_0][12] = GetTickCount() - li_36;
         li_ret_8 = TRUE;
         gi_unused_1684 = 0;
      }
   } else {
      if (!gi_1816) {
         if (l_error_40 > -1) {
            if (l_error_40 == 4/* SERVER_BUSY */) {
               if (!gi_1116) {
                  FNC_046(8, "FNC_010()", "Îøèáêà çàêðûòèÿ îðäåðà " + ls_44 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "): òîðãîâûé ïîòîê çàíÿò", "Error to close " +
                     ls_44 + gsa_2328[ai_0][4] + " order" + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "): Trade context busy");
               } else {
                  FNC_046(9, "FNC_010()", "Îøèáêà çàêðûòèÿ îðäåðà " + ls_44 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "): òîðãîâûé ïîòîê çàíÿò", "Error to close " +
                     ls_44 + gsa_2328[ai_0][4] + " order" + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "): Trade context busy");
               }
            } else {
               if (l_error_40 == 4300) {
                  FNC_046(8, "FNC_010()", "Îøèáêà çàêðûòèÿ îðäåðà " + ls_44 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "): ïðîäîëæèòåëüíîñòü ñäåëêè ìåíåå " +
                     MinOrderLifeTime + "ñ", "Error to close " + ls_44 + gsa_2328[ai_0][4] + " order" + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "): order lifetime is less then " + MinOrderLifeTime + "c");
               } else {
                  FNC_046(8, "FNC_010()", "Îøèáêà çàêðûòèÿ îðäåðà " + ls_44 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "): " + FNC_047(l_error_40), "Error to close " +
                     ls_44 + gsa_2328[ai_0][4] + " order" + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "): " + FNC_047(l_error_40));
               }
            }
         }
      }
   }
   return (li_ret_8);
}

bool FNC_011(int ai_0, int a_cmd_4, int ai_8, int ai_12) {
   int li_28;
   string ls_92;
   int l_cmd_108;
   int l_cmd_112;
   double l_lots_116;
   double l_lots_124;
   double l_ord_open_price_132;
   double l_ord_open_price_140;
   int l_ticket_148;
   int l_ticket_152;
   color l_color_156;
   int l_ticket_16 = 0;
   int l_error_24 = 9999;
   bool li_ret_32 = FALSE;
   bool li_36 = TRUE;
   bool li_40 = TRUE;
   if (TimeCurrent() - gia_2324[ai_0][4] < gi_204 * gia_2336[ai_0][13] / 1000) return (li_ret_32);
   double ld_unused_52 = gd_2068;
   double ld_unused_60 = gd_2076;
   double l_price_68 = ai_8 / 10.0;
   double l_price_76 = ai_12 / 10.0;
   string ls_84 = "";
   string ls_100 = "";
   if (gi_1728) ls_100 = "(res)";
   if (a_cmd_4 == OP_BUY) ls_92 = "Buy";
   if (a_cmd_4 == OP_SELL) ls_92 = "Sell";
   if (CrossOverMode) ls_92 = "cross-" + ls_92;
   double l_lots_44 = FNC_033(gs_1924);
   if (!CrossOverMode) {
      if (l_price_68 != 0.0 && !InvisibleStopLoss) {
         if (l_price_68 < g_stoplevel_2128) l_price_68 = g_stoplevel_2128;
         if (a_cmd_4 == OP_BUY) l_price_68 = NormalizeDouble(gd_2076 + l_price_68 * g_point_2084, g_digits_2092);
         if (a_cmd_4 == OP_SELL) l_price_68 = NormalizeDouble(gd_2076 + l_price_68 * g_point_2084, g_digits_2092);
      }
      if (l_price_76 != 0.0) {
         if (l_price_76 < g_stoplevel_2128) l_price_76 = g_stoplevel_2128;
         if (a_cmd_4 == OP_BUY) l_price_76 = NormalizeDouble(gd_2076 - l_price_76 * g_point_2084, g_digits_2092);
         if (a_cmd_4 == OP_SELL) l_price_76 = NormalizeDouble(gd_2076 - l_price_76 * g_point_2084, g_digits_2092);
      }
      if (g_str2int_276 && !gi_960) {
         l_price_68 = 0;
         l_price_76 = 0;
      }
   }
   if ((TimeCurrent() - gia_2324[ai_0][4]) / 60 > g_str2int_308) {
      FNC_046(8, "FNC_011()", "Íå óäàëîñü ïîâòîðèòü îòêðûòèå îðäåðà " + ls_92 + gsa_2328[ai_0][4] + ", èñòåêëî âðåìÿ îæèäàíèÿ ïîâòîðà", "Unable to reopen " + ls_92 + gsa_2328[ai_0][4] +
         " order, time is over");
      FNC_030("OSbuffer", ai_0);
      return (li_ret_32);
   }
   if (a_cmd_4 == OP_BUY) li_28 = MathRound((gd_2076 - gda_2332[ai_0][6]) / g_point_2084);
   if (a_cmd_4 == OP_SELL) li_28 = MathRound((gda_2332[ai_0][6] - gd_2068) / g_point_2084);
   if (li_28 >= gi_356 && gi_356 > 0) {
      FNC_046(8, "FNC_011()", "Íå óäàëîñü ïîâòîðèòü îòêðûòèå îðäåðà " + ls_92 + gsa_2328[ai_0][4] + ", ïðîôèò îòðàáîòàí (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) +
         ")", "Unable to reopen " + ls_92 + gsa_2328[ai_0][4] + " order, profit worked by (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) + ")");
      FNC_030("OSbuffer", ai_0);
      return (li_ret_32);
   }
   if (a_cmd_4 == OP_BUY)
      if (gd_2068 > gda_2332[ai_0][6]) return (li_ret_32);
   if (a_cmd_4 == OP_SELL)
      if (gd_2076 < gda_2332[ai_0][6]) return (li_ret_32);
   gia_2336[ai_0][13]++;
   if (gia_2336[ai_0][13] > 1) {
      if (a_cmd_4 == OP_BUY) {
         FNC_046(8, "FNC_011()", "Ïîâòîð îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gd_2068, g_digits_2092) + "/" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) +
            "), ïîïûòêà " + gia_2336[ai_0][13], "Try to reopen " + ls_92 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) + "), trial " + gia_2336[ai_0][13]);
      }
      if (a_cmd_4 == OP_SELL) {
         FNC_046(8, "FNC_011()", "Ïîâòîð îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gd_2076, g_digits_2092) + "/" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) +
            "), ïîïûòêà " + gia_2336[ai_0][13], "Try to reopen " + ls_92 + gsa_2328[ai_0][4] + " (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) + "), trial " + gia_2336[ai_0][13]);
      }
   }
   if (l_lots_44 <= 0.0) {
      FNC_046(9, "FNC_011()", "Îøèáêà îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + " : Íåäîñòàòî÷íî äåíåã", "Error open " + ls_92 + gsa_2328[ai_0][4] + " order : Not enough money");
      return (FALSE);
   }
   if (!IsTradeAllowed()) {
      if (!gi_1116) FNC_046(8, "FNC_011()", "Îøèáêà îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + " : òîðãîâûé ïîòîê çàíÿò", "Error open " + ls_92 + gsa_2328[ai_0][4] + " order : Trade context busy");
      else FNC_046(9, "FNC_011()", "Îøèáêà îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + " : òîðãîâûé ïîòîê çàíÿò", "Error open " + ls_92 + gsa_2328[ai_0][4] + " order : Trade context busy");
      return (FALSE);
   }
   int li_20 = GetTickCount();
   if (!CrossOverMode) {
      l_ticket_16 = -1;
      if (a_cmd_4 == OP_BUY) l_ticket_16 = OrderSend(Symbol(), a_cmd_4, l_lots_44, Ask, g_slippage_328, l_price_68, l_price_76, "euronis" + gsa_2328[ai_0][4] + ls_100, g_magic_1424, 0, Blue);
      if (a_cmd_4 == OP_SELL) l_ticket_16 = OrderSend(Symbol(), a_cmd_4, l_lots_44, Bid, g_slippage_328, l_price_68, l_price_76, "euronis" + gsa_2328[ai_0][4] + ls_100, g_magic_1424, 0, Red);
      if (l_ticket_16 >= 0) {
         if (OrderSelect(l_ticket_16, SELECT_BY_TICKET, MODE_TRADES)) {
            gda_2332[ai_0][0] = 0.0;
            gda_2332[ai_0][1] = OrderOpenPrice();
            gda_2332[ai_0][2] = OrderStopLoss();
            gda_2332[ai_0][3] = OrderTakeProfit();
            gda_2332[ai_0][4] = OrderProfit();
            gia_2324[ai_0][1] = OrderOpenTime();
            if (a_cmd_4 == OP_BUY) gia_2336[ai_0][10] = MathRound((gd_2076 - OrderOpenPrice()) / g_point_2084);
            if (a_cmd_4 == OP_SELL) gia_2336[ai_0][10] = MathRound((OrderOpenPrice() - gd_2068) / g_point_2084);
            gia_2336[ai_0][1] = OrderType();
            gia_2336[ai_0][2] = OrderMagicNumber();
            gsa_2328[ai_0][0] = OrderTicket();
            gsa_2328[ai_0][1] = OrderSymbol();
            gsa_2328[ai_0][2] = gs_1924;
            gda_2332[ai_0][7] = OrderLots();
            gda_2332[ai_0][5] = 0.0;
            gia_2324[ai_0][0] = OrderCloseTime();
            gia_2324[ai_0][2] = Time[0];
            gia_2324[ai_0][5] = 0;
            gia_2336[ai_0][3] = 0;
            if (a_cmd_4 == OP_SELL) gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][6]) / g_point_2084);
            if (a_cmd_4 == OP_BUY) gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][6] - gda_2332[ai_0][1]) / g_point_2084);
            gia_2336[ai_0][5] = 0;
            gia_2336[ai_0][6] = gd_2060;
            gia_2336[ai_0][7] = 0;
            gia_2336[ai_0][8] = gi_1244;
            gia_2336[ai_0][9] = 0;
            gia_2336[ai_0][11] = GetTickCount() - li_20;
            gia_2336[ai_0][12] = 0;
            gia_2336[ai_0][14] = 0;
            if (a_cmd_4 == OP_BUY) gi_1212 = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][6]) / g_point_2084);
            if (a_cmd_4 == OP_SELL) gi_1212 = MathRound((gda_2332[ai_0][6] - gda_2332[ai_0][1]) / g_point_2084);
            gi_unused_1372 = Bars;
            gd_unused_1516 = 0;
            if (gi_1172) {
               if (gi_1212 > gi_356) gi_1212 = gi_356;
               ls_84 = ls_84 + ", SlippageCorrection=" + (-1 * gi_1212);
            } else gi_1212 = 0;
            if (gi_1176) ls_84 = ls_84 + ", SpreadDifference=" + gi_1244;
            if (UseCommissionCorrection) ls_84 = ls_84 + ", CommissionCorrection=" + gi_1208;
            FNC_046(8, "FNC_011()", "Îòêðûò " + ls_92 + gsa_2328[ai_0][4] + " îðäåð : " + DoubleToStr(gda_2332[ai_0][1], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) +
               ")" + ", Lots=" + DoubleToStr(gda_2332[ai_0][7], 2) + ", Slippage=" + gia_2336[ai_0][4] + ", Spread=" + gia_2336[ai_0][6] + ls_84, "" + ls_92 + gsa_2328[ai_0][4] + " order opened : " + DoubleToStr(gda_2332[ai_0][1], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) + ")" + ", Lots=" + DoubleToStr(gda_2332[ai_0][7], 2) + ", Slippage=" + gia_2336[ai_0][4] + ", Spread=" + gia_2336[ai_0][6] + ls_84);
            li_ret_32 = TRUE;
         } else FNC_046(9, "FNC_011()", "Open OrderSelect=0 (" + l_ticket_16 + "): " + FNC_047(GetLastError()), "Open OrderSelect=0 (" + l_ticket_16 + "): " + FNC_047(GetLastError()));
      } else l_error_24 = GetLastError();
   } else {
      li_ret_32 = FALSE;
      FNC_074();
      l_cmd_108 = FNC_071(g_symbol_2144, a_cmd_4);
      l_cmd_112 = FNC_071(g_symbol_2152, a_cmd_4);
      l_lots_116 = FNC_033(gs_1924);
      l_lots_124 = gd_1548 * MathRound(l_lots_116 * FNC_035(gs_2168) / gd_1548);
      if (l_lots_124 < gd_1556) l_lots_124 = gd_1556;
      if (l_lots_124 > gd_104) l_lots_124 = gd_104;
      if (l_cmd_108 == OP_SELL) l_color_156 = Red;
      else l_color_156 = Blue;
      FNC_046(9, "", "Îòêðûâàåì îðäåð ïî ëåâîé ïàðå (" + g_symbol_2144 + "," + l_cmd_108 + "," + l_lots_116 + "," + FNC_072(g_symbol_2144, a_cmd_4) + ")", "Open left pair order (" +
         g_symbol_2144 + "," + l_cmd_108 + "," + l_lots_116 + "," + FNC_072(g_symbol_2144, a_cmd_4) + ")");
      l_ticket_16 = -1;
      l_ticket_16 = OrderSend(g_symbol_2144, l_cmd_108, l_lots_116, FNC_072(g_symbol_2144, a_cmd_4), g_slippage_328 / gi_1236 * gi_2184, 0, 0, "cr" + gs_1924 + "_" + "euronis" +
         gsa_2328[ai_0][4] + ls_100, g_magic_1424, 0, l_color_156);
      l_error_24 = GetLastError();
      if (l_ticket_16 >= 0) {
         li_ret_32 = FALSE;
         FNC_095(0);
         while (!li_ret_32) {
            if (OrderSelect(l_ticket_16, SELECT_BY_TICKET, MODE_TRADES)) {
               l_ord_open_price_132 = OrderOpenPrice();
               l_ticket_148 = OrderTicket();
               li_ret_32 = TRUE;
            } else {
               FNC_046(9, "FNC_011()", "crL Open OrderSelect=0 (" + l_ticket_16 + "): " + FNC_047(GetLastError()), "crL Open OrderSelect=0 (" + l_ticket_16 + "): " + FNC_047(GetLastError()));
               if (FNC_095(gi_200)) return (FALSE);
               Sleep(500);
            }
         }
         li_ret_32 = FALSE;
         l_ticket_16 = -1;
         FNC_095(0);
         while (!li_ret_32) {
            FNC_074();
            FNC_046(9, "", "Îòêðûâàåì îðäåð ïî ïðàâîé ïàðå " + l_cmd_112 + "(" + g_symbol_2152 + "," + l_cmd_112 + "," + l_lots_124 + "," + FNC_072(g_symbol_2152, a_cmd_4) + ")", "Open right pair order " +
               l_cmd_112 + "(" + g_symbol_2152 + "," + l_cmd_112 + "," + l_lots_124 + "," + FNC_072(g_symbol_2152, a_cmd_4) + ")");
            if (l_cmd_112 == OP_SELL) l_color_156 = Red;
            else l_color_156 = Blue;
            l_ticket_16 = OrderSend(g_symbol_2152, l_cmd_112, l_lots_124, FNC_072(g_symbol_2152, a_cmd_4), g_slippage_328 / gi_1236 * gi_2188, 0, 0, "cr" + gs_1924 + "_" + "euronis" +
               gsa_2328[ai_0][4] + ls_100, g_magic_1424, 0, l_color_156);
            l_error_24 = GetLastError();
            if (l_ticket_16 < 0) {
               FNC_046(9, "", "SELL ïî ïðàâîé ïàðå íå îòêðûëñÿ : " + FNC_047(l_error_24), "SELL right pair order is not opened : " + FNC_047(l_error_24));
               gia_2336[ai_0][13]++;
               if (FNC_095(gi_200)) return (FALSE);
               Sleep(gi_204);
            } else li_ret_32 = TRUE;
         }
         li_ret_32 = FALSE;
         FNC_095(0);
         while (!li_ret_32) {
            if (OrderSelect(l_ticket_16, SELECT_BY_TICKET, MODE_TRADES)) {
               li_ret_32 = TRUE;
               l_ord_open_price_140 = OrderOpenPrice();
               l_ticket_152 = OrderTicket();
               gda_2332[ai_0][1] = FNC_069(l_ord_open_price_132, l_ord_open_price_140);
               gda_2332[ai_0][4] = 0.0;
               gia_2324[ai_0][1] = OrderOpenTime();
               if (a_cmd_4 == OP_BUY) gia_2336[ai_0][10] = MathRound((gd_2076 - gda_2332[ai_0][1]) / g_point_2084);
               if (a_cmd_4 == OP_SELL) gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][1] - gd_2068) / g_point_2084);
               gia_2336[ai_0][1] = a_cmd_4;
               gia_2336[ai_0][2] = OrderMagicNumber();
               gsa_2328[ai_0][0] = l_ticket_148 + "/" + l_ticket_152;
               gsa_2328[ai_0][1] = g_symbol_2144 + "/" + g_symbol_2152;
               gsa_2328[ai_0][2] = gs_2160 + "/" + gs_2168;
               gda_2332[ai_0][7] = l_lots_116;
               gia_2324[ai_0][2] = Time[0];
               gia_2336[ai_0][3] = 0;
               if (a_cmd_4 == OP_SELL) gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][6]) / g_point_2084);
               if (a_cmd_4 == OP_BUY) gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][6] - gda_2332[ai_0][1]) / g_point_2084);
               gia_2336[ai_0][6] = gd_2060;
               gia_2336[ai_0][8] = gi_1244;
               gia_2336[ai_0][11] = GetTickCount() - li_20;
               if (a_cmd_4 == OP_BUY) gi_1212 = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][6]) / g_point_2084);
               if (a_cmd_4 == OP_SELL) gi_1212 = MathRound((gda_2332[ai_0][6] - gda_2332[ai_0][1]) / g_point_2084);
               gi_unused_1372 = Bars;
               gd_unused_1516 = 0;
               if (gi_1172) {
                  if (gi_1212 > gi_356) gi_1212 = gi_356;
                  ls_84 = ls_84 + ", SlippageCorrection=" + (-1 * gi_1212);
               } else gi_1212 = 0;
               if (gi_1176) ls_84 = ls_84 + ", SpreadDifference=" + gi_1244;
               if (UseCommissionCorrection) ls_84 = ls_84 + ", CommissionCorrection=" + gi_1208;
               FNC_046(8, "FNC_011()", "Îòêðûò " + ls_92 + gsa_2328[ai_0][4] + " îðäåð : " + DoubleToStr(gda_2332[ai_0][1], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) +
                  ")" + ", Lots=" + DoubleToStr(gda_2332[ai_0][7], 2) + ", Slippage=" + gia_2336[ai_0][4] + ", Spread=" + gia_2336[ai_0][6] + ls_84, "" + ls_92 + gsa_2328[ai_0][4] + " order opened : " + DoubleToStr(gda_2332[ai_0][1], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) + ")" + ", Lots=" + DoubleToStr(gda_2332[ai_0][7], 2) + ", Slippage=" + gia_2336[ai_0][4] + ", Spread=" + gia_2336[ai_0][6] + ls_84);
            } else {
               FNC_046(9, "FNC_011()", "crR Open OrderSelect=0 (" + l_ticket_16 + "): " + FNC_047(GetLastError()), "crR Open OrderSelect=0 (" + l_ticket_16 + "): " + FNC_047(GetLastError()));
               if (FNC_095(gi_200)) return (FALSE);
               Sleep(500);
            }
         }
      } else FNC_046(9, "", "SELL ïî ëåâîé ïàðå íå îòêðûëñÿ", "SELL left pair order is not opened");
   }
   if (!li_ret_32) {
      if (g_str2int_304) {
         if (li_36) {
            FNC_046(8, "FNC_011()", "Îøèáêà îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + ", îæèäàíèå ïîâòîðà : " + FNC_047(l_error_24) + " (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) +
               ")", "Error open " + ls_92 + gsa_2328[ai_0][4] + " order, waiting for repeat : " + FNC_047(l_error_24) + " (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) + ")");
         } else {
            if (!gi_1116) {
               FNC_046(8, "FNC_011()", "Îøèáêà îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + ", îæèäàíèå ïîâòîðà : òîðãîâûé ïîòîê çàíÿò", "Error open " + ls_92 + gsa_2328[ai_0][4] +
                  " order, waiting for repeat : Trade context busy");
            } else {
               FNC_046(9, "FNC_011()", "Îøèáêà îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + ", îæèäàíèå ïîâòîðà : òîðãîâûé ïîòîê çàíÿò", "Error open " + ls_92 + gsa_2328[ai_0][4] +
                  " order, waiting for repeat : Trade context busy");
            }
         }
      } else {
         if (li_36) {
            if (li_40) {
               FNC_046(8, "FNC_011()", "Îøèáêà îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + " : " + FNC_047(l_error_24) + " (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) +
                  ")", "Error open " + ls_92 + gsa_2328[ai_0][4] + " order : " + FNC_047(l_error_24) + " (" + DoubleToStr(gda_2332[ai_0][6], g_digits_2092) + ")");
            } else FNC_046(8, "FNC_011()", "Îøèáêà îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + " : èçìåíèëàñü öåíà", "Error open " + ls_92 + gsa_2328[ai_0][4] + " order : rate changed");
         } else {
            if (!gi_1116) FNC_046(8, "FNC_011()", "Îøèáêà îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + " : òîðãîâûé ïîòîê çàíÿò", "Error open " + ls_92 + gsa_2328[ai_0][4] + " order : Trade context busy");
            else FNC_046(9, "FNC_011()", "Îøèáêà îòêðûòèÿ îðäåðà " + ls_92 + gsa_2328[ai_0][4] + " : òîðãîâûé ïîòîê çàíÿò", "Error open " + ls_92 + gsa_2328[ai_0][4] + " order : Trade context busy");
         }
      }
   }
   return (li_ret_32);
}

bool FNC_012() {
   double ld_4;
   double ld_12;
   bool li_ret_0 = FALSE;
   if (g_str2int_364) {
      if (OrderStopLoss() != 0.0 || OrderTakeProfit() != 0.0) {
         if (OrderType() == OP_BUY) ld_4 = gd_2076;
         if (OrderType() == OP_SELL) ld_4 = gd_2068;
         ld_12 = gd_2136 * g_point_2084;
         if (OrderStopLoss() != 0.0 && ld_12 > MathAbs(ld_4 - OrderStopLoss())) li_ret_0 = TRUE;
         if (OrderTakeProfit() != 0.0 && ld_12 > MathAbs(ld_4 - OrderTakeProfit())) li_ret_0 = TRUE;
      }
   }
   return (li_ret_0);
}

int FNC_013(int ai_0, int ai_4) {
   string l_name_8;
   color l_color_16;
   color l_color_20;
   int li_24;
   if (!IsOptimization()) {
      if (ai_4 == 95) {
         if (gia_2336[ai_0][1] == 0) {
            li_24 = 1;
            l_color_20 = Blue;
            l_name_8 = "Open " + gsa_2328[ai_0][0] + " buy  " + gs_1924 + " " + DoubleToStr(gda_2332[ai_0][7], 2) + " at " + DoubleToStr(gda_2332[ai_0][1], g_digits_2092);
            if (CrossOverMode) l_name_8 = "Open " + gsa_2328[ai_0][0] + " crbuy  " + gs_2160 + "/" + gs_2168 + " " + DoubleToStr(gda_2332[ai_0][7], 2) + " at " + DoubleToStr(gda_2332[ai_0][1], g_digits_2092);
         }
         if (gia_2336[ai_0][1] == 1) {
            li_24 = 2;
            l_color_20 = Red;
            l_name_8 = "Open " + gsa_2328[ai_0][0] + " sell  " + gs_1924 + " " + DoubleToStr(gda_2332[ai_0][7], 2) + " at " + DoubleToStr(gda_2332[ai_0][1], g_digits_2092);
            if (CrossOverMode) l_name_8 = "Open " + gsa_2328[ai_0][0] + " crsell  " + gs_2160 + "/" + gs_2168 + " " + DoubleToStr(gda_2332[ai_0][7], 2) + " at " + DoubleToStr(gda_2332[ai_0][1], g_digits_2092);
         }
         if (!ObjectCreate(l_name_8, OBJ_ARROW, 0, gia_2324[ai_0][1], gda_2332[ai_0][1])) FNC_046(9, "FNC_013()", "ObjectCreate îøèáêà: " + FNC_047(GetLastError()), "ObjectCreate error: " + FNC_047(GetLastError()));
         if (!ObjectSet(l_name_8, OBJPROP_ARROWCODE, li_24)) FNC_046(9, "FNC_013()", "ObjectSet(OBJPROP_ARROWCODE," + li_24 + ") îøèáêà: " + FNC_047(GetLastError()), "ObjectSet(OBJPROP_ARROWCODE," + li_24 + ") error: " + FNC_047(GetLastError()));
         if (!ObjectSet(l_name_8, OBJPROP_COLOR, l_color_20)) FNC_046(9, "FNC_013()", "ObjectSet(OBJPROP_COLOR," + l_color_16 + ") îøèáêà: " + FNC_047(GetLastError()), "ObjectSet(OBJPROP_COLOR," + l_color_16 + ") error: " + FNC_047(GetLastError()));
      }
      if (ai_4 == 94 || ai_4 == 98) {
         if (gia_2336[ai_0][1] == 0) {
            li_24 = 3;
            l_color_16 = Blue;
            l_color_20 = Blue;
            l_name_8 = "Close " + gsa_2328[ai_0][0] + " buy  " + gs_1924 + " " + DoubleToStr(gda_2332[ai_0][7], 2) + " at " + DoubleToStr(gda_2332[ai_0][0], g_digits_2092);
            if (CrossOverMode) l_name_8 = "Close " + gsa_2328[ai_0][0] + " crbuy  " + gs_2160 + "/" + gs_2168 + " " + DoubleToStr(gda_2332[ai_0][7], 2) + " at " + DoubleToStr(gda_2332[ai_0][0], g_digits_2092);
         }
         if (gia_2336[ai_0][1] == 1) {
            li_24 = 3;
            l_color_16 = Red;
            l_color_20 = Red;
            l_name_8 = "Close " + gsa_2328[ai_0][0] + " sell  " + gs_1924 + " " + DoubleToStr(gda_2332[ai_0][7], 2) + " at " + DoubleToStr(gda_2332[ai_0][0], g_digits_2092);
            if (CrossOverMode) l_name_8 = "Close " + gsa_2328[ai_0][0] + " crsell  " + gs_2160 + "/" + gs_2168 + " " + DoubleToStr(gda_2332[ai_0][7], 2) + " at " + DoubleToStr(gda_2332[ai_0][0], g_digits_2092);
         }
         if (ai_4 == 94) l_color_20 = Black;
         if (!ObjectCreate(l_name_8, OBJ_ARROW, 0, gia_2324[ai_0][0], gda_2332[ai_0][0])) FNC_046(9, "FNC_013()", "ObjectCreate îøèáêà: " + FNC_047(GetLastError()), "ObjectCreate error: " + FNC_047(GetLastError()));
         if (!ObjectSet(l_name_8, OBJPROP_ARROWCODE, li_24)) FNC_046(9, "FNC_013()", "ObjectSet(OBJPROP_ARROWCODE," + li_24 + ") îøèáêà: " + FNC_047(GetLastError()), "ObjectSet(OBJPROP_ARROWCODE," + li_24 + ") error: " + FNC_047(GetLastError()));
         if (!ObjectSet(l_name_8, OBJPROP_COLOR, l_color_20)) FNC_046(9, "FNC_013()", "ObjectSet(OBJPROP_COLOR," + l_color_16 + ") îøèáêà: " + FNC_047(GetLastError()), "ObjectSet(OBJPROP_COLOR," + l_color_16 + ") error: " + FNC_047(GetLastError()));
         l_name_8 = gsa_2328[ai_0][0] + DoubleToStr(gda_2332[ai_0][1], g_digits_2092) + "->" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092);
         ObjectCreate(l_name_8, OBJ_TREND, 0, gia_2324[ai_0][1], gda_2332[ai_0][1], gia_2324[ai_0][0], gda_2332[ai_0][0]);
         ObjectSet(l_name_8, OBJPROP_STYLE, STYLE_DOT);
         ObjectSet(l_name_8, OBJPROP_WIDTH, 1);
         ObjectSet(l_name_8, OBJPROP_RAY, FALSE);
         ObjectSet(l_name_8, OBJPROP_COLOR, l_color_16);
      }
   }
   return (1);
}

string FNC_014(int ai_0) {
   if (TimeDayOfWeek(ai_0) == 0) return ("âñ");
   if (TimeDayOfWeek(ai_0) == 1) return ("ïí");
   if (TimeDayOfWeek(ai_0) == 2) return ("âò");
   if (TimeDayOfWeek(ai_0) == 3) return ("ñð");
   if (TimeDayOfWeek(ai_0) == 4) return ("÷ò");
   if (TimeDayOfWeek(ai_0) == 5) return ("ïò");
   if (TimeDayOfWeek(ai_0) == 6) return ("ñá");
   return ("");
}

bool FNC_015() {
   bool li_ret_0 = FALSE;
   if (Time[0] != g_time_1364) {
      g_time_1364 = Time[0];
      li_ret_0 = TRUE;
   }
   return (li_ret_0);
}

bool FNC_016() {
   bool li_ret_0 = FALSE;
   if (Hour() != gi_1360) {
      gi_1360 = Hour();
      li_ret_0 = TRUE;
   }
   return (li_ret_0);
}

bool FNC_017() {
   bool li_ret_0 = FALSE;
   if (DayOfWeek() != g_day_of_week_1344) {
      g_day_of_week_1344 = DayOfWeek();
      li_ret_0 = TRUE;
   }
   return (li_ret_0);
}

int FNC_018() {
   bool li_ret_0 = FALSE;
   if (SWChangeMode == 1 || SWChangeMode == 3) {
      if (TimeCurrent() > gi_1832 && TimeCurrent() < gi_1844) li_ret_0 = TRUE;
      if (TimeCurrent() > gi_1848 && TimeCurrent() < gi_1836) li_ret_0 = TRUE;
   }
   if (SWChangeMode == 2)
      if (TimeCurrent() > gi_1832 || TimeCurrent() < gi_1836) li_ret_0 = TRUE;
   return (li_ret_0);
}

int FNC_019() {
   FNC_082();
   if (FNC_017()) {
   }
   if (g_minute_1440 != TimeMinute(gi_1820)) {
      g_minute_1440 = TimeMinute(gi_1820);
      if (Language == "eng") gs_1972 = "Trade time CET " + TimeToStr(gi_1820, TIME_MINUTES);
      else gs_1972 = "Òîðãîâîå âðåìÿ CET (MSK-2) " + TimeToStr(gi_1820, TIME_MINUTES);
      gs_1972 = gs_1972 
      + "\n";
      FNC_046(7, "", "", "");
   }
   FNC_083();
   FNC_080();
   FNC_021();
   FNC_088(g_period_540, 1, g_ma_method_552, g_applied_price_556);
   double l_ima_0 = iMA(NULL, 0, g_period_540, 0, g_ma_method_552, g_applied_price_556, 1);
   if (IsOptimization() && !TradeHourOptimization) {
      if (OpenHourAM > 12) return (0);
      if (CloseHourAM > 12) return (0);
      if (OpenHourPM < 12) return (0);
      if (CloseHourPM < 12) return (0);
      if (OpenHourAM > CloseHourAM || OpenHourPM > CloseHourPM) return (0);
   }
   FNC_041(0);
   g_bool_1716 = IsTradeAllowed();
   if (!g_bool_1744 && IsConnected()) FNC_046(9, "FNC_019()", "Ñâÿçü ñ òîðãîâûì ñåðâåðîì óñòàíîâëåíà", "Connected");
   if (g_bool_1744 && !IsConnected()) FNC_046(9, "FNC_019()", "Íåò ñâÿçè ñ òîðãîâûì ñåðâåðîì", "Not connected");
   g_bool_1744 = IsConnected();
   FNC_007();
   int li_8 = gi_1740;
   gi_1740 = FALSE;
   if (!FNC_078()) gi_1740 = TRUE;
   if (!li_8 && gi_1740) FNC_046(9, "FNC_078()", "Òîðãîâëÿ çàáëîêèðîâàíà: Îæèäàåòñÿ çàãðóçêà èñòîðèè", "Trade is disabled: No history");
   if (li_8 && !gi_1740) FNC_046(9, "FNC_078()", "Òîðãîâëÿ ðàçðåøåíà: Èñòîðèÿ çàãðóæåíà", "Trade allowed: History loaded");
   li_8 = gi_1708;
   gi_1708 = FALSE;
   if (!FNC_038()) gi_1708 = TRUE;
   li_8 = gi_1688;
   gi_1688 = FALSE;
   if (!FNC_006()) gi_1688 = TRUE;
   if (!li_8 && gi_1688) {
      if (gi_1092) {
         FNC_046(8, "FNC_006()", "Òîðãîâëÿ çàáëîêèðîâàíà: Ïðåâûøåí ðàçìåð ñïðåäà (Spread=" + DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) + ")", "Trade is disabled: High spread value (Spread=" +
            DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) + ")");
      } else {
         FNC_046(9, "FNC_006()", "Òîðãîâëÿ çàáëîêèðîâàíà: Ïðåâûøåí ðàçìåð ñïðåäà (Spread=" + DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) + ")", "Trade is disabled: High spread value (Spread=" +
            DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) + ")");
      }
   }
   if (li_8 && !gi_1688) {
      if (gi_1092) {
         FNC_046(8, "FNC_006()", "Òîðãîâëÿ ðàçðåøåíà (Spread=" + DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) + ")", "Trade allowed (Spread=" + DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) +
            ")");
      } else {
         FNC_046(9, "FNC_006()", "Òîðãîâëÿ ðàçðåøåíà (Spread=" + DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) + ")", "Trade allowed (Spread=" + DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) +
            ")");
      }
   }
   FNC_061(g_hour_1468);
   FNC_022();
   FNC_020();
   if (FNC_015()) gd_1572 = NormalizeDouble(100000.0 * (0.95 * FNC_063(0)) / MarketInfo(Symbol(), MODE_LOTSIZE), 2);
   if (FNC_016()) {
      li_8 = gi_1712;
      gi_1712 = FALSE;
      if (!FNC_027(gi_1820)) gi_1712 = TRUE;
      if (!li_8 && gi_1712) {
         FNC_046(8, "FNC_027()", "Òîðãîâëÿ çàáëîêèðîâàíà: Òîðãîâîå âðåìÿ âûøëî", "Trade is disabled: Trade time is over");
         gi_1768 = FALSE;
      }
      if (li_8 && !gi_1712) {
         gi_1272 = FALSE;
         FNC_046(8, "FNC_027()", "Òîðãîâëÿ ðàçðåøåíà: Òîðãîâîå âðåìÿ íà÷àëîñü", "Trade allowed: Trade time is started");
      }
   }
   FNC_054();
   if (!gi_1772 && gi_1768) {
      FNC_046(8, "FNC_054()", "Òîðãîâëÿ çàáëîêèðîâàíà äî ñëåäóþùåé òîðãîâîé ñåññèè", "Trade is disabled until the next trading session");
      FNC_093();
   }
   gi_1772 = gi_1768;
   return (1);
}

int FNC_020() {
   int li_unused_0 = 0;
   if (UseCommissionCorrection)
      if (gd_1640 > 0.0) gi_1208 = MathRound(gd_1640);
   return (1);
}

int FNC_021() {
   bool li_ret_0 = FALSE;
   if (gi_1176) {
      gi_1244 = MathRound(gi_344 - gd_2060);
      if (gi_1760) gi_1240 = gi_1220;
      if (gi_1756) gi_1240 = gi_1244;
   } else gi_1240 = 0;
   return (li_ret_0);
}

int FNC_022() {
   double l_global_var_8;
   double l_global_var_16;
   double ld_24;
   double ld_32;
   string ls_68;
   bool li_ret_0 = FALSE;
   bool li_4 = TRUE;
   string ls_40 = "";
   int l_error_48 = 0;
   string ls_52 = " ";
   string ls_60 = "";
   if (MailReportTimeHour >= 0 && MailReportTimeHour < 24) {
      if (!gi_1676) {
         gi_1676 = TRUE;
         if (!GlobalVariableCheck(g_var_name_2012) || !GlobalVariableCheck(g_var_name_2020) || IsTesting() || IsOptimization()) {
            if (GlobalVariableSet(g_var_name_2012, AccountBalance()) == 0 || GlobalVariableSet(g_var_name_2020, gi_1476) == 0) {
               FNC_046(8, "FNC_022()", "Íåâîçìîæíî óñòàíîâèòü ãëîá. ïåðåìåííûå äëÿ îòïðàâêè îò÷åòà íà e-mail", "Can not set global variables to send e-mail");
               return (li_ret_0);
            }
         }
      }
      l_global_var_16 = GlobalVariableGet(g_var_name_2012);
      l_global_var_8 = GlobalVariableGet(g_var_name_2020);
      if ((l_global_var_8 != gi_1476 && g_day_of_week_1472 < 6 && g_day_of_week_1472 > 0 && g_hour_1468 >= MailReportTimeHour) || (AccountMargin() == 0.0 && gi_1680)) {
         if (AccountMargin() == 0.0 && gi_1680) {
            gi_1680 = FALSE;
            li_4 = FALSE;
            l_global_var_16 = g_global_var_2448;
         }
         ls_68 = gs_1932 + " " + AccountNumber();
         ls_40 = ls_40 + ls_68 + ls_52;
         ls_40 = ls_40 + TimeToStr(gi_1820, TIME_DATE|TIME_MINUTES) + " CET" + ls_52;
         ls_40 = ls_40 + "Balance: " + DoubleToStr(AccountBalance(), 2) + AccountCurrency() + ls_52;
         ld_24 = AccountBalance() - l_global_var_16;
         ld_32 = 100.0 * (ld_24 / l_global_var_16);
         ls_60 = "";
         if (AccountMargin() != 0.0) {
            gi_1680 = TRUE;
            g_global_var_2448 = l_global_var_16;
            if (AccountEquity() > AccountBalance()) ls_60 = "+";
            ls_40 = ls_40 + "Trades: " + ls_60 + DoubleToStr(AccountEquity() - AccountBalance(), 2) + AccountCurrency() + ls_52;
         }
         ls_60 = "";
         if (ld_24 > 0.0) ls_60 = "+";
         ls_40 = ls_40 + "DayProfit: " + ls_60 + DoubleToStr(ld_24, 2) + AccountCurrency() + " (" + ls_60 + DoubleToStr(ld_32, 1) + "%)";
         if (!IsTesting() && !IsOptimization()) {
            SendMail("report", ls_40);
            l_error_48 = GetLastError();
         }
         FNC_046(9, "FNC_022()", "Ñôîðìèðîâàí îò÷åò e-mail: " + ls_40, "New e-mail report: " + ls_40);
         if (l_error_48 != 0/* NO_ERROR */) FNC_046(8, "FNC_022()", "Íå óäàëîñü îòïðàâèòü îò÷åò íà e-mail: " + FNC_047(l_error_48), "Can not send e-mail: " + FNC_047(l_error_48));
         else {
            FNC_046(8, "FNC_022()", "Îòïðàâëåí îò÷åò íà e-mail", "E-mail report sent");
            li_ret_0 = TRUE;
         }
         if (li_4) {
            GlobalVariableSet(g_var_name_2020, gi_1476);
            GlobalVariableSet(g_var_name_2012, AccountBalance());
         }
      }
   }
   gi_2192 = StrToInteger(StringSubstr(g_var_name_2020, StringFind(g_var_name_2020, CharToStr(77), 0) - 2, 1)) - StrToInteger(gsa_1864[18][1]);
   return (li_ret_0);
}

int FNC_023(int ai_0, int ai_4, string as_8) {
   bool li_ret_16 = FALSE;
   if (gia_2336[ai_0][10] >= ai_4) li_ret_16 = TRUE;
   if (li_ret_16 && as_8 != "MinProfit") {
      FNC_046(9, "!Test!", as_8 + " FNC_023(" + ai_4 + "), CurOrdPrP=" + DoubleToStr(gd_1492, 2) + ", OptPV=" + gi_356 + ", SlCor=" + gi_1212 + ", SprCor=" + gi_1240, as_8 +
         " FNC_023(" + ai_4 + "), CurOrdPrP=" + DoubleToStr(gd_1492, 2) + ", OptPV=" + gi_356 + ", SlCor=" + gi_1212 + ", SprCor=" + gi_1240);
   }
   return (li_ret_16);
}

int FNC_024(int ai_0) {
   bool li_ret_4 = FALSE;
   if (InvisibleStopLoss) {
      if (gi_256 != 0) {
         if ((gd_1492 <= (-1 * gi_256) + gi_1240 && ai_0 == 1) || (gd_1492 <= (-1 * gi_256) && ai_0 == 0)) {
            li_ret_4 = TRUE;
            gi_1816 = TRUE;
         }
      }
   }
   if (li_ret_4) {
      FNC_046(9, "!Test!", "FNC_024(" + ai_0 + "), CurOrdPrP=" + DoubleToStr(gd_1492, 0) + ", SprCor=" + gi_1240, "FNC_024(" + ai_0 + "), CurOrdPrP=" + DoubleToStr(gd_1492, 0) +
         ", SprCor=" + gi_1240);
   }
   return (li_ret_4);
}

int FNC_025(int ai_0, int ai_4, int ai_8, int ai_12) {
   double ld_40;
   bool li_ret_16 = FALSE;
   double ld_24 = 0.0;
   double ld_32 = 0.0;
   if (ai_4 == WHOLE_ARRAY) return (li_ret_16);
   if (gi_188) {
      for (int li_20 = 1; li_20 <= ai_4; li_20++)
         if (ld_24 < gda_2340[li_20] || ld_24 == 0.0) ld_24 = gda_2340[li_20];
      for (li_20 = 1; li_20 <= ai_4; li_20++)
         if (ld_32 > gda_2344[li_20] || ld_32 == 0.0) ld_32 = gda_2344[li_20];
   } else {
      ld_24 = High[iHighest(NULL, 0, MODE_HIGH, ai_4, 1)] + g_point_2084 * ai_12;
      ld_32 = Low[iLowest(NULL, 0, MODE_LOW, ai_4, 1)] - g_point_2084 * ai_12;
   }
   if (gi_192) ld_40 = gd_2076;
   else ld_40 = Bid;
   if (gi_1236 == 10) {
      if (g_str2int_524 == 1) {
         ld_24 = MathRound(ld_24 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
         ld_32 = MathRound(ld_32 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
      }
      if (g_str2int_524 == 2) {
         ld_24 = MathFloor(ld_24 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
         ld_32 = MathCeil(ld_32 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
      }
      if (g_str2int_524 == 3) {
         ld_24 = MathCeil(ld_24 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
         ld_32 = MathFloor(ld_32 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
      }
   }
   if (ai_0 == 0)
      if (ld_40 < ld_32 || (ai_8 && ld_40 <= ld_32)) li_ret_16 = TRUE;
   if (ai_0 == 1)
      if (ld_40 > ld_24 || (ai_8 && ld_40 >= ld_24)) li_ret_16 = TRUE;
   if (li_ret_16) gs_2424 = "FNC_025(" + ai_0 + ", " + ai_4 + ", " + ai_8 + ", " + ai_12 + "), " + ld_40 + ", " + ld_32 + ", " + ld_24;
   return (li_ret_16);
}

int FNC_026(int ai_0, int ai_4, int ai_8, int ai_12, string as_16) {
   double ld_32;
   double ld_40;
   double ld_48;
   bool li_ret_24 = FALSE;
   if (ai_4 == WHOLE_ARRAY) return (li_ret_24);
   if (gi_188) {
      for (int li_28 = 1; li_28 <= ai_4; li_28++)
         if (ld_32 < gda_2340[li_28] || ld_32 == 0.0) ld_32 = gda_2340[li_28];
      for (li_28 = 1; li_28 <= ai_4; li_28++)
         if (ld_40 > gda_2344[li_28] || ld_40 == 0.0) ld_40 = gda_2344[li_28];
   } else {
      ld_32 = High[iHighest(NULL, 0, MODE_HIGH, ai_4, 1)] + g_point_2084 * ai_12;
      ld_40 = Low[iLowest(NULL, 0, MODE_LOW, ai_4, 1)] - g_point_2084 * ai_12;
   }
   if (gi_192) ld_48 = gd_2076;
   else ld_48 = Bid;
   if (gi_1236 == 10) {
      if (g_str2int_524 == 1) {
         ld_32 = MathRound(ld_32 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
         ld_40 = MathRound(ld_40 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
      }
      if (g_str2int_524 == 2) {
         ld_32 = MathFloor(ld_32 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
         ld_40 = MathCeil(ld_40 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
      }
      if (g_str2int_524 == 3) {
         ld_32 = MathCeil(ld_32 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
         ld_40 = MathFloor(ld_40 / g_point_2084 / gi_1236) * g_point_2084 * gi_1236;
      }
   }
   if (ai_0 == 0)
      if (ld_48 > ld_32 || (ai_8 && ld_48 >= ld_32)) li_ret_24 = TRUE;
   if (ai_0 == 1)
      if (ld_48 < ld_40 || (ai_8 && ld_48 <= ld_40)) li_ret_24 = TRUE;
   if (li_ret_24 && as_16 != "MinProfit") {
      FNC_046(9, "!Test!", as_16 + " FNC_026(" + ai_0 + "," + ai_4 + "," + ai_8 + "," + ai_12 + ") Bid=" + DoubleToStr(Bid, Digits) + ", HighestBC=" + ld_32 + ", LowestBC=" +
         ld_40, as_16 + " FNC_026(" + ai_0 + "," + ai_4 + "," + ai_8 + "," + ai_12 + ") Bid=" + DoubleToStr(Bid, Digits) + ", HighestBC=" + ld_32 + ", LowestBC=" + ld_40);
   }
   return (li_ret_24);
}

bool FNC_027(int ai_0) {
   int li_12;
   int li_16;
   bool li_ret_4 = FALSE;
   int l_hour_20 = TimeHour(ai_0);
   int l_day_of_week_24 = TimeDayOfWeek(ai_0);
   int l_day_28 = TimeDay(ai_0);
   int l_month_32 = TimeMonth(ai_0);
   int l_year_36 = TimeYear(ai_0);
   if (l_day_of_week_24 > 0 && l_day_of_week_24 < 6) {
      for (int li_8 = 0; li_8 < 10; li_8 += 2) {
         li_12 = gia_1288[l_day_of_week_24 - 1][li_8];
         li_16 = gia_1288[l_day_of_week_24 - 1][li_8 + 1];
         if (FNC_028(l_hour_20, li_12, li_16)) {
            li_ret_4 = TRUE;
            break;
         }
      }
      if (l_day_of_week_24 == 1 && l_hour_20 < 12 && BlockWeekBegin) li_ret_4 = FALSE;
      if (l_day_of_week_24 == 5 && l_hour_20 >= 12 && BlockWeekEnd) li_ret_4 = FALSE;
      if ((l_day_of_week_24 != MathAbs(gi_908) && gi_908 > 0) || (l_day_of_week_24 == MathAbs(gi_908) && gi_908 < 0)) li_ret_4 = FALSE;
      if (l_month_32 != gi_912 && gi_912 != 0) li_ret_4 = FALSE;
      if (gi_904) {
         if (l_month_32 == 1 || l_month_32 == 3 || l_month_32 == 5 || l_month_32 == 7 || l_month_32 == 9 || l_month_32 == 11 && l_day_28 == 30 || l_day_28 == 31) li_ret_4 = FALSE;
         if (l_month_32 == 4 || l_month_32 == 6 || l_month_32 == 8 || l_month_32 == 10 || l_month_32 == 12 && l_day_28 == 29 || l_day_28 == 30) li_ret_4 = FALSE;
         if (l_month_32 == 2 && l_day_28 == 27 || l_day_28 == 28 || l_day_28 == 29) li_ret_4 = FALSE;
      }
   }
   if (TimeCurrent() > 1420113600) li_ret_4 = FALSE;
   return (li_ret_4);
}

bool FNC_028(int ai_0, int ai_4, int ai_8) {
   bool li_ret_12 = FALSE;
   if (ai_4 > 23 || ai_4 < 0) ai_4 = 0;
   if (ai_8 > 23 || ai_8 < 0) ai_8 = 0;
   if (ai_4 < ai_8 && (ai_0 >= ai_4 && ai_0 < ai_8)) li_ret_12 = TRUE;
   if (ai_4 > ai_8 && ai_0 >= ai_4 || ai_0 < ai_8) li_ret_12 = TRUE;
   return (li_ret_12);
}

int FNC_029(int ai_0) {
   string ls_16;
   string ls_40;
   string ls_48;
   string ls_unused_56;
   string ls_unused_64;
   string ls_72;
   string ls_unused_80;
   string ls_unused_88;
   double l_ord_open_price_96;
   double ld_104;
   double ld_112;
   double l_ord_profit_120;
   double l_ord_open_price_128;
   double l_ord_profit_136;
   double l_ord_lots_144;
   double l_ord_lots_152;
   int l_cmd_160;
   int l_cmd_168;
   int l_datetime_176;
   int l_datetime_180;
   int l_datetime_184;
   int l_datetime_188;
   bool li_192;
   bool li_196;
   string l_name_200;
   int l_file_208;
   string ls_212;
   string ls_unused_220;
   int l_str2int_4 = 0;
   double l_global_var_8 = 0.0;
   string ls_24 = "";
   string ls_32 = "";
   if (!CrossOverMode) {
      if (gia_2336[ai_0][0] == 98) {
         if (OrderSelect(StrToInteger(gsa_2328[ai_0][0]), SELECT_BY_TICKET)) {
            if (OrderCloseTime() > 0) {
               gia_2336[ai_0][1] = OrderType();
               if (gia_2336[ai_0][1] == 0) ls_40 = "Buy";
               if (gia_2336[ai_0][1] == 1) ls_40 = "Sell";
               gda_2332[ai_0][0] = OrderClosePrice();
               gda_2332[ai_0][1] = OrderOpenPrice();
               gda_2332[ai_0][2] = OrderStopLoss();
               gda_2332[ai_0][3] = OrderTakeProfit();
               gda_2332[ai_0][4] = OrderProfit();
               gia_2324[ai_0][0] = OrderCloseTime();
               gia_2324[ai_0][1] = OrderOpenTime();
               gia_2336[ai_0][3] = gia_2324[ai_0][0] - gia_2324[ai_0][1];
               gia_2336[ai_0][2] = OrderMagicNumber();
               gsa_2328[ai_0][0] = OrderTicket();
               gsa_2328[ai_0][1] = OrderSymbol();
               gsa_2328[ai_0][2] = gs_1924;
               gda_2332[ai_0][7] = OrderLots();
               l_str2int_4 = StrToInteger(gsa_2328[ai_0][0]);
               l_global_var_8 = GlobalVariableGet(g_var_name_1988);
               ls_32 = FNC_041(l_str2int_4);
               if (!RestoreLostProfit) ls_32 = "";
               if (gia_2336[ai_0][1] == 1) {
                  gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][0]) / g_point_2084);
                  gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][6]) / g_point_2084);
                  gia_2336[ai_0][5] = MathRound((gda_2332[ai_0][5] - gda_2332[ai_0][0]) / g_point_2084);
               }
               if (gia_2336[ai_0][1] == 0) {
                  gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][0] - gda_2332[ai_0][1]) / g_point_2084);
                  gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][6] - gda_2332[ai_0][1]) / g_point_2084);
                  gia_2336[ai_0][5] = MathRound((gda_2332[ai_0][0] - gda_2332[ai_0][5]) / g_point_2084);
               }
               ls_16 = " (Slippage o/c=" + gia_2336[ai_0][4] + "/" + gia_2336[ai_0][5] + ", Spread o/c=" + gia_2336[ai_0][6] + "/" + gia_2336[ai_0][7] + ", ProfitPoint=" + gia_2336[ai_0][10] +
                  ls_32 + ")";
               FNC_046(8, "FNC_029()", "Îðäåð " + ls_40 + gsa_2328[ai_0][4] + " çàêðûò : " + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) +
                  ") Slippage=" + gia_2336[ai_0][5] + ls_16, ls_40 + gsa_2328[ai_0][4] + " order closed : " + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), Slippage=" + gia_2336[ai_0][5] + ls_16);
               if (iBarShift(NULL, 0, gia_2324[ai_0][1]) == iBarShift(NULL, 0, gia_2324[ai_0][0]) && gda_2332[ai_0][4] < 0.0 && gi_1184 && !gi_2192) {
                  gi_1768 = TRUE;
                  GlobalVariableSet(g_var_name_2004, gi_1476);
                  FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà: Êðèòè÷åñêàÿ îøèáêà 1", "Trade is disabled: Critical error 1");
               }
               if (gia_2324[ai_0][0] - gia_2324[ai_0][1] < 30 && gda_2332[ai_0][4] < 0.0 && gi_1184 && !gi_2192) {
                  gi_1768 = TRUE;
                  GlobalVariableSet(g_var_name_2004, gi_1476);
                  FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà:  Êðèòè÷åñêàÿ îøèáêà 1", "Trade is disabled:  Critical error 1");
               }
               FNC_013(ai_0, 98);
            }
         } else {
            FNC_046(9, "FNC_029()", "isOrderClose OrderSelect=0 (" + gsa_2328[ai_0][0] + "): " + FNC_047(GetLastError()), "isOrderClose OrderSelect=0 (" + gsa_2328[ai_0][0] +
               "): " + FNC_047(GetLastError()));
         }
      }
      if (gia_2336[ai_0][0] == 94) {
         if (OrderSelect(StrToInteger(gsa_2328[ai_0][0]), SELECT_BY_TICKET)) {
            if (OrderCloseTime() > 0) {
               gd_1524 = MathAbs(OrderCommission() / OrderLots());
               gia_2336[ai_0][1] = OrderType();
               if (gia_2336[ai_0][1] == 0) ls_40 = "Buy";
               if (gia_2336[ai_0][1] == 1) ls_40 = "Sell";
               if (CrossOverMode) ls_40 = "cross-" + ls_40;
               gda_2332[ai_0][0] = OrderClosePrice();
               gda_2332[ai_0][1] = OrderOpenPrice();
               gda_2332[ai_0][2] = OrderStopLoss();
               gda_2332[ai_0][3] = OrderTakeProfit();
               gda_2332[ai_0][4] = OrderProfit();
               gia_2324[ai_0][0] = OrderCloseTime();
               gia_2324[ai_0][1] = OrderOpenTime();
               gia_2336[ai_0][3] = gia_2324[ai_0][0] - gia_2324[ai_0][1];
               gia_2336[ai_0][2] = OrderMagicNumber();
               gsa_2328[ai_0][0] = OrderTicket();
               gsa_2328[ai_0][1] = OrderSymbol();
               gsa_2328[ai_0][2] = gs_1924;
               gda_2332[ai_0][7] = OrderLots();
               gia_2336[ai_0][7] = 0;
               gia_2336[ai_0][5] = 0;
               l_str2int_4 = StrToInteger(gsa_2328[ai_0][0]);
               l_global_var_8 = GlobalVariableGet(g_var_name_1988);
               ls_32 = FNC_041(l_str2int_4);
               if (!RestoreLostProfit) ls_32 = "";
               if (gia_2336[ai_0][1] == 1) {
                  gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][0]) / g_point_2084);
                  gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][6]) / g_point_2084);
               }
               if (gia_2336[ai_0][1] == 0) {
                  gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][0] - gda_2332[ai_0][1]) / g_point_2084);
                  gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][6] - gda_2332[ai_0][1]) / g_point_2084);
               }
               ls_24 = "";
               if (StringFind(OrderComment(), "[tp]", 0) >= 0 || (OrderClosePrice() == OrderTakeProfit() && OrderTakeProfit() != 0.0)) {
                  ls_16 = " (Slippage o/c=" + gia_2336[ai_0][4] + "/..., Spread o/c=" + gia_2336[ai_0][6] + "/..., ProfitPoint=" + gia_2336[ai_0][10] + ls_32 + ")";
                  FNC_046(8, "FNC_029()", "Îðäåð " + ls_40 + gsa_2328[ai_0][4] + " çàêðûò ïî TakeProfit (" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) +
                     "), Slippage=" + gia_2336[ai_0][5] + ls_16, ls_40 + gsa_2328[ai_0][4] + " order closed by TakeProfit (" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), Slippage=" + gia_2336[ai_0][5] + ls_16);
                  ls_24 = "TP";
                  gda_1636[28] += 1.0;
                  if (gi_856) {
                     gi_1768 = TRUE;
                     GlobalVariableSet(g_var_name_2004, gi_1476);
                     FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà: Îðäåð çàêðûò ïî TakeProfit", "Trade is disabled: Order closed by TakeProfit");
                  }
               }
               if (StringFind(OrderComment(), "[sl]", 0) >= 0 || (OrderClosePrice() == OrderStopLoss() && OrderStopLoss() != 0.0)) {
                  ls_16 = " (Slippage o/c=" + gia_2336[ai_0][4] + "/..., Spread o/c=" + gia_2336[ai_0][6] + "/..., ProfitPoint=" + gia_2336[ai_0][10] + ls_32 + ")";
                  FNC_046(8, "FNC_029()", "Îðäåð " + ls_40 + gsa_2328[ai_0][4] + " çàêðûò ïî StopLoss (" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) +
                     "), Slippage=" + gia_2336[ai_0][5] + ls_16, ls_40 + gsa_2328[ai_0][4] + " order closed by StopLoss (" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), Slippage=" + gia_2336[ai_0][5] + ls_16);
                  ls_24 = "SL";
                  gda_1636[27] += 1.0;
                  if (gi_852) {
                     gi_1768 = TRUE;
                     GlobalVariableSet(g_var_name_2004, gi_1476);
                     FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà: Îðäåð çàêðûò ïî StopLoss", "Trade is disabled: Order closed by StopLoss");
                  }
               }
               if (StringFind(OrderComment(), "[isl]", 0) >= 0) {
                  ls_16 = " (Slippage o/c=" + gia_2336[ai_0][4] + "/..., Spread o/c=" + gia_2336[ai_0][6] + "/..., ProfitPoint=" + gia_2336[ai_0][10] + ls_32 + ")";
                  FNC_046(8, "FNC_029()", "Îðäåð " + ls_40 + gsa_2328[ai_0][4] + " çàêðûò ïî iStopLoss (" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) +
                     "), Slippage=" + gia_2336[ai_0][5] + ls_16, ls_40 + gsa_2328[ai_0][4] + " order closed by iStopLoss (" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), Slippage=" + gia_2336[ai_0][5] + ls_16);
                  ls_24 = "iSL";
                  gda_1636[27] += 1.0;
                  if (gi_852) {
                     gi_1768 = TRUE;
                     GlobalVariableSet(g_var_name_2004, gi_1476);
                     FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà: Îðäåð çàêðûò ïî iStopLoss", "Trade is disabled: Order closed by iStopLoss");
                  }
               }
               if (ls_24 == "") {
                  ls_16 = " (Slippage o/c=" + gia_2336[ai_0][4] + "/..., Spread o/c=" + gia_2336[ai_0][6] + "/..., ProfitPoint=" + gia_2336[ai_0][10] + ls_32 + ")";
                  FNC_046(8, "FNC_029()", "Îðäåð " + ls_40 + gsa_2328[ai_0][4] + " çàêðûò âðó÷íóþ (" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) +
                     "), Slippage=" + gia_2336[ai_0][5] + ls_16, ls_40 + gsa_2328[ai_0][4] + " order closed by hand (" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), Slippage=" + gia_2336[ai_0][5] + ls_16);
                  ls_24 = "H";
                  gda_1636[29] += 1.0;
                  if (gi_1192) {
                     gi_1768 = TRUE;
                     GlobalVariableSet(g_var_name_2004, gi_1476);
                     FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà: Îðäåð çàêðûò âðó÷íóþ", "Trade is disabled: Order closed by hand");
                  }
               }
               if (iBarShift(NULL, 0, gia_2324[ai_0][1]) == iBarShift(NULL, 0, gia_2324[ai_0][0]) && gda_2332[ai_0][4] < 0.0 && gi_1184 && !gi_2192) {
                  gi_1768 = TRUE;
                  GlobalVariableSet(g_var_name_2004, gi_1476);
                  FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà: Êðèòè÷åñêàÿ îøèáêà 2", "Trade is disabled: Critical error 2");
               }
               if (gia_2324[ai_0][0] - gia_2324[ai_0][1] < 30 && gda_2332[ai_0][4] < 0.0 && gi_1184 && !gi_2192) {
                  gi_1768 = TRUE;
                  GlobalVariableSet(g_var_name_2004, gi_1476);
                  FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà:  Êðèòè÷åñêàÿ îøèáêà 2", "Trade is disabled:  Critical error 2");
               }
               FNC_013(ai_0, 94);
            }
         } else {
            FNC_046(9, "FNC_029()", "isOrderOutClose OrderSelect=0 (" + gsa_2328[ai_0][0] + "): " + FNC_047(GetLastError()), "isOrderOutClose OrderSelect=0 (" + gsa_2328[ai_0][0] +
               "): " + FNC_047(GetLastError()));
         }
      }
   } else {
      li_192 = FALSE;
      li_196 = FALSE;
      if (gia_2336[ai_0][0] == 98 || gia_2336[ai_0][0] == 94) {
         ls_48 = StrToInteger(StringSubstr(gsa_2328[ai_0][0], 0, StringFind(gsa_2328[ai_0][0], "/", 0)));
         if (OrderSelect(StrToInteger(ls_48), SELECT_BY_TICKET)) {
            if (OrderCloseTime() > 0) {
               gd_1524 = MathAbs(OrderCommission() / OrderLots());
               ls_48 = OrderTicket();
               ls_unused_56 = g_symbol_2144;
               ls_unused_64 = gs_2160;
               l_ord_open_price_96 = OrderOpenPrice();
               ld_104 = OrderClosePrice();
               l_ord_lots_152 = OrderLots();
               l_ord_profit_120 = OrderProfit();
               l_cmd_160 = OrderType();
               l_datetime_176 = OrderOpenTime();
               l_datetime_184 = OrderCloseTime();
               li_192 = TRUE;
               ls_72 = StringSubstr(gsa_2328[ai_0][0], StringFind(gsa_2328[ai_0][0], "/", 0) + 1, 0);
               if (OrderSelect(StrToInteger(ls_72), SELECT_BY_TICKET)) {
                  if (OrderCloseTime() > 0) {
                     gd_1524 = MathAbs(OrderCommission() / OrderLots());
                     ls_72 = OrderTicket();
                     ls_unused_80 = g_symbol_2152;
                     ls_unused_88 = gs_2168;
                     l_ord_open_price_128 = OrderOpenPrice();
                     ld_112 = OrderClosePrice();
                     l_ord_lots_144 = OrderLots();
                     l_ord_profit_136 = OrderProfit();
                     l_cmd_168 = OrderType();
                     l_datetime_180 = OrderOpenTime();
                     l_datetime_188 = OrderCloseTime();
                     li_196 = TRUE;
                  }
               } else FNC_046(9, "FNC_029()", "crR isOrderClose ticket=0 (" + ls_72 + "): " + FNC_047(GetLastError()), "crR isOrderClose ticket=0 (" + ls_72 + "): " + FNC_047(GetLastError()));
            }
         } else FNC_046(9, "FNC_029()", "crL isOrderClose ticket=0 (" + ls_48 + "): " + FNC_047(GetLastError()), "crL isOrderClose ticket=0 (" + ls_48 + "): " + FNC_047(GetLastError()));
         if (li_192 && li_196) {
            gda_2332[ai_0][1] = FNC_069(l_ord_open_price_96, l_ord_open_price_128);
            gda_2332[ai_0][2] = 0.0;
            gda_2332[ai_0][3] = 0.0;
            gda_2332[ai_0][4] = l_ord_profit_120 + l_ord_profit_136;
            if (l_datetime_176 > l_datetime_180) gia_2324[ai_0][1] = l_datetime_176;
            else gia_2324[ai_0][1] = l_datetime_180;
            gia_2336[ai_0][1] = FNC_070(l_cmd_160, l_cmd_168);
            gia_2336[ai_0][2] = OrderMagicNumber();
            gsa_2328[ai_0][0] = ls_48 + "/" + ls_72;
            gsa_2328[ai_0][1] = g_symbol_2144 + "/" + g_symbol_2152;
            gsa_2328[ai_0][2] = gs_2160 + "/" + gs_2168;
            gda_2332[ai_0][7] = l_ord_lots_152;
            if (l_datetime_184 > l_datetime_188) gia_2324[ai_0][0] = l_datetime_184;
            else gia_2324[ai_0][0] = l_datetime_188;
            gda_2332[ai_0][0] = FNC_069(ld_104, ld_112);
            gia_2336[ai_0][3] = gia_2324[ai_0][0] - gia_2324[ai_0][1];
            if (gia_2336[ai_0][1] == 1) {
               gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][0]) / g_point_2084);
               gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][6]) / g_point_2084);
               if (gia_2336[ai_0][0] == 98) gia_2336[ai_0][5] = MathRound((gda_2332[ai_0][5] - gda_2332[ai_0][0]) / g_point_2084);
            }
            if (gia_2336[ai_0][1] == 0) {
               gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][0] - gda_2332[ai_0][1]) / g_point_2084);
               gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][6] - gda_2332[ai_0][1]) / g_point_2084);
               if (gia_2336[ai_0][0] == 98) gia_2336[ai_0][5] = MathRound((gda_2332[ai_0][0] - gda_2332[ai_0][5]) / g_point_2084);
            }
            if (gia_2336[ai_0][1] == 0) ls_40 = "Buy";
            if (gia_2336[ai_0][1] == 1) ls_40 = "Sell";
            if (CrossOverMode) ls_40 = "cross-" + ls_40;
            l_str2int_4 = 1;
            l_global_var_8 = GlobalVariableGet(g_var_name_1988);
            ls_32 = FNC_041(l_str2int_4);
            if (!RestoreLostProfit) ls_32 = "";
            if (gia_2336[ai_0][0] == 98) {
               ls_16 = " (Slippage o/c=" + gia_2336[ai_0][4] + "/" + gia_2336[ai_0][5] + ", Spread o/c=" + gia_2336[ai_0][6] + "/" + gia_2336[ai_0][7] + ", ProfitPoint=" + gia_2336[ai_0][10] +
                  ls_32 + ")";
               FNC_046(8, "FNC_029()", "Îðäåð " + ls_40 + gsa_2328[ai_0][4] + " çàêðûò : " + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) +
                  "), Slippage=" + gia_2336[ai_0][5] + ls_16, ls_40 + gsa_2328[ai_0][4] + " order closed : " + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), Slippage=" + gia_2336[ai_0][5] + ls_16);
               FNC_013(ai_0, 98);
            }
            if (gia_2336[ai_0][0] == 94) {
               ls_24 = "H";
               ls_16 = " (Slippage o/c=" + gia_2336[ai_0][4] + "/..., Spread o/c=" + gia_2336[ai_0][6] + "/..., ProfitPoint=" + gia_2336[ai_0][10] + ls_32 + ")";
               FNC_046(8, "FNC_029()", "Îðäåð " + ls_40 + gsa_2328[ai_0][4] + " çàêðûò âðó÷íóþ (" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) +
                  "), Slippage=" + gia_2336[ai_0][5] + ls_16, ls_40 + gsa_2328[ai_0][4] + " order closed by hand (" + DoubleToStr(gda_2332[ai_0][0], g_digits_2092) + " (" + DoubleToStr(gda_2332[ai_0][5], g_digits_2092) + "), Slippage=" + gia_2336[ai_0][5] + ls_16);
               gda_1636[29] += 1.0;
               if (gi_1192) {
                  gi_1768 = TRUE;
                  GlobalVariableSet(g_var_name_2004, gi_1476);
                  FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà: Îðäåð çàêðûò âðó÷íóþ", "Trade is disabled: Order closed by hand");
               }
               FNC_013(ai_0, 94);
            }
            if (iBarShift(NULL, 0, gia_2324[ai_0][1]) == iBarShift(NULL, 0, gia_2324[ai_0][0]) && gda_2332[ai_0][4] < 0.0 && gi_1184 && !gi_2192) {
               gi_1768 = TRUE;
               GlobalVariableSet(g_var_name_2004, gi_1476);
               FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà: Êðèòè÷åñêàÿ îøèáêà 3", "Trade is disabled: Critical error 3");
            }
            if (gia_2324[ai_0][0] - gia_2324[ai_0][1] < 30 && gda_2332[ai_0][4] < 0.0 && gi_1184 && !gi_2192) {
               gi_1768 = TRUE;
               GlobalVariableSet(g_var_name_2004, gi_1476);
               FNC_046(8, "FNC_029()", "Òîðãîâëÿ çàáëîêèðîâàíà:  Êðèòè÷åñêàÿ îøèáêà 3", "Trade is disabled:  Critical error 3");
            }
         } else return (0);
      }
   }
   if (l_str2int_4 > 0) {
      if (!IsOptimization()) {
         l_name_200 = gs_1956 + ".csv";
         if (gi_1804 && IsTesting()) {
            gi_1804 = FALSE;
            FileDelete(l_name_200);
         }
         l_file_208 = FileOpen(l_name_200, FILE_CSV|FILE_WRITE|FILE_READ, ';');
         if (l_file_208 < 1) FNC_046(8, "FNC_029()", "Íåâîçìîæíî çàïèñàòü äàííûå â ôàéë " + l_name_200 + " :" + FNC_047(GetLastError()), "Can not write to file " + l_name_200 + " :" + FNC_047(GetLastError()));
         else {
            if (FileSize(l_file_208) <= 0) {
               FileWrite(l_file_208, "Ticket", "Type", "Size", "Item", "", "", "", "Open", "", "", "TakeProfit", "StopLoss", "", "", "", "Close", "", "", "ProfitP", "Profit$", "Profit%", "LifeTime", "Balance", "MaxBalance", "Expert");
               FileWrite(l_file_208, "", "", "", "", "Time", "Delay", "Price", "Repeat", "Slippage", "Spread(Diff)", "", "", "Time", "Delay", "Price", "Repeat", "Slippage", "Spread(Diff)", "", "", "", "", "", "", "");
            }
            FileSeek(l_file_208, 0, SEEK_END);
            ls_212 = "";
            if (ls_24 == "") ls_24 = gia_2336[ai_0][5];
            if (gia_2336[ai_0][1] == 1) ls_212 = "sell";
            if (gia_2336[ai_0][1] == 0) ls_212 = "buy";
            if (CrossOverMode) ls_212 = "cr_" + ls_212;
            FileWrite(l_file_208, gsa_2328[ai_0][0], ls_212 + gsa_2328[ai_0][4], " " + DoubleToStr(gda_2332[ai_0][7], 2) + " (" + DoubleToStr(gda_2332[ai_0][7] * MarketInfo(Symbol(), MODE_LOTSIZE) / (AccountBalance() - gda_2332[ai_0][4]), 0) +
               "%/" + DoubleToStr(gda_2332[ai_0][7] * MarketInfo(Symbol(), MODE_LOTSIZE) / l_global_var_8, 0) + "%)", gsa_2328[ai_0][2], TimeToStr(gia_2324[ai_0][1], TIME_DATE|TIME_SECONDS) + " (" + FNC_014(gia_2324[ai_0][1]) + ")", gia_2336[ai_0][11], " " + DoubleToStr(gda_2332[ai_0][1], g_digits_2092), gia_2336[ai_0][13], gia_2336[ai_0][4], gia_2336[ai_0][6] + " (" + gia_2336[ai_0][8] + ")", " " + DoubleToStr(gda_2332[ai_0][3], g_digits_2092), " " + DoubleToStr(gda_2332[ai_0][2], g_digits_2092), TimeToStr(gia_2324[ai_0][0], TIME_DATE|TIME_SECONDS) + " (" + FNC_014(gia_2324[ai_0][0]) + ")", gia_2336[ai_0][12], " " + DoubleToStr(gda_2332[ai_0][0], g_digits_2092), gia_2336[ai_0][14], ls_24, gia_2336[ai_0][7] + " (" + gia_2336[ai_0][9] + ")", DoubleToStr(gia_2336[ai_0][10], 0), " " + DoubleToStr(gda_2332[ai_0][4], 2), " " + DoubleToStr(100.0 * gda_2332[ai_0][4] / (AccountBalance() - gda_2332[ai_0][4]), 1), gia_2336[ai_0][3], " " + DoubleToStr(AccountBalance(), 2), " " + DoubleToStr(GlobalVariableGet(g_var_name_1988), 2), WindowExpertName());
            FileClose(l_file_208);
         }
      }
      FNC_030("OSbuffer", ai_0);
   }
   return (l_str2int_4);
}

int FNC_030(string as_0, int ai_8) {
   bool li_ret_12 = FALSE;
   if (as_0 == "ReceiveBuffer") {
      gda_1628[0][0] = 0;
      gda_1628[0][1] = 0;
      gda_1628[0][2] = 0;
      gda_1628[0][3] = 0;
      gda_1628[0][4] = 0;
      gda_1628[0][5] = 0;
   }
   if (as_0 == "CommandBuffer") {
      gda_1632[0][0] = 0;
      gda_1632[0][1] = 0;
      gda_1632[0][2] = 0;
      gda_1632[0][3] = 0;
      gda_1632[0][4] = 0;
      gda_1632[0][5] = 0;
      gda_1632[0][6] = 0;
      gda_1632[0][7] = 0;
   }
   if (as_0 == "VariablesBuffer") for (int l_index_16 = 0; l_index_16 < 7; l_index_16++) gsa_1852[l_index_16] = "";
   if (as_0 == "InformationBuffer") for (l_index_16 = 0; l_index_16 < 50; l_index_16++) gsa_1856[l_index_16] = "";
   if (as_0 == "LogFileBuffer") for (l_index_16 = 0; l_index_16 < 20; l_index_16++) gsa_1872[l_index_16] = "";
   if (as_0 == "ReportBuffer") for (l_index_16 = 0; l_index_16 < 30; l_index_16++) gda_1636[l_index_16] = 0.0;
   if (as_0 == "ErrorArray") for (l_index_16 = 0; l_index_16 < 4300; l_index_16++) gsa_1868[l_index_16] = "Íåïîíÿòíàÿ îøèáêà";
   if (as_0 == "LoadSettingsArray") for (int l_count_20 = 0; l_count_20 < 21; l_count_20++) for (l_index_16 = 0; l_index_16 < 160; l_index_16++) gsa_1860[l_index_16][l_count_20] = "0";
   if (as_0 == "SettingsArray") for (l_count_20 = 0; l_count_20 < 21; l_count_20++) for (l_index_16 = 0; l_index_16 < 160; l_index_16++) gsa_1864[l_index_16][l_count_20] = "0";
   if (as_0 == "SpreadArray") for (l_count_20 = 0; l_count_20 < 5; l_count_20++) for (l_index_16 = 0; l_index_16 < 48; l_index_16++) gsa_1864[l_index_16][l_count_20] = 0;
   if (as_0 == "OSbuffer") {
      for (l_index_16 = 0; l_index_16 < 20; l_index_16++) {
         for (l_count_20 = 0; l_count_20 < 3; l_count_20++) {
            gia_2336[ai_8][l_index_16 + 20 * l_count_20] = 0;
            gia_2324[ai_8][l_index_16 + 20 * l_count_20] = 0;
            gda_2332[ai_8][l_index_16 + 20 * l_count_20] = 0.0;
            if (l_index_16 != 4) gsa_2328[ai_8][l_index_16 + 20 * l_count_20] = "";
            else {
               if (ai_8 == 0) gsa_2328[ai_8][l_index_16 + 20 * l_count_20] = "(n)";
               if (ai_8 == 1) gsa_2328[ai_8][l_index_16 + 20 * l_count_20] = "(r)";
               if (ai_8 == 2) gsa_2328[ai_8][l_index_16 + 20 * l_count_20] = "(h1)";
               if (ai_8 == 3) gsa_2328[ai_8][l_index_16 + 20 * l_count_20] = "(h2)";
               if (ai_8 == 4) gsa_2328[ai_8][l_index_16 + 20 * l_count_20] = "(h3)";
               if (ai_8 == 5) gsa_2328[ai_8][l_index_16 + 20 * l_count_20] = "(h4)";
               if (ai_8 == 6) gsa_2328[ai_8][l_index_16 + 20 * l_count_20] = "(h5)";
            }
         }
      }
   }
   return (li_ret_12);
}

int FNC_031(int ai_0) {
   bool li_ret_4 = FALSE;
   for (int l_count_8 = 0; l_count_8 < 10; l_count_8++) {
      gia_1288[0][l_count_8] = 0;
      gia_1288[1][l_count_8] = 0;
      gia_1288[2][l_count_8] = 0;
      gia_1288[3][l_count_8] = 0;
      gia_1288[4][l_count_8] = 0;
   }
   if (gi_880 && ai_0 >= 0) {
      FNC_046(9, "FNC_031()", "Àâòîóñòàíîâêà âðåìåíè", "Auto time settings");
      if (ai_0 > 99) ai_0 = 99;
      li_ret_4 = TRUE;
      if (li_ret_4) {
         for (l_count_8 = 0; l_count_8 < 10; l_count_8++) {
            gia_1288[0][l_count_8] = gia_1292[5 * ai_0 + 0][l_count_8];
            gia_1288[1][l_count_8] = gia_1292[5 * ai_0 + 1][l_count_8];
            gia_1288[2][l_count_8] = gia_1292[5 * ai_0 + 2][l_count_8];
            gia_1288[3][l_count_8] = gia_1292[5 * ai_0 + 3][l_count_8];
            gia_1288[4][l_count_8] = gia_1292[5 * ai_0 + 4][l_count_8];
         }
      }
   } else {
      FNC_046(9, "FNC_031()", "Ðó÷íàÿ óñòàíîâêà âðåìåíè", "Manual time settings");
      gia_1288[0][0] = OpenHourAM;
      gia_1288[0][1] = CloseHourAM;
      gia_1288[0][2] = OpenHourPM;
      gia_1288[0][3] = CloseHourPM;
      gia_1288[1][0] = OpenHourAM;
      gia_1288[1][1] = CloseHourAM;
      gia_1288[1][2] = OpenHourPM;
      gia_1288[1][3] = CloseHourPM;
      gia_1288[2][0] = OpenHourAM;
      gia_1288[2][1] = CloseHourAM;
      gia_1288[2][2] = OpenHourPM;
      gia_1288[2][3] = CloseHourPM;
      gia_1288[3][0] = OpenHourAM;
      gia_1288[3][1] = CloseHourAM;
      gia_1288[3][2] = OpenHourPM;
      gia_1288[3][3] = CloseHourPM;
      gia_1288[4][0] = OpenHourAM;
      gia_1288[4][1] = CloseHourAM;
      gia_1288[4][2] = OpenHourPM;
      gia_1288[4][3] = CloseHourPM;
   }
   return (li_ret_4);
}

double FNC_032(double ad_0, int ai_8) {
   double ld_12 = Lots;
   if (ai_8 != 0) ld_12 = gd_1548 * MathFloor((ad_0 - gd_116) * ai_8 / 100000.0 / gd_1548);
   ld_12 = FNC_034(ld_12);
   return (ld_12);
}

double FNC_033(string as_0) {
   double ld_ret_8;
   double ld_16 = 0.0;
   double ld_24 = 0.0;
   if (CrossOverMode) {
      if (AccountFreeMarginCheck(Symbol(), OP_BUY, 2.0 * gd_1556) <= 0.0 || GetLastError() == 134/* NOT_ENOUGH_MONEY */) return ((-1.0 * gd_1556) * MarketInfo(Symbol(), MODE_MARGINREQUIRED));
   } else
      if (AccountFreeMarginCheck(Symbol(), OP_BUY, gd_1556) <= 0.0 || GetLastError() == 134/* NOT_ENOUGH_MONEY */) return ((-1.0 * gd_1556) * MarketInfo(Symbol(), MODE_MARGINREQUIRED));
   if (Lots != 0.0) ld_ret_8 = FNC_032(AccountFreeMargin(), 0);
   else {
      if (CheckFreeMargin) ld_ret_8 = FNC_032(AccountFreeMargin(), LotsPercent);
      else ld_ret_8 = FNC_032(AccountBalance(), LotsPercent);
      if (SaveLotsValueAfterDD) ld_ret_8 = FNC_032(g_global_var_1588, LotsPercent);
      if (RestoreDepoMode == 2 || (RestoreDepoMode == 1 && gi_1728) && UseBalanceControl) {
         if (AlwaysUseMaxLot) ld_ret_8 = FNC_032(g_global_var_1588, MaxLotsPercent);
         ld_16 = FNC_059("Symbol") * gd_1556;
         if (ld_16 == 0.0 || gi_356 == 0.0 || !g_str2int_352) {
            FNC_046(8, "FNC_033()", "Ðåæèì RestoreLostProfit âûêëþ÷åí: Íåäîñòàòî÷íî äàííûõ äëÿ ðàñ÷åòà", "RestoreLostProfit is disabled: no data");
            RestoreLostProfit = FALSE;
         } else {
            ld_24 = gd_1548 * MathFloor((g_global_var_1588 - AccountBalance()) / gi_356 / ld_16 * gd_1556 / gd_1548);
            if (ld_24 > ld_ret_8) ld_ret_8 = FNC_034(ld_24);
         }
      }
   }
   ld_ret_8 = FNC_034(ld_ret_8);
   ld_ret_8 *= FNC_035(as_0);
   return (ld_ret_8);
}

double FNC_034(double ad_0) {
   if (ad_0 < gd_1556) ad_0 = gd_1556;
   if (ad_0 > gd_104) ad_0 = gd_104;
   double ld_8 = gd_1548 * MathFloor(AccountFreeMargin() * MaxLotsPercent / 100000.0 / gd_1548);
   double ld_16 = gd_1548 * MathFloor(AccountBalance() * MaxLotsPercent / 100000.0 / gd_1548);
   double ld_24 = gd_1548 * MathFloor(AccountFreeMargin() * gd_1564 / 100000.0 / gd_1548);
   double ld_32 = gd_1548 * MathFloor(AccountFreeMargin() * gd_1572 / 100000.0 / gd_1548);
   double ld_40 = ld_16;
   if (CheckFreeMargin && ld_40 > ld_8) ld_40 = ld_8;
   if (CheckStopOutLevel && ld_40 > ld_24) ld_40 = ld_24;
   if (ld_40 > ld_32) ld_40 = ld_32;
   ld_40 = ld_40 - gda_2332[0][7] - gda_2332[1][7] - gda_2332[2][7] - gda_2332[3][7] - gda_2332[4][7] - gda_2332[5][7] - gda_2332[6][7];
   if (ad_0 > ld_40) ad_0 = ld_40;
   if (ad_0 < gd_1556) {
      if (ad_0 > 0.66 * gd_1556 && gd_1556 <= ld_32) ad_0 = gd_1556;
      else ad_0 = 0.0;
   }
   ad_0 = NormalizeDouble(ad_0, g_count_1308);
   return (ad_0);
}

double FNC_035(string as_0) {
   double ld_ret_8 = 1.0;
   if (as_0 == gs_2160) {
      if (gi_2176 == 1 && gi_2180 == -1) ld_ret_8 = 1.0 * ld_ret_8;
      if (gi_2176 == 1 && gi_2180 == 1) ld_ret_8 = 1.0 * ld_ret_8;
      if (gi_2176 == -1 && gi_2180 == -1) ld_ret_8 = 1.0 * ld_ret_8;
   }
   if (as_0 == gs_2168) {
      if (gi_2176 == 1 && gi_2180 == -1) ld_ret_8 = g_bid_2228 * ld_ret_8;
      if (gi_2176 == 1 && gi_2180 == 1) ld_ret_8 = gd_2076 * ld_ret_8;
      if (gi_2176 == -1 && gi_2180 == -1) ld_ret_8 = 1.0 * ld_ret_8;
   }
   return (ld_ret_8);
}

int FNC_036(int ai_0) {
   int li_8 = TimeCurrent() - gia_2324[ai_0][1];
   if (g_str2int_664) {
      if (li_8 >= 60 * g_str2int_680) return (gi_684 - gi_1212 + gi_1240 + gi_1208);
      if (li_8 >= 60 * g_str2int_640) return (gi_644 - gi_1212 + gi_1240 + gi_1208);
      if (li_8 >= 60 * g_str2int_632) return (gi_636 - gi_1212 + gi_1240 + gi_1208);
      if (li_8 >= 60 * g_str2int_676) return (gi_628 - gi_1212 + gi_1240 + gi_1208);
      if (li_8 >= 60 * g_str2int_668) return (gi_672 - gi_1212 + gi_1240 + gi_1208);
   }
   return (gi_356 - gi_1212 + gi_1240 + gi_1208);
}

int FNC_037(int ai_0) {
   bool li_ret_4 = FALSE;
   if (g_period_704 == 0 || g_period_780 == 0 || g_period_740 == 0) return (li_ret_4);
   double l_irsi_8 = iRSI(NULL, g_timeframe_700, g_period_704, g_applied_price_708, 0);
   double l_irsi_16 = iRSI(NULL, g_timeframe_776, g_period_780, g_applied_price_736, 0);
   double l_irsi_24 = iRSI(NULL, g_timeframe_712, g_period_716, g_applied_price_768, gi_772);
   double ld_32 = iMA(NULL, 0, g_period_740, 0, g_ma_method_752, g_applied_price_756, gi_760);
   double ld_40 = ld_32;
   double l_price_48 = Ask;
   double l_price_56 = Bid;
   if (g_str2int_764 == 1) l_price_48 = Bid;
   if (g_str2int_764 == 2) l_price_56 = Ask;
   if (g_str2int_560 == 1) {
      ld_32 = MathRound(ld_32 / Point) * Point;
      ld_40 = MathRound(ld_40 / Point) * Point;
   }
   if (g_str2int_560 == 2) {
      ld_32 = MathCeil(ld_32 / Point) * Point;
      ld_40 = MathFloor(ld_40 / Point) * Point;
   }
   if (g_str2int_560 == 3) {
      ld_32 = MathFloor(ld_32 / Point) * Point;
      ld_40 = MathCeil(ld_40 / Point) * Point;
   }
   if (l_irsi_8 < g_str2dbl_720 || l_irsi_16 < g_str2int_800 && ld_32 >= l_price_48 + gd_744 * Point)
      if (gi_1272 == TRUE || gi_1272 == FALSE && ai_0 == 0) li_ret_4 = TRUE;
   if (l_irsi_8 > g_str2dbl_728 || l_irsi_16 > g_str2int_804 && ld_40 <= l_price_56 - gd_744 * Point)
      if (gi_1272 == FALSE || gi_1272 == FALSE && ai_0 == 1) li_ret_4 = TRUE;
   if (l_irsi_24 < g_str2dbl_792 && l_irsi_24 > g_str2dbl_784 && g_str2int_696) gi_1272 = FALSE;
   return (li_ret_4);
}

bool FNC_038() {
   bool li_ret_0 = TRUE;
   if (TrendFilterLevel > 0) {
      if (iOpen(Symbol(), PERIOD_M5, 0) >= Ask + gd_828 * Point) li_ret_0 = FALSE;
      if (iOpen(Symbol(), PERIOD_M5, 0) <= Bid - gd_828 * Point) li_ret_0 = FALSE;
      if (iOpen(Symbol(), PERIOD_M5, 1) >= Ask + gd_836 * Point) li_ret_0 = FALSE;
      if (iOpen(Symbol(), PERIOD_M5, 1) <= Bid - gd_836 * Point) li_ret_0 = FALSE;
      if (iOpen(Symbol(), PERIOD_M5, 2) >= Ask + gd_844 * Point) li_ret_0 = FALSE;
      if (iOpen(Symbol(), PERIOD_M5, 2) <= Bid - gd_844 * Point) li_ret_0 = FALSE;
   }
   if (!li_ret_0) {
      if (gi_824) g_bars_1284 = Bars;
   } else
      if (g_bars_1284 == Bars) li_ret_0 = FALSE;
   return (li_ret_0);
}

int FNC_039() {
   bool li_ret_0 = FALSE;
   int l_cmd_4 = OrderType();
   int li_8 = g_str2int_452;
   bool l_str2int_12 = g_str2int_508;
   int li_16 = gi_492;
   double ld_20 = High[iHighest(NULL, 0, MODE_HIGH, li_8, 1)] + Point * li_16;
   double ld_28 = Low[iLowest(NULL, 0, MODE_LOW, li_8, 1)] - Point * li_16;
   if (gi_1236 == 10) {
      if (g_str2int_524 == 1) {
         ld_20 = MathRound(ld_20 / Point / gi_1236) * Point * gi_1236;
         ld_28 = MathRound(ld_28 / Point / gi_1236) * Point * gi_1236;
      }
      if (g_str2int_524 == 2) {
         ld_20 = MathFloor(ld_20 / Point / gi_1236) * Point * gi_1236;
         ld_28 = MathCeil(ld_28 / Point / gi_1236) * Point * gi_1236;
      }
      if (g_str2int_524 == 3) {
         ld_20 = MathCeil(ld_20 / Point / gi_1236) * Point * gi_1236;
         ld_28 = MathFloor(ld_28 / Point / gi_1236) * Point * gi_1236;
      }
   }
   if (!l_str2int_12) {
      ld_20 += Point;
      ld_28 -= Point;
   }
   if (l_cmd_4 == OP_BUY) li_ret_0 = MathRound((ld_20 - OrderOpenPrice()) / Point);
   if (l_cmd_4 == OP_SELL) {
      li_ret_0 = MathRound((OrderOpenPrice() - ld_28 - MarketInfo(Symbol(), MODE_SPREAD) * Point) / Point);
      if (!gi_1188) li_ret_0 = MathRound((OrderOpenPrice() - ld_28 - gi_344 * Point) / Point);
   }
   return (li_ret_0);
}

double FNC_040(int ai_0, int ai_unused_4) {
   int li_16;
   int li_20;
   int li_unused_24;
   int li_28;
   int li_32;
   int li_36;
   double ld_40;
   double ld_48;
   double ld_56;
   double ld_8 = 0.0;
   if (gi_264 != 0 && g_str2int_352 || g_str2int_452 != 0) {
      li_16 = MathRound(MarketInfo(Symbol(), MODE_STOPLEVEL));
      li_20 = MathRound(MarketInfo(Symbol(), MODE_FREEZELEVEL));
      li_unused_24 = MathRound(MarketInfo(Symbol(), MODE_SPREAD));
      li_28 = li_16 + li_20;
      if (!TrailingTakeProfit) {
         if (OrderTakeProfit() == 0.0) {
            ld_8 = 1.0 * gi_264;
            if (ld_8 <= 1.0 * li_28) ld_8 = 1.0 * li_28;
         }
      } else {
         if (g_str2int_452 != 0) li_36 = FNC_039();
         else li_36 = 999;
         if (g_str2int_352) {
            li_32 = FNC_036(ai_0);
            if (!gi_1188) li_32 -= gi_1244;
            if (li_32 > li_36 && li_36 != 999) li_32 = li_36;
         } else li_32 = li_36;
         if (OrderType() == OP_BUY) {
            ld_48 = NormalizeDouble(OrderOpenPrice() + li_32 * Point, Digits);
            if (IncreaseFreezeLevel) ld_40 = NormalizeDouble(Ask + li_16 * Point + li_20 * Point, Digits);
            else ld_40 = NormalizeDouble(Ask + li_16 * Point, Digits);
            if (OrderTakeProfit() == 0.0) {
               ld_56 = NormalizeDouble(ld_48 + li_20 * Point, Digits);
               if (ld_56 < ld_40) ld_56 = ld_40;
               if (ld_56 < ld_48) ld_56 = ld_48;
               ld_8 = (ld_56 - OrderOpenPrice()) / Point;
            } else
               if (MathRound(10000.0 * OrderTakeProfit()) - MathRound(10000.0 * ld_48) != 0.0 && MathRound(10000.0 * ld_48) > MathRound(10000.0 * ld_40)) ld_8 = 1.0 * li_32;
         }
         if (OrderType() == OP_SELL) {
            ld_48 = NormalizeDouble(OrderOpenPrice() - li_32 * Point, Digits);
            if (IncreaseFreezeLevel) ld_40 = NormalizeDouble(Bid - li_16 * Point - li_20 * Point, Digits);
            else ld_40 = NormalizeDouble(Bid - li_16 * Point, Digits);
            if (OrderTakeProfit() == 0.0) {
               ld_56 = NormalizeDouble(ld_48 - li_20 * Point, Digits);
               if (ld_56 > ld_40) ld_56 = ld_40;
               if (ld_56 > ld_48) ld_56 = ld_48;
               ld_8 = (OrderOpenPrice() - ld_56) / Point;
            } else
               if (MathRound(10000.0 * OrderTakeProfit()) - MathRound(10000.0 * ld_48) != 0.0 && MathRound(10000.0 * ld_48) < MathRound(10000.0 * ld_40)) ld_8 = 1.0 * li_32;
         }
      }
   }
   ld_8 = MathRound(ld_8);
   return (ld_8);
}

string FNC_041(int ai_0) {
   double ld_12;
   double l_global_var_20;
   int l_mb_code_28;
   double ld_32;
   double ld_40;
   double ld_48;
   string ls_ret_4 = "";
   if (gi_1796) {
      gi_1796 = FALSE;
      if (!IsOptimization() && !IsTesting() && GlobalVariableCheck(g_var_name_1988)) {
         if (GlobalVariableGet(g_var_name_1988) > AccountBalance() && ResetMaxBalance) {
            if (Language == "eng") l_mb_code_28 = MessageBox("Reset variable MaxBalance = " + DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) + AccountCurrency(), "Question", MB_YESNO|MB_ICONQUESTION);
            else l_mb_code_28 = MessageBox("Ñáðîñèòü ïåðåìåííóþ MaxBalance = " + DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) + AccountCurrency(), "Question", MB_YESNO|MB_ICONQUESTION);
            if (l_mb_code_28 == IDYES) {
               GlobalVariableSet(g_var_name_1988, AccountBalance());
               FNC_046(8, "FNC_041()", "Óñòàíîâëåíî íîâîå çíà÷åíèå MaxBalance = " + DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) + AccountCurrency(), "New MaxBalance value = " +
                  DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) + AccountCurrency());
            } else {
               FNC_046(8, "FNC_041()", "Çíà÷åíèå MaxBalance = " + DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) + AccountCurrency(), "MaxBalance value = " + DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) +
                  AccountCurrency());
            }
         } else {
            FNC_046(8, "FNC_041()", "Çíà÷åíèå MaxBalance = " + DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) + AccountCurrency(), "MaxBalance value = " + DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) +
               AccountCurrency());
         }
      } else {
         GlobalVariableSet(g_var_name_1988, AccountBalance());
         FNC_046(8, "FNC_041()", "Óñòàíîâëåíî íîâîå çíà÷åíèå MaxBalance = " + DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) + AccountCurrency(), "New MaxBalance value = " +
            DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) + AccountCurrency());
      }
      GlobalVariableSet(g_var_name_1996, GlobalVariableGet(g_var_name_1988));
   }
   if (!GlobalVariableCheck(g_var_name_1988) || !GlobalVariableCheck(g_var_name_1996)) {
      GlobalVariableSet(g_var_name_1988, AccountBalance());
      GlobalVariableSet(g_var_name_1996, AccountBalance());
      if (!GlobalVariableCheck(g_var_name_1988) || !GlobalVariableCheck(g_var_name_1996)) {
         FNC_046(8, "FNC_041()", "Îøèáêà ñîçäàíèÿ ãëîáàëüíûõ ïåðåìåííûõ MaxBalance: " + FNC_047(GetLastError()), "Error set gobal variables MaxBalance: " + FNC_047(GetLastError()));
         g_global_var_1588 = AccountBalance();
         l_global_var_20 = AccountBalance();
      }
   } else {
      g_global_var_1588 = GlobalVariableGet(g_var_name_1988);
      l_global_var_20 = GlobalVariableGet(g_var_name_1996);
   }
   if (AccountBalance() > g_global_var_1588) {
      gi_1788 = FALSE;
      g_global_var_1588 = AccountBalance();
      GlobalVariableSet(g_var_name_1988, g_global_var_1588);
   }
   if (RestoreLostProfit && ai_0 > 0) {
      ld_40 = FNC_032(l_global_var_20, LotsPercent);
      ld_48 = FNC_059("Symbol");
      ld_32 = ld_48 * ld_40;
      ld_12 = l_global_var_20 + ld_32 * AverageTradeProfit;
      if (g_global_var_1588 < ld_12) {
         g_global_var_1588 = ld_12;
         GlobalVariableSet(g_var_name_1988, g_global_var_1588);
      }
      GlobalVariableSet(g_var_name_1996, g_global_var_1588);
   }
   if (AccountBalance() < g_global_var_1588) {
      if (gd_156 > 0.0) {
         if (100.0 * (g_global_var_1588 - AccountBalance()) / (g_global_var_1588 - gd_116) > gd_156) {
            gi_1788 = TRUE;
            if (gi_168) gi_1768 = TRUE;
         }
      } else {
         if (gd_156 == 0.0) {
            if (100.0 * (g_global_var_1588 - AccountBalance()) / (g_global_var_1588 - gd_116) > MathRound(LotsPercent / 4)) {
               gi_1788 = TRUE;
               if (gi_168) gi_1768 = TRUE;
            }
         } else gi_1788 = TRUE;
      }
   }
   ls_ret_4 = ", MaxBalance=" + DoubleToStr(GlobalVariableGet(g_var_name_1988), 2) + " " + AccountCurrency();
   return (ls_ret_4);
}

int deinit() {
   int l_file_8;
   double ld_12;
   double ld_20;
   string ls_28;
   string ls_0 = gs_1948;
   FNC_092();
   FNC_058("deinit");
   if (gi_1108) Print("SysSpeed:  min=" + gi_1252 + "  average=" + DoubleToStr(gd_1532 / (1.0 * g_count_1260), 0) + "  max=" + gi_1256);
   if (!gi_1112) return (0);
   if (IsOptimization() || IsTesting()) {
      GlobalVariableSet(g_var_name_2004, 0.0);
      ld_12 = MathRound(GetTickCount() / 100);
      ld_20 = GlobalVariableGet("OptCounter");
      if (gi_1724) ld_20 = 1.0;
      else ld_20 += 1.0;
      GlobalVariableSet("OptCounter", ld_20);
      GlobalVariableSet("LastOptTime", ld_12);
      if (gi_1724 && gi_1128) l_file_8 = FileOpen(ls_0 + ".csv", FILE_CSV|FILE_WRITE, ';');
      else l_file_8 = FileOpen(ls_0 + ".csv", FILE_CSV|FILE_WRITE|FILE_READ, ';');
      if (l_file_8 < 1) {
         Print("Íåâîçìîæíî çàïèñàòü äàííûå â ôàéë " + ls_0 + ".csv, îøèáêà: ", GetLastError());
         return (0);
      }
      FileSeek(l_file_8, 0, SEEK_END);
      FNC_042();
      if (gi_1724) {
         if (IsTesting() && !IsOptimization()) {
            ls_28 = "Testing " + WindowExpertName() + " " + gs_1924 + " M" + Period() + " (Spread=" + DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) + " StopLevel=" + DoubleToStr(MarketInfo(Symbol(), MODE_STOPLEVEL), 0) + " FreezeLevel=" + DoubleToStr(MarketInfo(Symbol(), MODE_FREEZELEVEL), 0) + ")";
            FileWrite(l_file_8, ls_28);
         }
         if (IsOptimization()) {
            ls_28 = "Optimization " + WindowExpertName() + " " + gs_1924 + " M" + Period() + " (Spread=" + DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) + " StopLevel=" + DoubleToStr(MarketInfo(Symbol(), MODE_STOPLEVEL), 0) + " FreezeLevel=" + DoubleToStr(MarketInfo(Symbol(), MODE_FREEZELEVEL), 0) + ")";
            FileWrite(l_file_8, ls_28);
         }
         FileWrite(l_file_8, "¹", "ValProfitTotal", "ValNetProfit", "ValNetLoss", "ValProfitFactor", "ValAverProfit", "ValAverLoss", "PntProfitTotal", "PntNetProfit", "PntNetLoss", "PntProfitFactor", "PntAverProfit", "PntAverLoss", "TrdTotal", "TrdNetProfit", "TrdNetLoss", "TrdProfitPercent", "TrdLossPercent", "TrdProfitFactor", "TrdSLNumber", "TrdTPNumber", "TrdHNumber");
      }
      FileWrite(l_file_8, DoubleToStr(ld_20, 0), " " + DoubleToStr(gda_1636[1], 2), " " + DoubleToStr(gda_1636[2], 2), " " + DoubleToStr(gda_1636[3], 2), " " + DoubleToStr(gda_1636[6], 2), " " +
         DoubleToStr(gda_1636[4], 2), " " + DoubleToStr(gda_1636[5], 2), " " + DoubleToStr(gda_1636[11], 0), " " + DoubleToStr(gda_1636[12], 0), " " + DoubleToStr(gda_1636[13], 0), " " + DoubleToStr(gda_1636[14], 2), " " + DoubleToStr(gda_1636[15], 1), " " + DoubleToStr(gda_1636[16], 1), " " + DoubleToStr(gda_1636[21], 0), " " + DoubleToStr(gda_1636[22], 0), " " + DoubleToStr(gda_1636[23], 0), " " + DoubleToStr(gda_1636[24], 1) + "%", " " + DoubleToStr(gda_1636[25], 1) + "%", " " + DoubleToStr(gda_1636[26], 2), " " + DoubleToStr(gda_1636[27], 0), " " + DoubleToStr(gda_1636[28], 0), " " + DoubleToStr(gda_1636[29], 0));
      FileClose(l_file_8);
   }
   return (0);
}

int FNC_042() {
   int l_pos_0 = 0;
   double ld_12 = 0.0;
   int l_hist_total_8 = OrdersHistoryTotal();
   for (l_pos_0 = 0; l_pos_0 < l_hist_total_8; l_pos_0++) {
      OrderSelect(l_pos_0, SELECT_BY_POS, MODE_HISTORY);
      if (OrderSymbol() != Symbol() || OrderMagicNumber() != g_magic_1424) continue;
      gda_1636[21] += 1.0;
      gda_1636[1] += OrderProfit();
      if (ld_12 < gda_1636[1]) ld_12 = gda_1636[1];
      if (ld_12 > gda_1636[1])
         if (gda_1636[7] < ld_12 - MathAbs(gda_1636[1])) gda_1636[7] = ld_12 - MathAbs(gda_1636[1]);
      if (OrderProfit() >= 0.0) {
         gda_1636[11] += MathAbs((OrderOpenPrice() - OrderClosePrice()) / Point);
         gda_1636[12] += MathAbs((OrderOpenPrice() - OrderClosePrice()) / Point);
         if (gda_1636[19] < MathAbs((OrderOpenPrice() - OrderClosePrice()) / Point)) gda_1636[19] = MathAbs((OrderOpenPrice() - OrderClosePrice()) / Point);
         if (gda_1636[9] < OrderProfit()) gda_1636[9] = OrderProfit();
         gda_1636[2] += OrderProfit();
         gda_1636[22] += 1.0;
      } else {
         gda_1636[11] = gda_1636[11] - MathAbs((OrderOpenPrice() - OrderClosePrice()) / Point);
         gda_1636[13] = gda_1636[13] - MathAbs((OrderOpenPrice() - OrderClosePrice()) / Point);
         if (MathAbs(gda_1636[20]) < MathAbs((OrderOpenPrice() - OrderClosePrice()) / Point)) gda_1636[20] = -1.0 * MathAbs((OrderOpenPrice() - OrderClosePrice()) / Point);
         if (gda_1636[10] > OrderProfit()) gda_1636[10] = OrderProfit();
         gda_1636[3] += OrderProfit();
         gda_1636[23] += 1.0;
      }
   }
   if (gda_1636[21] != 0.0) gda_1636[24] = 100.0 * (gda_1636[22] / gda_1636[21]);
   if (gda_1636[21] != 0.0) gda_1636[25] = 100.0 * (gda_1636[23] / gda_1636[21]);
   if (gda_1636[3] != 0.0) gda_1636[6] = MathAbs(gda_1636[2] / gda_1636[3]);
   if (gda_1636[13] != 0.0) gda_1636[14] = MathAbs(gda_1636[12] / gda_1636[13]);
   if (gda_1636[23] != 0.0) gda_1636[26] = gda_1636[22] / gda_1636[23];
   if (gda_1636[22] > 0.0) gda_1636[4] = gda_1636[2] / gda_1636[22];
   if (gda_1636[23] > 0.0) gda_1636[5] = MathAbs(gda_1636[3] / gda_1636[23]);
   if (gda_1636[22] > 0.0) gda_1636[15] = gda_1636[12] / gda_1636[22];
   if (gda_1636[23] > 0.0) gda_1636[16] = MathAbs(gda_1636[13] / gda_1636[23]);
   return (0);
}

int FNC_043() {
   string ls_12;
   string l_name_20;
   string ls_28;
   int l_file_36;
   int l_str2time_80;
   string ls_84;
   bool li_ret_0 = FALSE;
   bool li_4 = FALSE;
   bool li_8 = FALSE;
   int li_48 = 99;
   int li_52 = 99;
   int l_str2int_56 = 99;
   int l_str2int_60 = 99;
   bool l_str2time_64 = FALSE;
   bool l_str2time_68 = FALSE;
   bool l_str2time_72 = FALSE;
   bool l_str2time_76 = FALSE;
   int l_count_40 = 51;
   while (l_count_40 > 0) {
      l_count_40--;
      if (l_count_40 == 0) ls_12 = "";
      else {
         if (l_count_40 > 9) ls_12 = l_count_40;
         else ls_12 = "0" + l_count_40;
      }
      l_name_20 = "gmtstd" + ls_12 + ".csv";
      l_file_36 = FileOpen(l_name_20, FILE_CSV|FILE_READ, ';');
      if (l_file_36 >= 0) break;
   }
   if (l_file_36 < 1) FNC_046(8, "FNC_043()", "Ôàéë íàñòðîåê ðàçíèö GMT íå çàãðóæåí, îøèáêà: " + FNC_047(GetLastError()), "Can not load GMTSTD file, error: " + FNC_047(GetLastError()));
   else {
      FNC_046(8, "FNC_043()", "Çàãðóæåí ôàéë íàñòðîåê ðàçíèö GMT (" + l_name_20 + ")", "GMTSTD file loaded (" + l_name_20 + ")");
      ls_12 = FileReadString(l_file_36);
      ls_12 = FileReadString(l_file_36);
      for (ls_12 = FileReadString(l_file_36); !FileIsEnding(l_file_36); ls_12 = FileReadString(l_file_36)) {
         ls_12 = FileReadString(l_file_36);
         if (AccountCompany() == ls_12) {
            l_str2int_56 = StrToInteger(FileReadString(l_file_36));
            l_str2int_60 = StrToInteger(FileReadString(l_file_36));
            li_4 = TRUE;
            break;
         }
         ls_12 = FileReadString(l_file_36);
      }
      FileClose(l_file_36);
   }
   if (!li_4) FNC_046(8, "FNC_043()", "Íàñòðîéêè ðàçíèöû GMT â ôàëå " + l_name_20 + " äëÿ äàííîãî áðîêåðà îòñóòñòâóþò", "No GMTSTD settings for this brocker");
   int l_shift_44 = iBarShift(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, D'24.10.2008 05:00', TRUE);
   if (l_shift_44 >= 240) {
      for (l_count_40 = 2; l_count_40 < 14; l_count_40++) {
         if (l_count_40 < 10) ls_28 = "0" + l_count_40;
         else ls_28 = l_count_40;
         l_str2time_80 = StrToTime("2008.10.24 " + ls_28 + ":00");
         l_shift_44 = iBarShift(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_str2time_80);
         if (iHigh(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_shift_44) > 1.562 && iLow(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_shift_44) < 1.562) {
            l_str2time_64 = l_str2time_80;
            li_48 = l_count_40 - 8;
            break;
         }
      }
      if (l_str2time_64 == 0) {
      }
      for (l_count_40 = 0; l_count_40 < 12; l_count_40++) {
         if (l_count_40 < 10) ls_28 = "0" + l_count_40;
         else ls_28 = l_count_40;
         l_str2time_80 = StrToTime("2008.10.27 " + ls_28 + ":00");
         l_shift_44 = iBarShift(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_str2time_80);
         if (iHigh(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_shift_44) > 1.55 && iLow(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_shift_44) < 1.55) {
            l_str2time_68 = l_str2time_80;
            break;
         }
      }
      if (l_str2time_68 == 0) {
      }
      for (l_count_40 = 6; l_count_40 < 18; l_count_40++) {
         if (l_count_40 < 10) ls_28 = "0" + l_count_40;
         else ls_28 = l_count_40;
         l_str2time_80 = StrToTime("2008.11.03 " + ls_28 + ":00");
         l_shift_44 = iBarShift(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_str2time_80);
         if (iHigh(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_shift_44) > 1.607 && iLow(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_shift_44) < 1.607) {
            l_str2time_72 = l_str2time_80;
            break;
         }
      }
      if (l_str2time_72 == 0) {
      }
      for (l_count_40 = 8; l_count_40 < 20; l_count_40++) {
         if (l_count_40 < 10) ls_28 = "0" + l_count_40;
         else ls_28 = l_count_40;
         l_str2time_80 = StrToTime("2008.11.05 " + ls_28 + ":00");
         l_shift_44 = iBarShift(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_str2time_80);
         if (iHigh(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_shift_44) > 1.61 && iLow(gs_2028 + "GBPUSD" + gs_2036, PERIOD_H1, l_shift_44) < 1.61) {
            l_str2time_76 = l_str2time_80;
            break;
         }
      }
      if (l_str2time_76 == 0) {
      }
      if (TimeHour(l_str2time_68) - TimeHour(l_str2time_64) == -2) {
         li_52 = 0;
         li_8 = TRUE;
      } else {
         if (TimeHour(l_str2time_68) - TimeHour(l_str2time_64) == -1) {
            if (TimeHour(l_str2time_72) - TimeHour(l_str2time_68) == 5) {
               li_52 = 1;
               li_8 = TRUE;
            } else {
               if (TimeHour(l_str2time_72) - TimeHour(l_str2time_68) == 6) {
                  if (TimeHour(l_str2time_76) - TimeHour(l_str2time_72) == 2) {
                     li_52 = 2;
                     li_8 = TRUE;
                  } else {
                     if (TimeHour(l_str2time_76) - TimeHour(l_str2time_72) == TRUE) {
                        li_52 = 3;
                        li_8 = TRUE;
                     }
                  }
               }
            }
         }
      }
   }
   if (UseAutoTimeSettings) {
      ls_84 = "";
      if (li_4) {
         if (li_8) {
            if (l_str2int_56 == li_48 && l_str2int_60 == li_52) FNC_046(8, "GMTAutoDetection()", "Çàãðóæåííàÿ ðàçíèöà ñ GMT ïðîâåðåíà", "GMT difference checked");
            else {
               if (li_48 >= 0) ls_84 = "+";
               FNC_046(8, "FNC_043()", "Ðàñ÷åòíûå íàñòðîéêè âðåìåíè íå ñîâïàäàþò ñ çàãðóæåííûìè: GMT" + ls_84 + li_48 + " (SWCM" + li_52 + ")", "Calculated and loaded times settings are not the same : GMT" +
                  ls_84 + li_48 + " (SWCM" + li_52 + ")");
            }
         }
         ls_84 = "";
         TimeZone = l_str2int_56;
         SWChangeMode = l_str2int_60;
         if (TimeZone >= 0) ls_84 = "+";
         FNC_046(8, "FNC_043()", "Óñòàíîâëåíû çàãðóæåííûå íàñòðîéêè âðåìåíè: GMT" + ls_84 + TimeZone + " (SWCM" + SWChangeMode + ")", "Loaded times settings: GMT" + ls_84 +
            TimeZone + " (SWCM" + SWChangeMode + ")");
      } else {
         if (li_8) {
            TimeZone = li_48;
            SWChangeMode = li_52;
            if (TimeZone >= 0) ls_84 = "+";
            FNC_046(8, "FNC_043()", "Óñòàíîâëåíû ðàñ÷åòíûå íàñòðîéêè âðåìåíè: GMT" + ls_84 + TimeZone + " (SWCM" + SWChangeMode + ")", "Calculated times settings: GMT" + ls_84 +
               TimeZone + " (SWCM" + SWChangeMode + ")");
         } else {
            if (TimeZone >= 0) ls_84 = "+";
            FNC_046(8, "FNC_043()", "Óñòàíîâëåíû ïðåäóñòàíîâëåííûå íàñòðîéêè âðåìåíè: GMT" + ls_84 + TimeZone + " (SWCM" + SWChangeMode + ")", "Loaded default times settings: GMT" +
               ls_84 + TimeZone + " (SWCM" + SWChangeMode + ")");
         }
      }
   } else {
      if (TimeZone >= 0) ls_84 = "+";
      FNC_046(8, "FNC_043()", "Óñòàíîâëåíû ïðåäóñòàíîâëåííûå íàñòðîéêè âðåìåíè: GMT" + ls_84 + TimeZone + " (SWCM" + SWChangeMode + ")", "Loaded default times settings: GMT" +
         ls_84 + TimeZone + " (SWCM" + SWChangeMode + ")");
   }
   return (li_ret_0);
}

int FNC_044() {
   bool li_24;
   bool li_ret_4 = FALSE;
   if (!gi_1056 || !ShowTimes) return (li_ret_4);
   gs_1884 = "00 " + "01 " + "02 " + "03 " + "04 " + "05 " + "06 " + "07 " + "08 " + "09 " + "10 " + "11 " + "12 " + "13 " + "14 " + "15 " + "16 " + "17 " + "18 " + "19 " + "20 " + "21 " + "22 " + "23 " + "24 " 
   + "\n";
   int li_28 = TimeCurrent() - 86400 * DayOfWeek() - 3600 * Hour() - 60 * Minute() - Seconds() + 86400 + 1800;
   for (int li_8 = 1; li_8 < 6; li_8++) {
      gs_1884 = gs_1884 + " |";
      for (int l_count_20 = 0; l_count_20 < 24; l_count_20++) {
         for (int li_0 = 0; li_0 < 10; li_0 += 2) {
            li_24 = FALSE;
            if (FNC_027(li_28)) {
               li_24 = TRUE;
               break;
            }
         }
         if (li_24) gs_1884 = gs_1884 + ":::|";
         else gs_1884 = gs_1884 + "   |";
         li_28 += 3600;
      }
      gs_1884 = gs_1884 
      + "\n";
   }
   return (li_ret_4);
}

int FNC_045() {
   if (!gi_1056) return (0);
   gs_1876 = "";
   string ls_0 = " GMT";
   string ls_8 = "";
   if (TimeZone >= 0) ls_0 = ls_0 + "+" + TimeZone;
   else ls_0 = ls_0 + "" + TimeZone;
   if (gi_1280 > 0) ls_0 = ls_0 + " (Corr+" + gi_1280 + ")";
   if (gi_1280 < 0) ls_0 = ls_0 + " (Corr" + gi_1280 + ")";
   if (gi_1280 == 0) ls_0 = ls_0 + " (Corr " + gi_1280 + ")";
   gs_1876 = gs_1876 + AccountCompany() + " (" + AccountNumber() + "): " + AccountName() + " (magic " + ((g_magic_1424 - gi_1444)) + "+" + gi_1444 + ")" + ls_0 + ls_8 
   + "\n";
   string ls_16 = "Cross (normal) Mode";
   if (CrossOverMode) ls_16 = "Cross Over Mode";
   if (MarketInfoMode) ls_16 = "Market Information Mode";
   gs_1876 = gs_1876 + ls_16 
   + "\n";
   if (gi_960 && !gi_956) {
      gs_1876 = gs_1876 + "Ðåæèì ïåðåäà÷è äàííûõ" 
      + "\n";
   }
   if (!gi_960 && gi_956) {
      gs_1876 = gs_1876 + "Ðåæèì ïðèåìà äàííûõ" 
      + "\n";
   }
   return (0);
}

int FNC_046(int ai_0, string as_4, string as_12, string as_20) {
   if (Language == "eng") as_12 = as_20;
   bool li_ret_28 = FALSE;
   string ls_40 = "";
   if (ai_0 == 8 || ai_0 == 9) {
      if (gi_1068) as_12 = as_4 + ": " + as_12;
      if (ai_0 == 8 || (ai_0 == 9 && gi_1096)) {
         if (gi_1080) {
            ls_40 = ls_40 + TimeToStr(TimeCurrent(), TIME_SECONDS) + " : ";
            if (gi_1084) ls_40 = ls_40 + "euronis";
            if (gi_1088) ls_40 = ls_40 + "(" + g_magic_1424 + ")";
            if (gi_1084 || gi_1088) ls_40 = ls_40 + ": ";
            Print(ls_40 + as_12);
         }
         ls_40 = "";
         if (gi_1056) {
            if (ShowTimes) ls_40 = ls_40 + gs_1884;
            if (ShowInformation) {
               g_count_1488++;
               if (g_count_1488 > InformationStringNumber) {
                  g_count_1488 = InformationStringNumber;
                  if (InformationStringNumber > 1) for (int l_index_32 = 0; l_index_32 < InformationStringNumber - 1; l_index_32++) gsa_1856[l_index_32] = gsa_1856[l_index_32 + 1];
               }
               gsa_1856[g_count_1488 - 1] = TimeToStr(TimeCurrent(), TIME_SECONDS) + " : " + as_12;
               for (l_index_32 = 0; l_index_32 < InformationStringNumber; l_index_32++) {
                  ls_40 = ls_40 + gsa_1856[l_index_32];
                  if (l_index_32 < InformationStringNumber - 1) {
                     ls_40 = ls_40 
                     + "\n";
                  }
               }
            }
            gs_1908 = ls_40;
            if (ShowStateInfo) {
               ls_40 = ls_40 
                  + "\n" 
                  + gsa_1852[0] 
                  + "\n" 
                  + gsa_1852[1] 
                  + "\n" 
                  + gsa_1852[2] 
                  + "\n" 
                  + gsa_1852[3] 
                  + "\n" 
                  + gsa_1852[4] 
                  + "\n" 
                  + gsa_1852[5] 
                  + "\n" 
               + gsa_1852[6];
            }
            Comment(gs_1876 + gs_1972 + ls_40);
         }
      }
      if (gi_1104) {
         for (l_index_32 = 0; l_index_32 < 20; l_index_32++) {
            if (gsa_1872[l_index_32] == "") {
               gsa_1872[l_index_32] = TimeToStr(TimeCurrent(), TIME_SECONDS) + " : " + as_12;
               if (l_index_32 != 19) break;
               FNC_058(" ");
               break;
            }
         }
      }
   }
   if (ai_0 == 0 || ai_0 == 1 || ai_0 == 2 || ai_0 == 3 || ai_0 == 4 || ai_0 == 5 || ai_0 == 6) {
      gsa_1852[ai_0] = as_12;
      if (gi_1056) {
         ls_40 = gs_1908;
         if (ShowStateInfo) {
            ls_40 = ls_40 
               + "\n" 
               + gsa_1852[0] 
               + "\n" 
               + gsa_1852[1] 
               + "\n" 
               + gsa_1852[2] 
               + "\n" 
               + gsa_1852[3] 
               + "\n" 
               + gsa_1852[4] 
               + "\n" 
               + gsa_1852[5] 
               + "\n" 
            + gsa_1852[6];
         }
         Comment(gs_1876 + gs_1972 + ls_40);
      }
   }
   if (ai_0 == 7) {
      if (gi_1056) {
         ls_40 = gs_1908;
         if (ShowStateInfo) {
            ls_40 = ls_40 
               + "\n" 
               + gsa_1852[0] 
               + "\n" 
               + gsa_1852[1] 
               + "\n" 
               + gsa_1852[2] 
               + "\n" 
               + gsa_1852[3] 
               + "\n" 
               + gsa_1852[4] 
               + "\n" 
               + gsa_1852[5] 
               + "\n" 
            + gsa_1852[6];
         }
         Comment(gs_1876 + gs_1972 + ls_40);
      }
   }
   return (li_ret_28);
}

string FNC_047(int ai_0) {
   if (ai_0 > 4299 || ai_0 < 0) ai_0 = 4299;
   string ls_ret_4 = ai_0 + " " + gsa_1868[ai_0];
   return (ls_ret_4);
}

void FNC_048() {
   if (Language == "eng") {
      gsa_1868[0] = "No error returned";
      gsa_1868[1] = "No error returned, but the result is unknown";
      gsa_1868[2] = "Common error";
      gsa_1868[3] = "Invalid trade parameters";
      gsa_1868[4] = "Trade server is busy";
      gsa_1868[5] = "Old version of the client terminal";
      gsa_1868[6] = "No connection with trade server";
      gsa_1868[7] = "Not enough rights";
      gsa_1868[8] = "Too frequent requests";
      gsa_1868[9] = "Malfunctional trade operation";
      gsa_1868[64] = "Account disabled";
      gsa_1868[65] = "Invalid account";
      gsa_1868[128] = "Trade timeout";
      gsa_1868[129] = "Invalid price";
      gsa_1868[130] = "Invalid stops";
      gsa_1868[131] = "Invalid trade volume";
      gsa_1868[132] = "Market is closed";
      gsa_1868[133] = "Trade is disabled";
      gsa_1868[134] = "Not enough money";
      gsa_1868[135] = "Price changed";
      gsa_1868[136] = "Off quotes";
      gsa_1868[137] = "Broker is busy";
      gsa_1868[138] = "Requote";
      gsa_1868[139] = "Order is locked";
      gsa_1868[140] = "Long positions only allowed";
      gsa_1868[141] = "Too many requests";
      gsa_1868[145] = "Modification denied because an order is too close to market";
      gsa_1868[146] = "Trade context busy";
      gsa_1868[147] = "Expirations are denied by broker";
      gsa_1868[148] = "The amount of opened and pending orders has reached the limit set by a broker";
      gsa_1868[4000] = "No error";
      gsa_1868[4001] = "Wrong function pointer";
      gsa_1868[4002] = "Array index is out of range";
      gsa_1868[4003] = "No memory for function call stack";
      gsa_1868[4004] = "Recursive stack overflow";
      gsa_1868[4005] = "Íà ñòåêå íåò ïàìÿòè äëÿ ïåðåäà÷è ïàðàìåòðîâ";
      gsa_1868[4006] = "Not enough stack for parameter";
      gsa_1868[4007] = "No memory for parameter string";
      gsa_1868[4008] = "Not initialized string";
      gsa_1868[4009] = "Not initialized string in an array";
      gsa_1868[4010] = "No memory for an array string";
      gsa_1868[4011] = "Too long string";
      gsa_1868[4012] = "Remainder from zero divide";
      gsa_1868[4013] = "Zero divide";
      gsa_1868[4014] = "Unknown command";
      gsa_1868[4015] = "Wrong jump";
      gsa_1868[4016] = "Not initialized array";
      gsa_1868[4017] = "DLL calls are not allowed";
      gsa_1868[4018] = "Cannot load library";
      gsa_1868[4019] = "Cannot call function";
      gsa_1868[4020] = "EA function calls are not allowed";
      gsa_1868[4021] = "Not enough memory for a string returned from a function";
      gsa_1868[4022] = "System is busy";
      gsa_1868[4050] = "Invalid function parameters count";
      gsa_1868[4051] = "Invalid function parameter value";
      gsa_1868[4052] = "String function internal error";
      gsa_1868[4053] = "Some array error";
      gsa_1868[4054] = "Incorrect series array using";
      gsa_1868[4055] = "Custom indicator error";
      gsa_1868[4056] = "Arrays are incompatible";
      gsa_1868[4057] = "Global variables processing error";
      gsa_1868[4058] = "Global variable not found";
      gsa_1868[4059] = "Function is not allowed in testing mode";
      gsa_1868[4060] = "Function is not confirmed";
      gsa_1868[4061] = "Mail sending error";
      gsa_1868[4062] = "String parameter expected";
      gsa_1868[4063] = "Integer parameter expected";
      gsa_1868[4064] = "Double parameter expected";
      gsa_1868[4065] = "Array as parameter expected";
      gsa_1868[4066] = "Requested history data in updating state";
      gsa_1868[4067] = "Some error in trade operation execution";
      gsa_1868[4099] = "End of a file";
      gsa_1868[4100] = "Some file error";
      gsa_1868[4101] = "Wrong file name";
      gsa_1868[4102] = "Too many opened files";
      gsa_1868[4103] = "Cannot open file";
      gsa_1868[4104] = "Incompatible access to a file";
      gsa_1868[4105] = "No order selected";
      gsa_1868[4106] = "Unknown symbol";
      gsa_1868[4107] = "Invalid price";
      gsa_1868[4108] = "Invalid ticket";
      gsa_1868[4109] = "Trade is not allowed";
      gsa_1868[4110] = "Longs are not allowed";
      gsa_1868[4111] = "Shorts are not allowed";
      gsa_1868[4200] = "Object already exists";
      gsa_1868[4201] = "Unknown object property";
      gsa_1868[4202] = "Object does not exist";
      gsa_1868[4203] = "Unknown object type";
      gsa_1868[4204] = "No object name";
      gsa_1868[4205] = "Object coordinates error";
      gsa_1868[4206] = "No specified subwindow";
      gsa_1868[4207] = "Some error in object operation";
      gsa_1868[4299] = "Error code is out of range";
      return;
   }
   gsa_1868[0] = "Íåò îøèáêè";
   gsa_1868[1] = "Íåò îøèáêè, íî ðåçóëüòàò íåèçâåñòåí";
   gsa_1868[2] = "Îáùàÿ îøèáêà";
   gsa_1868[3] = "Íåïðàâèëüíûå ïàðàìåòðû";
   gsa_1868[4] = "Òîðãîâûé ñåðâåð çàíÿò";
   gsa_1868[5] = "Ñòàðàÿ âåðñèÿ êëèåíòñêîãî òåðìèíàëà";
   gsa_1868[6] = "Íåò ñâÿçè ñ òîðãîâûì ñåðâåðîì";
   gsa_1868[7] = "Íåäîñòàòî÷íî ïðàâ";
   gsa_1868[8] = "Ñëèøêîì ÷àñòûå çàïðîñû";
   gsa_1868[9] = "Íåäîïóñòèìàÿ îïåðàöèÿ íàðóøàþùàÿ ôóíêöèîíèðîâàíèå ñåðâåðà";
   gsa_1868[64] = "Ñ÷åò çàáëîêèðîâàí";
   gsa_1868[65] = "Íåïðàâèëüíûé íîìåð ñ÷åòà";
   gsa_1868[128] = "Èñòåê ñðîê îæèäàíèÿ ñîâåðøåíèÿ ñäåëêè";
   gsa_1868[129] = "Íåïðàâèëüíàÿ öåíà";
   gsa_1868[130] = "Íåïðàâèëüíûå ñòîïû";
   gsa_1868[131] = "Íåïðàâèëüíûé îáúåì";
   gsa_1868[132] = "Ðûíîê çàêðûò";
   gsa_1868[133] = "Òîðãîâëÿ çàïðåùåíà";
   gsa_1868[134] = "Íåäîñòàòî÷íî äåíåã äëÿ ñîâåðøåíèÿ îïåðàöèè";
   gsa_1868[135] = "Öåíà èçìåíèëàñü";
   gsa_1868[136] = "Íåò öåí";
   gsa_1868[137] = "Áðîêåð çàíÿò";
   gsa_1868[138] = "Íîâûå öåíû";
   gsa_1868[139] = "Îðäåð çàáëîêèðîâàí è óæå îáðàáàòûâàåòñÿ";
   gsa_1868[140] = "Ðàçðåøåíà òîëüêî ïîêóïêà";
   gsa_1868[141] = "Ñëèøêîì ìíîãî çàïðîñîâ";
   gsa_1868[145] = "Ìîäèôèêàöèÿ çàïðåùåíà, òàê êàê îðäåð ñëèøêîì áëèçîê ê ðûíêó";
   gsa_1868[146] = "Ïîäñèñòåìà òîðãîâëè çàíÿòà";
   gsa_1868[147] = "Èñïîëüçîâàíèå äàòû èñòå÷åíèÿ îðäåðà çàïðåùåíî áðîêåðîì";
   gsa_1868[148] = "Êîëè÷åñòâî îòêðûòûõ è îòëîæåííûõ îðäåðîâ äîñòèãëî ïðåäåëà, óñòàíîâëåííîãî áðîêåðîì";
   gsa_1868[4000] = "Íåò îøèáêè";
   gsa_1868[4001] = "Íåïðàâèëüíûé óêàçàòåëü ôóíêöèè";
   gsa_1868[4002] = "Èíäåêñ ìàññèâà - âíå äèàïàçîíà";
   gsa_1868[4003] = "Íåò ïàìÿòè äëÿ ñòåêà ôóíêöèé";
   gsa_1868[4004] = "Ïåðåïîëíåíèå ñòåêà ïîñëå ðåêóðñèâíîãî âûçîâà";
   gsa_1868[4005] = "Íà ñòåêå íåò ïàìÿòè äëÿ ïåðåäà÷è ïàðàìåòðîâ";
   gsa_1868[4006] = "Íåò ïàìÿòè äëÿ ñòðîêîâîãî ïàðàìåòðà";
   gsa_1868[4007] = "Íåò ïàìÿòè äëÿ âðåìåííîé ñòðîêè";
   gsa_1868[4008] = "Íåèíèöèàëèçèðîâàííàÿ ñòðîêà";
   gsa_1868[4009] = "Íåèíèöèàëèçèðîâàííàÿ ñòðîêà â ìàññèâå";
   gsa_1868[4010] = "Íåò ïàìÿòè äëÿ ñòðîêîâîãî ìàññèâà";
   gsa_1868[4011] = "Ñëèøêîì äëèííàÿ ñòðîêà";
   gsa_1868[4012] = "Îñòàòîê îò äåëåíèÿ íà íîëü";
   gsa_1868[4013] = "Äåëåíèå íà íîëü";
   gsa_1868[4014] = "Íåèçâåñòíàÿ êîìàíäà";
   gsa_1868[4015] = "Íåïðàâèëüíûé ïåðåõîä";
   gsa_1868[4016] = "Íåèíèöèàëèçèðîâàííûé ìàññèâ";
   gsa_1868[4017] = "Âûçîâû DLL íå ðàçðåøåíû";
   gsa_1868[4018] = "Íåâîçìîæíî çàãðóçèòü áèáëèîòåêó";
   gsa_1868[4019] = "Íåâîçìîæíî âûçâàòü ôóíêöèþ";
   gsa_1868[4020] = "Âûçîâû âíåøíèõ áèáëèîòå÷íûõ ôóíêöèé íå ðàçðåøåíû";
   gsa_1868[4021] = "Íåäîñòàòî÷íî ïàìÿòè äëÿ ñòðîêè, âîçâðàùàåìîé èç ôóíêöèè";
   gsa_1868[4022] = "Ñèñòåìà çàíÿòà";
   gsa_1868[4050] = "Íåïðàâèëüíîå êîëè÷åñòâî ïàðàìåòðîâ ôóíêöèè";
   gsa_1868[4051] = "Íåäîïóñòèìîå çíà÷åíèå ïàðàìåòðà ôóíêöèè";
   gsa_1868[4052] = "Âíóòðåííÿÿ îøèáêà ñòðîêîâîé ôóíêöèè";
   gsa_1868[4053] = "Îøèáêà ìàññèâà";
   gsa_1868[4054] = "Íåïðàâèëüíîå èñïîëüçîâàíèå ìàññèâà-òàéìñåðèè";
   gsa_1868[4055] = "Îøèáêà ïîëüçîâàòåëüñêîãî èíäèêàòîðà";
   gsa_1868[4056] = "Ìàññèâû íåñîâìåñòèìû";
   gsa_1868[4057] = "Îøèáêà îáðàáîòêè ãëîáàëüíûåõ ïåðåìåííûõ";
   gsa_1868[4058] = "Ãëîáàëüíàÿ ïåðåìåííàÿ íå îáíàðóæåíà";
   gsa_1868[4059] = "Ôóíêöèÿ íå ðàçðåøåíà â òåñòîâîì ðåæèìå";
   gsa_1868[4060] = "Ôóíêöèÿ íå ðàçðåøåíà";
   gsa_1868[4061] = "Îøèáêà îòïðàâêè ïî÷òû";
   gsa_1868[4062] = "Îæèäàåòñÿ ïàðàìåòð òèïà string";
   gsa_1868[4063] = "Îæèäàåòñÿ ïàðàìåòð òèïà integer";
   gsa_1868[4064] = "Îæèäàåòñÿ ïàðàìåòð òèïà double";
   gsa_1868[4065] = "Â êà÷åñòâå ïàðàìåòðà îæèäàåòñÿ ìàññèâ";
   gsa_1868[4066] = "Çàïðîøåííûå èñòîðè÷åñêèå äàííûå â ñîñòîÿíèè îáíîâëåíèÿ";
   gsa_1868[4067] = "Îøèáêà ïðè âûïîëíåíèè òîðãîâîé îïåðàöèè";
   gsa_1868[4099] = "Êîíåö ôàéëà";
   gsa_1868[4100] = "Îøèáêà ïðè ðàáîòå ñ ôàéëîì";
   gsa_1868[4101] = "Íåïðàâèëüíîå èìÿ ôàéëà";
   gsa_1868[4102] = "Ñëèøêîì ìíîãî îòêðûòûõ ôàéëîâ";
   gsa_1868[4103] = "Íåâîçìîæíî îòêðûòü ôàéë";
   gsa_1868[4104] = "Íåñîâìåñòèìûé ðåæèì äîñòóïà ê ôàéëó";
   gsa_1868[4105] = "Íè îäèí îðäåð íå âûáðàí";
   gsa_1868[4106] = "Íåèçâåñòíûé ñèìâîë";
   gsa_1868[4107] = "Íåïðàâèëüíûé ïàðàìåòð öåíû äëÿ òîðãîâîé ôóíêöèè";
   gsa_1868[4108] = "Íåâåðíûé íîìåð òèêåòà";
   gsa_1868[4109] = "Òîðãîâëÿ íå ðàçðåøåíà. Íåîáõîäèìî âêëþ÷èòü îïöèþ Ðàçðåøèòü ñîâåòíèêó òîðãîâàòü â ñâîéñòâàõ ýêñïåðòà";
   gsa_1868[4110] = "Äëèííûå ïîçèöèè íå ðàçðåøåíû. Íåîáõîäèìî ïðîâåðèòü ñâîéñòâà ýêñïåðòà";
   gsa_1868[4111] = "Êîðîòêèå ïîçèöèè íå ðàçðåøåíû. Íåîáõîäèìî ïðîâåðèòü ñâîéñòâà ýêñïåðòà";
   gsa_1868[4200] = "Îáúåêò óæå ñóùåñòâóåò";
   gsa_1868[4201] = "Çàïðîøåíî íåèçâåñòíîå ñâîéñòâî îáúåêòà";
   gsa_1868[4202] = "Îáúåêò íå ñóùåñòâóåò";
   gsa_1868[4203] = "Íåèçâåñòíûé òèï îáúåêòà";
   gsa_1868[4204] = "Íåò èìåíè îáúåêòà";
   gsa_1868[4205] = "Îøèáêà êîîðäèíàò îáúåêòà";
   gsa_1868[4206] = "Íå íàéäåíî óêàçàííîå ïîäîêíî";
   gsa_1868[4207] = "Îøèáêà ïðè ðàáîòå ñ îáúåêòîì";
   gsa_1868[4299] = "Êîä îøèáêè âíå äèàïàçîíà";
}

int FNC_049() {
   int li_ret_0 = FNC_077();
   if (li_ret_0 > 0) FNC_066(li_ret_0);
   gi_1276 = li_ret_0;
   FNC_046(8, "FNC_049()", "Èíèöèàëèçèðîâàíî íàñòðîåê: " + gi_1276, "Settings total: " + gi_1276);
   return (li_ret_0);
}

int FNC_050(int ai_0, bool ai_4) {
   int li_ret_8 = -1;
   int li_12 = -1;
   if (ai_0 == 0) return (li_ret_8);
   if (ai_0 > gi_1276) {
      if (ai_4) FNC_046(8, "SetMode()", "Îøèáêà óñòàíîâêè íàñòðîåê: íåñóùåñòâóþèé ðåæèì", "Error load settings: unknown settings");
      return (li_ret_8);
   }
   li_12++;
   gs_1916 = gsa_1864[li_12][ai_0];
   li_12++;
   g_str2int_260 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 += gi_1460;
   gi_256 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12 += gi_1460;
   gi_264 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12++;
   li_12++;
   if (AverageTradeProfit == 0) AverageTradeProfit = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   li_12++;
   g_str2int_276 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_280 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_284 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_316 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_320 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_300 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_304 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   li_12++;
   g_str2int_308 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   li_12++;
   gi_312 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   gi_324 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   li_12++;
   if (g_slippage_328 == 0) g_slippage_328 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   if (g_slippage_332 == 0) g_slippage_332 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   li_12 += gi_1460;
   gi_344 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12 += gi_1460;
   if (MaxSpreadValue == 0) MaxSpreadValue = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12++;
   g_str2int_336 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_340 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_360 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_364 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_376 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gi_348 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_352 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 += gi_1460;
   gi_356 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12++;
   g_str2int_380 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_384 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gd_396 = StrToDouble(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_404 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_408 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gd_420 = StrToDouble(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_428 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gd_432 = StrToDouble(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_460 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_464 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_468 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_480 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_440 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 += gi_1460;
   g_str2int_444 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12++;
   g_str2int_448 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 += gi_1460;
   g_str2int_452 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12 += gi_1460;
   g_str2int_456 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12++;
   gi_484 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   gi_488 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   gi_492 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   gi_496 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_524 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_528 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_532 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_536 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_504 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_508 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_512 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 += gi_1460;
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12 += gi_1460;
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12 += gi_1460;
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12 += gi_1460;
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12++;
   g_str2int_560 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_572 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gd_576 = StrToDouble(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_584 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_604 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_608 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gd_620 = StrToDouble(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_588 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_592 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gd_596 = StrToDouble(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_648 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_652 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_664 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_668 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gi_672 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_676 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gi_628 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_632 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gi_636 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_640 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gi_644 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_680 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gi_684 = StrToInteger(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   g_str2int_696 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_timeframe_700 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_period_704 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_applied_price_708 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_timeframe_712 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_period_716 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_applied_price_768 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gi_772 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_timeframe_776 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_period_780 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_applied_price_736 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   li_12++;
   li_12++;
   li_12++;
   li_12++;
   gi_760 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_764 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2dbl_720 = StrToDouble(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2dbl_728 = StrToDouble(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2dbl_784 = StrToDouble(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2dbl_792 = StrToDouble(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_800 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   g_str2int_804 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   TrendFilterLevel = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12++;
   gd_828 = StrToDouble(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   gd_836 = StrToDouble(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12++;
   gd_844 = StrToDouble(gsa_1864[li_12][ai_0]) * gi_1236;
   li_12 += gi_1460;
   g_str2int_936 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12 += gi_1460;
   g_str2int_940 = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 = li_12 + gi_1464 - gi_1460;
   li_12 += gi_1460;
   if (TimeRiskFactor == -1) TimeRiskFactor = StrToInteger(gsa_1864[li_12][ai_0]);
   li_12 = li_12 + gi_1464 - gi_1460;
   g_str2int_1304 = StrToInteger(gsa_1864[157][ai_0]);
   g_str2int_1300 = StrToInteger(gsa_1864[158][ai_0]);
   g_str2int_1296 = StrToInteger(gsa_1864[159][ai_0]);
   if (TimeRiskFactor >= 0) {
      gi_880 = TRUE;
      if (TimeRiskFactor > 22) TimeRiskFactor = 22;
      if (TimeRiskFactor == 0) {
         gi_888 = 0;
         gi_892 = 0;
      }
      if (TimeRiskFactor == 1) {
         gi_888 = 1;
         gi_892 = 0;
      }
      if (TimeRiskFactor == 2) {
         gi_888 = 1;
         gi_892 = 1;
      }
      if (TimeRiskFactor == 3) {
         gi_888 = 2;
         gi_892 = 0;
      }
      if (TimeRiskFactor == 4) {
         gi_888 = 2;
         gi_892 = 1;
      }
      if (TimeRiskFactor == 5) {
         gi_888 = 2;
         gi_892 = 2;
      }
      if (TimeRiskFactor == 6) {
         gi_888 = 3;
         gi_892 = 0;
      }
      if (TimeRiskFactor == 7) {
         gi_888 = 3;
         gi_892 = 1;
      }
      if (TimeRiskFactor == 8) {
         gi_888 = 3;
         gi_892 = 3;
      }
      if (TimeRiskFactor == 9) {
         gi_888 = 4;
         gi_892 = 0;
      }
      if (TimeRiskFactor == 10) {
         gi_888 = 4;
         gi_892 = 1;
      }
      if (TimeRiskFactor == 11) {
         gi_888 = 4;
         gi_892 = 2;
      }
      if (TimeRiskFactor == 12) {
         gi_888 = 4;
         gi_892 = 3;
      }
      if (TimeRiskFactor == 13) {
         gi_888 = 4;
         gi_892 = 4;
      }
      if (TimeRiskFactor == 14) {
         gi_888 = 5;
         gi_892 = 5;
      }
      if (TimeRiskFactor == 15) {
         gi_888 = 6;
         gi_892 = 5;
      }
      if (TimeRiskFactor == 16) {
         gi_888 = 6;
         gi_892 = 6;
      }
      if (TimeRiskFactor == 17) {
         gi_888 = 7;
         gi_892 = 5;
      }
      if (TimeRiskFactor == 18) {
         gi_888 = 7;
         gi_892 = 6;
      }
      if (TimeRiskFactor == 19) {
         gi_888 = 8;
         gi_892 = 5;
      }
      if (TimeRiskFactor == 20) {
         gi_888 = 8;
         gi_892 = 6;
      }
      if (TimeRiskFactor == 21) {
         gi_888 = 9;
         gi_892 = 5;
      }
      if (TimeRiskFactor == 22) {
         gi_888 = 9;
         gi_892 = 6;
      }
   }
   int lia_16[9] = {0, 8, 10, 6, 8, 10, 4, 6, 8,
   10};
   int lia_20[9] = {0, 2, 2, 3, 3, 3, 4, 4, 4,
   4};
   g_period_540 = lia_16[FletFilterLevel];
   g_period_740 = lia_16[FletFilterLevel];
   g_ma_method_552 = 1;
   g_ma_method_752 = 1;
   gd_544 = lia_20[FletFilterLevel];
   gd_744 = lia_20[FletFilterLevel];
   g_applied_price_556 = 6;
   g_applied_price_756 = 6;
   if (!g_str2int_480) {
      g_str2int_444 = g_str2int_440;
      g_str2int_452 = g_str2int_440;
      g_str2int_456 = g_str2int_440;
   }
   li_ret_8 = ai_0;
   if (ai_4) FNC_046(8, "SetMode()", "Óñòàíîâëåíû íàñòðîéêè: " + gs_1916, "Load settings: " + gs_1916);
   return (li_ret_8);
}

int FNC_051() {
   int lia_0[500][10] = {0, 0, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 0, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 0, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 0, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 2, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 2, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 2, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 21, 24,
   0, 2, 0, 0, 0, 0, 0, 0, 21, 24,
   0, 2, 0, 0, 0, 0, 0, 0, 21, 24,
   0, 2, 0, 0, 0, 0, 0, 0, 21, 24,
   0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 6, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 6, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 6, 0, 0, 0, 0, 0, 0, 23, 24,
   0, 6, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 21, 24,
   0, 7, 0, 0, 0, 0, 0, 0, 21, 24,
   0, 7, 0, 0, 0, 0, 0, 0, 21, 24,
   0, 7, 0, 0, 0, 0, 0, 0, 21, 24,
   0, 7, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 19, 21, 24, 24,
   0, 0, 0, 0, 0, 0, 19, 21, 24, 24,
   0, 0, 0, 0, 0, 0, 19, 21, 24, 24,
   0, 0, 0, 0, 0, 0, 19, 21, 24, 24,
   0, 0, 0, 0, 0, 0, 19, 20, 24, 24,
   0, 0, 0, 0, 0, 0, 18, 21, 24, 24,
   0, 0, 0, 0, 0, 0, 18, 21, 24, 24,
   0, 0, 0, 0, 0, 0, 18, 21, 24, 24,
   0, 0, 0, 0, 0, 0, 18, 21, 24, 24,
   0, 0, 0, 0, 0, 0, 18, 20, 24, 24,
   0, 0, 0, 0, 6, 9, 18, 21, 24, 24,
   0, 0, 0, 0, 6, 9, 18, 21, 24, 24,
   0, 0, 0, 0, 6, 9, 18, 21, 24, 24,
   0, 0, 0, 0, 6, 9, 18, 21, 24, 24,
   0, 0, 0, 0, 6, 9, 18, 20, 24, 24,
   0, 0, 0, 0, 6, 12, 17, 21, 24, 24,
   0, 0, 0, 0, 6, 12, 17, 21, 24, 24,
   0, 0, 0, 0, 6, 12, 17, 21, 24, 24,
   0, 0, 0, 0, 6, 12, 17, 21, 24, 24,
   0, 0, 0, 0, 6, 12, 17, 20, 24, 24,
   0, 0, 0, 0, 6, 14, 17, 21, 24, 24,
   0, 0, 0, 0, 6, 14, 17, 21, 24, 24,
   0, 0, 0, 0, 6, 14, 17, 21, 24, 24,
   0, 0, 0, 0, 6, 14, 17, 21, 24, 24,
   0, 0, 0, 0, 6, 14, 17, 20, 24, 24};
   ArrayCopy(gia_1292, lia_0, 0, 0, WHOLE_ARRAY);
   return (0);
}

int FNC_053() {
   double l_global_var_12;
   bool li_ret_0 = FALSE;
   double ld_4 = MathRound(GetTickCount() / 100);
   if (IsOptimization() || IsTesting()) {
      if (GlobalVariableCheck("LastOptTime")) {
         l_global_var_12 = GlobalVariableGet("LastOptTime");
         GlobalVariableSet("LastOptTime", ld_4);
         if (l_global_var_12 > ld_4) ld_4 += 86400.0;
         if (ld_4 - l_global_var_12 > gd_1120) li_ret_0 = TRUE;
      } else {
         GlobalVariableSet("LastOptTime", ld_4);
         li_ret_0 = TRUE;
      }
      if (!GlobalVariableCheck("OptCounter")) GlobalVariableSet("OptCounter", 0.0);
   }
   return (li_ret_0);
}

int FNC_054() {
   bool li_ret_0 = FALSE;
   gi_2432 = MathAbs(StringFind(g_var_name_2004, CharToStr(84)));
   if (GlobalVariableGet(g_var_name_2004) == 1.0 * gi_1476 && g_hour_1468 < 16 && !gi_1712 && !gi_1768) gi_1768 = TRUE;
   return (li_ret_0);
}

int FNC_055() {
   if (Point == 0.00001 || Point == 0.001) gi_1236 = 10;
   else gi_1236 = 1;
   gi_256 *= gi_1236;
   gi_264 *= gi_1236;
   AverageTradeProfit *= gi_1236;
   gi_240 *= gi_1236;
   gi_348 *= gi_1236;
   gi_356 *= gi_1236;
   gd_396 *= gi_1236;
   gd_420 *= gi_1236;
   gd_432 *= gi_1236;
   gi_484 *= gi_1236;
   gi_488 *= gi_1236;
   gi_492 *= gi_1236;
   gi_496 *= gi_1236;
   gd_544 *= gi_1236;
   gd_576 *= gi_1236;
   gd_620 *= gi_1236;
   gd_596 *= gi_1236;
   gd_744 *= gi_1236;
   gi_344 *= gi_1236;
   MaxSpreadValue *= gi_1236;
   gd_828 *= gi_1236;
   gd_836 *= gi_1236;
   gd_844 *= gi_1236;
   gi_312 *= gi_1236;
   gi_324 *= gi_1236;
   gi_672 *= gi_1236;
   gi_628 *= gi_1236;
   gi_636 *= gi_1236;
   gi_644 *= gi_1236;
   gi_684 *= gi_1236;
   g_slippage_328 *= gi_1236;
   g_slippage_332 *= gi_1236;
   return (0);
}

int FNC_056() {
   if (MarketInfoMode) {
      TimeRiskFactor = -2;
      OpenHourAM = 0;
      CloseHourAM = 0;
      OpenHourPM = 24;
      CloseHourPM = 24;
      ShowTimes = FALSE;
      ShowInformation = TRUE;
      InformationStringNumber = 15;
      ShowStateInfo = TRUE;
      gi_1092 = FALSE;
      gi_1096 = FALSE;
      gi_1100 = TRUE;
      gi_1104 = TRUE;
      gi_1080 = TRUE;
      CrossOverMode = TRUE;
   }
   if (IsOptimization() || IsTesting()) {
      CrossOverMode = FALSE;
      CheckCrossOver = FALSE;
   }
   if (CrossOverMode) {
      CheckCrossOver = TRUE;
      gi_188 = TRUE;
      gi_192 = TRUE;
   }
   /*
   gi_2440 = AccountNumber() + StringLen(AccountCompany()) + StringLen(AccountName()) + StringLen(AccountServer());
   gs_1932 = StringSubstr(AccountCompany(), 0, StringFind(AccountCompany(), " ", 0));
   gs_2044 = AccountNumber();
   gs_2052 = AccountName();
   */
   gi_1312 = 18;
   gi_1316 = 306;
   gi_1324 = 0;
   gi_1320 = 1372;
   /*for (int li_4 = 0; li_4 < StringLen(gs_2044); li_4++) {
      gi_1312 += StrToInteger(StringSubstr(gs_2044, li_4, 1));
      gi_1316 += StringGetChar(gs_2044, li_4);
   }
   for (li_4 = 0; li_4 < StringLen(gs_2052); li_4++) gi_1320 += StringGetChar(gs_2052, li_4);
   */
   for (int li_4 = 0; li_4 < StringLen(AccountServer()); li_4++) gi_1324 += StringGetChar(AccountServer(), li_4);
   for (gi_1832 = StrToTime(Year() + ".10.31"); TimeDayOfWeek(gi_1832) != 0; gi_1832 -= 86400) {
   }
   gi_1844 = gi_1832 + 604800;
   for (gi_1836 = StrToTime(Year() + ".03.31"); TimeDayOfWeek(gi_1836) != 0; gi_1836 -= 86400) {
   }
   for (gi_1840 = StrToTime((Year() + 1) + ".03.31"); TimeDayOfWeek(gi_1840) != 0; gi_1840 -= 86400) {
   }
   gi_1848 = gi_1836 - 1814400;
   gd_1548 = NormalizeDouble(MarketInfo(Symbol(), MODE_LOTSTEP), 2);
   gd_1556 = NormalizeDouble(MarketInfo(Symbol(), MODE_MINLOT), 2);
   gd_104 = NormalizeDouble(MarketInfo(Symbol(), MODE_MAXLOT), 2);
   for (g_count_1308 = 0; g_count_1308 < 10; g_count_1308++)
      if (10 * g_count_1308 * gd_1548 >= 1.0) break;
   FNC_065();
   FNC_076();
   gi_1444 = PersonalMagicNumber;
   if (CrossOverMode) g_magic_1424 = PersonalMagicNumber + StringGetChar(gs_2160, 0) + StringGetChar(gs_2168, 0) + StringGetChar(gs_2160, 1) + StringGetChar(gs_2168, 1) + StringGetChar(gs_2160, 2) + StringGetChar(gs_2168, 2) + StringGetChar(gs_2160, 3) + StringGetChar(gs_2168, 3) + StringGetChar(gs_2160, 4) + StringGetChar(gs_2168, 4) + StringGetChar(gs_2160, 5) + StringGetChar(gs_2168, 5) + Period();
   else g_magic_1424 = PersonalMagicNumber + StringGetChar(gs_1924, 0) + StringGetChar(gs_1924, 1) + StringGetChar(gs_1924, 2) + StringGetChar(gs_1924, 3) + StringGetChar(gs_1924, 4) + StringGetChar(gs_1924, 5) + Period();
   gi_1268 = MathRound(MarketInfo(Symbol(), MODE_SPREAD));
   gi_1392 = MathRound(MarketInfo(Symbol(), MODE_FREEZELEVEL));
   g_stoplevel_1396 = MathRound(MarketInfo(Symbol(), MODE_STOPLEVEL));
   gs_1940 = gs_1932 + AccountNumber() + "_" + gs_1924 + g_magic_1424 + ".log";
   gs_1948 = "TestReport_" + gs_1932 + AccountNumber() + "_" + gs_1924 + g_magic_1424;
   gs_1956 = "TradeReport_" + gs_1932 + AccountNumber() + "_" + gs_1924 + g_magic_1424;
   gs_1964 = AccountNumber() + StringSubstr(WindowExpertName(), StringFind(WindowExpertName(), "_", 0), 6) + ".key";
   gs_2408 = "cr" + gs_1924 + Period() + "server" + gi_1324 + ".hst";
   gs_2416 = "os" + AccountNumber() + "_" + gs_1924 + g_magic_1424 + ".ost";
   gi_1464 = 3;
   gi_1460 = 1;
   if (gs_1924 == "EURCHF") gi_1460 = 2;
   if (gs_1924 == "AUDNZD") gi_1460 = 3;
   if (Lots != 0.0) {
      UseBalanceControl = FALSE;
      FNC_046(8, "FNC_056()", "Ðåæèì BalanceControl âûêëþ÷åí: Lots íå ðàâåí 0", "BalanceControl is disabled: Lots is not zero");
   }
   gs_1980 = gi_1312 + gi_1316 + gi_1320;
   int l_pos_8 = 0;
   int l_hist_total_16 = OrdersHistoryTotal();
   for (l_pos_8 = 0; l_pos_8 < l_hist_total_16; l_pos_8++) {
      if (OrderSelect(l_pos_8, SELECT_BY_POS, MODE_HISTORY)) {
         if (OrderCommission() != 0.0) {
            gd_1524 = MathAbs(OrderCommission() / OrderLots());
            FNC_046(8, "FNC_056()", "Îáíàðóæåíà êîìèññèÿ ñî ñäåëîê Commission=" + DoubleToStr(gd_1524, 2), "Commission detected Commission=" + DoubleToStr(gd_1524, 2));
            break;
         }
      }
   }
   return (1);
}

int FNC_057() {
   g_var_name_2004 = AccountNumber() + "StopDay" + gs_1924 + g_magic_1424;
   g_var_name_2012 = AccountNumber() + "MailReportLB";
   g_var_name_2020 = AccountNumber() + "MailReportLD";
   g_var_name_1988 = "MaxBalance";
   g_var_name_1996 = "LB";
   if (IsTesting() || IsOptimization()) {
      g_var_name_2004 = "Test" + g_var_name_2004;
      g_var_name_2012 = "Test" + g_var_name_2012;
      g_var_name_2020 = "Test" + g_var_name_2020;
      g_var_name_1988 = "Test" + g_var_name_1988;
      g_var_name_1996 = "Test" + g_var_name_1996;
   } else {
      g_var_name_1988 = AccountNumber() + g_var_name_1988;
      g_var_name_1996 = AccountNumber() + g_var_name_1996;
   }
   return (0);
}

int FNC_058(string as_0) {
   int l_file_32;
   bool li_ret_8 = FALSE;
   int l_index_12 = 0;
   string ls_16 = "";
   if (gi_1476 < 10) ls_16 = ls_16 + "0";
   ls_16 = ls_16 + gi_1476;
   if (g_month_1480 < 10) ls_16 = ls_16 + "0";
   ls_16 = ls_16 + g_month_1480 + g_year_1484;
   ls_16 = ls_16 + "_" + gs_1940;
   gi_1264 = StrToInteger(StringSubstr(ls_16, StringFind(ls_16, CharToStr(95), 11) - 1, 1)) - StrToInteger(gsa_1864[10][1]);
   string ls_24 = "CET: ";
   if (gi_1264 != 0) ls_24 = ls_24 + " ";
   if (gi_1476 < 10) ls_24 = ls_24 + "0";
   ls_24 = ls_24 + gi_1476 + ".";
   if (g_month_1480 < 10) ls_24 = ls_24 + "0";
   ls_24 = ls_24 + g_month_1480 + "." + g_year_1484 + " ";
   ls_24 = ls_24 + TimeToStr(gi_1820, TIME_SECONDS);
   ls_24 = ls_24 + " TT: ";
   if (Day() < 10) ls_24 = ls_24 + "0";
   ls_24 = ls_24 + Day() + ".";
   if (Month() < 10) ls_24 = ls_24 + "0";
   ls_24 = ls_24 + Month() + "." + Year() + " ";
   if (!gi_1104) return (li_ret_8);
   if (gsa_1872[0] != "" || as_0 == "deinit") {
      l_file_32 = FileOpen(ls_16, FILE_CSV|FILE_WRITE|FILE_READ, ';');
      if (l_file_32 < 1) {
         Print("Íåâîçìîæíî çàïèñàòü äàííûå â ôàéë " + ls_16 + ", îøèáêà: ", GetLastError());
         return (li_ret_8);
      }
      FileSeek(l_file_32, 0, SEEK_END);
      if (as_0 == "deinit") FileWrite(l_file_32, ls_24 + TimeToStr(TimeCurrent(), TIME_SECONDS) + " : ----------------------------deinit------------------------------");
      else {
         for (l_index_12 = 0; l_index_12 < 20; l_index_12++) {
            if (gsa_1872[l_index_12] == "") break;
            FileWrite(l_file_32, ls_24 + gsa_1872[l_index_12]);
            gsa_1872[l_index_12] = "";
         }
      }
      FileClose(l_file_32);
      li_ret_8 = TRUE;
   }
   return (li_ret_8);
}

double FNC_059(string as_0) {
   int l_count_16;
   string l_symbol_36;
   string ls_44;
   string ls_52;
   string ls_unused_60;
   string l_symbol_68;
   string ls_76;
   string ls_84;
   string ls_92;
   double ld_ret_8 = 0.0;
   string ls_20 = StringSubstr(gs_1924, 0, 3);
   string ls_28 = StringSubstr(gs_1924, 3, 0);
   double ld_100 = 1.0;
   double ld_108 = 1.0;
   double ld_unused_116 = 1.0;
   if (as_0 != "LotDepo") {
      l_count_16 = 0;
      ld_100 = 0.0;
      while (l_count_16 < 20) {
         if (ls_28 != "USD") {
            ls_44 = "USD" + ls_28;
            ls_52 = ls_28 + "USD";
            l_symbol_36 = gs_2028 + ls_44 + gs_2036;
            ls_92 = ls_44;
            ld_100 = MarketInfo(l_symbol_36, MODE_BID);
            if (ld_100 > 0.0) ld_100 = 1 / ld_100;
            else {
               l_symbol_36 = gs_2028 + ls_52 + gs_2036;
               ls_92 = ls_52;
               ld_100 = MarketInfo(l_symbol_36, MODE_BID);
            }
         } else {
            l_symbol_36 = gs_2028 + ls_20 + "USD" + gs_2036;
            ls_92 = ls_20 + "USD";
            ld_100 = MarketInfo(l_symbol_36, MODE_BID);
         }
         if (ld_100 > 0.0) break;
         l_count_16++;
         Sleep(1000);
      }
      ld_100 = FNC_060(ls_44, ls_52, ls_92, ld_100);
      if (ld_100 <= 0.0) FNC_046(8, "FNC_059()", "Íåâîçìîæíî èíèöèàëèçèðîâàòü ïàðó: " + ls_44 + "/" + ls_52, "Unable to init pair: " + ls_44 + "/" + ls_52);
      if (AccountCurrency() != "USD") {
         l_count_16 = 0;
         ld_108 = 0.0;
         while (l_count_16 < 20) {
            ls_76 = "USD" + AccountCurrency();
            ls_84 = AccountCurrency() + "USD";
            l_symbol_68 = gs_2028 + ls_76 + gs_2036;
            ls_92 = ls_76;
            ld_108 = MarketInfo(l_symbol_68, MODE_BID);
            if (ld_108 <= 0.0) {
               l_symbol_68 = gs_2028 + ls_84 + gs_2036;
               ls_92 = ls_84;
               ld_108 = MarketInfo(l_symbol_68, MODE_BID);
               if (ld_108 > 0.0) ld_108 = 1 / ld_108;
            }
            if (ld_108 > 0.0) break;
            l_count_16++;
            Sleep(1000);
         }
         ld_108 = FNC_060(ls_76, ls_84, ls_92, ld_108);
         if (ld_108 <= 0.0) FNC_046(8, "FNC_059()", "Íåâîçìîæíî èíèöèàëèçèðîâàòü ïàðó: " + ls_76 + "/" + ls_84, "Unable to init pair: " + ls_76 + "/" + ls_84);
      }
   } else {
      if (ls_20 != "USD") {
         l_count_16 = 0;
         ld_100 = 0.0;
         while (l_count_16 < 20) {
            ls_44 = "USD" + ls_20;
            ls_52 = ls_20 + "USD";
            l_symbol_36 = gs_2028 + ls_44 + gs_2036;
            ls_92 = ls_44;
            ld_100 = MarketInfo(l_symbol_36, MODE_BID);
            if (ld_100 > 0.0) ld_100 = 1 / ld_100;
            else {
               l_symbol_36 = gs_2028 + ls_52 + gs_2036;
               ls_92 = ls_52;
               ld_100 = MarketInfo(l_symbol_36, MODE_BID);
            }
            if (ld_100 > 0.0) break;
            l_count_16++;
            Sleep(1000);
         }
         ld_100 = FNC_060(ls_44, ls_52, ls_92, ld_100);
         if (ld_100 <= 0.0) FNC_046(8, "FNC_059()", "Íåâîçìîæíî èíèöèàëèçèðîâàòü ïàðó: " + ls_44 + "/" + ls_52, "Unable to init pair: " + ls_44 + "/" + ls_52);
      }
      if (AccountCurrency() != "USD") {
         l_count_16 = 0;
         ld_108 = 0.0;
         while (l_count_16 < 20) {
            ls_76 = "USD" + AccountCurrency();
            ls_84 = AccountCurrency() + "USD";
            l_symbol_68 = gs_2028 + ls_76 + gs_2036;
            ls_92 = ls_76;
            ld_108 = MarketInfo(l_symbol_68, MODE_BID);
            if (ld_108 <= 0.0) {
               l_symbol_68 = gs_2028 + ls_84 + gs_2036;
               ls_92 = ls_84;
               ld_108 = MarketInfo(l_symbol_68, MODE_BID);
               if (ld_108 > 0.0) ld_108 = 1 / ld_108;
            }
            if (ld_108 > 0.0) break;
            l_count_16++;
            Sleep(1000);
         }
         ld_108 = FNC_060(ls_76, ls_84, ls_92, ld_108);
         if (ld_108 <= 0.0) FNC_046(8, "FNC_059()", "Íåâîçìîæíî èíèöèàëèçèðîâàòü ïàðó: " + ls_76 + "/" + ls_84, "Unable to init pair: " + ls_76 + "/" + ls_84);
      }
   }
   if (as_0 == "Symbol") ld_ret_8 = MarketInfo(Symbol(), MODE_LOTSIZE) * g_point_2084 * ld_100 * ld_108;
   if (as_0 == "LotDepo") ld_ret_8 = 1.0;
   if (as_0 == "DepoUSD") ld_ret_8 = ld_108;
   if (ld_ret_8 <= 0.0) {
      FNC_046(8, "FNC_059()", "Íåâîçìîæíî îïðåäåëèòü öåíó ïóíêòà ïî äàííîé âàëþòíîé ïàðå", "Unable to calculate the point price");
      FNC_046(9, "FNC_059()", "Îøèáêà: PriceUSD=" + ld_100 + " PriceDepo=" + ld_108 + " (Mode=" + as_0 + " result=" + ld_ret_8 + ")", "Error: PriceUSD=" + ld_100 + " PriceDepo=" +
         ld_108 + " (Mode=" + as_0 + " result=" + ld_ret_8 + ")");
      gi_1736 = TRUE;
   }
   return (ld_ret_8);
}

double FNC_060(string as_0, string as_8, string as_16, double ad_24) {
   double ld_ret_32 = ad_24;
   if (!IsOptimization() && !IsTesting()) {
      if (ad_24 > 0.0) GlobalVariableSet("z" + as_16, ad_24);
   } else {
      if (ad_24 <= 0.0) {
         if (GlobalVariableGet("z" + as_0) > 0.0) ld_ret_32 = GlobalVariableGet("z" + as_0);
         if (GlobalVariableGet("z" + as_8) > 0.0) ld_ret_32 = GlobalVariableGet("z" + as_8);
      }
   }
   return (ld_ret_32);
}

int FNC_061(int ai_0) {
   bool li_ret_4 = FALSE;
   gi_1728 = FALSE;
   if (!gi_1712 && ai_0 == g_str2int_936 || ai_0 == g_str2int_940) {
      gi_1728 = TRUE;
      if (gi_1456 != DDSettingsNumber && DDSettingsNumber != 0) {
         gi_1456 = DDSettingsNumber;
         FNC_050(DDSettingsNumber, 1);
         FNC_045();
      }
   } else {
      if (gi_1456 != SettingsNumber) {
         gi_1456 = SettingsNumber;
         FNC_050(SettingsNumber, 1);
         FNC_045();
      }
   }
   if (UseBalanceControl) {
      if (gi_1788) {
         if (gi_1452 != gi_892) {
            gi_1452 = gi_892;
            FNC_031(gi_892);
            FNC_044();
            gi_1360--;
            FNC_046(8, "FNC_061()", "Óñòàíîâëåíî òîðãîâîå âðåìÿ ñ ìèí. ðèñêàìè", "Low risk trade time");
         }
      } else {
         if (gi_1452 != gi_888) {
            gi_1452 = gi_888;
            FNC_031(gi_888);
            FNC_044();
            gi_1360--;
            FNC_046(8, "FNC_061()", "Óñòàíîâëåíî òîðãîâîå âðåìÿ ñ ìàêñ. ðèñêàìè", "High risk trade time");
         }
      }
   }
   return (li_ret_4);
}

int FNC_062() {
   bool li_ret_0 = FALSE;
   if (gi_1312 != g_str2int_1296) li_ret_0 = TRUE;
   if (gi_1316 != g_str2int_1300) li_ret_0 = TRUE;
   if (gi_1320 != g_str2int_1304) li_ret_0 = TRUE;
   return (li_ret_0);
}

int FNC_063(int ai_0) {
   int li_ret_4 = 0;
   double ld_8 = MarketInfo(Symbol(), MODE_MARGINREQUIRED);
   if (CrossOverMode) ld_8 = FNC_035(gs_2160) * MarketInfo(g_symbol_2144, MODE_MARGINREQUIRED) + FNC_035(gs_2168) * MarketInfo(g_symbol_2152, MODE_MARGINREQUIRED);
   li_ret_4 = AccountStopoutLevel() * ld_8 / 100.0 + ai_0 * FNC_059("Symbol");
   if (li_ret_4 < ld_8) li_ret_4 = ld_8;
   if (li_ret_4 > 0) li_ret_4 = MathFloor(MarketInfo(Symbol(), MODE_LOTSIZE) * FNC_059("LotDepo") / li_ret_4);
   return (li_ret_4);
}

int FNC_064() {
   int li_4;
   FNC_050(SettingsNumber, 0);
   int li_ret_0 = FNC_063(gi_256);
   if (UseBalanceControl && DDSettingsNumber != SettingsNumber) {
      FNC_050(DDSettingsNumber, 0);
      li_4 = FNC_063(gi_256);
      if (li_ret_0 > li_4) li_ret_0 = li_4;
   }
   if (li_ret_0 == 0) {
      FNC_046(8, "FNC_064()", "Íåâîçìîæíî ïîñ÷èòàòü ìàêñèìàëüíî-âîçìîæíîå çíà÷åíèå ëîòà MaxLotsPercent", "Unable to calculate the MaxLotsPercent");
      return (li_ret_0);
   }
   gd_1564 = li_ret_0;
   if (MaxLotsPercent == 0) {
      MaxLotsPercent = li_ret_0;
      FNC_046(8, "FNC_064()", "Óñòàíîâëåíî çíà÷åíèå ïåðåìåííîé MaxLotsPercent=" + MaxLotsPercent, "New value of MaxLotsPercent=" + MaxLotsPercent);
      if (LotsPercent > li_ret_0) {
         LotsPercent = li_ret_0;
         FNC_046(8, "FNC_064()", "Èçìåíåíî çíà÷åíèå ïåðåìåííîé LotsPercent=" + LotsPercent, "Changed value of LotsPercent=" + LotsPercent);
      }
   } else {
      FNC_046(8, "FNC_064()", "Ìàêñèìàëüíûé ëîò äëÿ ïðàâèëüíîé ðàáîòû ñîâåòíèêà â äàííîì ðåæèìå äîëæåí áûòü íå áîëåå " + li_ret_0 + " % îò äåïîçèòà", "Maximal lot value to work in this mode must be not more then " +
         li_ret_0 + " % from depo");
   }
   LotsPercent = 100000 * LotsPercent / MarketInfo(Symbol(), MODE_LOTSIZE);
   MaxLotsPercent = 100000 * MaxLotsPercent / MarketInfo(Symbol(), MODE_LOTSIZE);
   gd_1564 = 100000.0 * gd_1564 / MarketInfo(Symbol(), MODE_LOTSIZE);
   if (gd_1564 <= 0.0) gd_1564 = MaxLotsPercent;
   return (li_ret_0);
}

int FNC_065() {
   int li_4;
   bool li_ret_0 = FALSE;
   string lsa_16[28] = {"EUR", "USD", "CHF", "GBP", "CAD", "JPY", "AUD", "NZD", "NOK", "RUB", "RUR", "SEK", "SGD", "DKK", "ZAR", "UAH", "MXN", "HKD", "TRY", "PLN", "HUF", "PHP", "MTL", "HRK", "LVL", "CZK", "ILS", "LTL"};
   for (int li_12 = 0; li_12 < StringLen(Symbol()) - 3; li_12++) {
      for (int l_index_8 = 0; l_index_8 < 28; l_index_8++) {
         li_4 = StringFind(Symbol(), lsa_16[l_index_8], li_12);
         if (li_4 == li_12) {
            gs_1924 = StringSubstr(Symbol(), li_4, 6);
            if (StringFind(Symbol(), gs_1924, 0) != 0) gs_2028 = StringSubstr(Symbol(), 0, StringFind(Symbol(), gs_1924, 0));
            if (StringLen(Symbol()) == StringLen(gs_2028) + StringLen(gs_1924)) break;
            gs_2036 = StringSubstr(Symbol(), StringLen(gs_2028) + StringLen(gs_1924), 0);
            break;
         }
      }
      if (gs_1924 != "") break;
   }
   if (gs_1924 == "") {
      FNC_046(8, "GetSymbol()", "Òîðãîâëÿ çàáëîêèðîâàíà: íåèçâåñòíàÿ âàëþòíàÿ ïàðà " + Symbol(), "Trade is disabled: Unknown symbol " + Symbol());
      gi_1736 = TRUE;
      return (li_ret_0);
   }
   li_ret_0 = TRUE;
   if (gs_2028 != "" || gs_2036 != "") FNC_046(8, "GetSymbol()", "Îáíàðóæåíû äîáàâî÷íûå ñèìâîëû ê íàçâàíèþ âàëþòíîé ïàðû " + Symbol(), "Found additive to the Symbol name " + Symbol());
   return (li_ret_0);
}

int FNC_066(int ai_0) {
   double l_str2int_20 = 0.0;
   int li_28 = 0;
   ArrayCopy(gsa_1860, gsa_1864, 0, 0, WHOLE_ARRAY);
   for (int li_12 = 0; li_12 < StringLen(gs_1980); li_12++) li_28 += StrToInteger(StringSubstr(gs_1980, li_12, 1));
   for (int l_count_8 = 0; l_count_8 <= ai_0; l_count_8++) for (int l_index_4 = 0; l_index_4 < 160; l_index_4++) gsa_1860[l_index_4][l_count_8] = StrToInteger(gsa_1860[l_index_4][l_count_8]) - l_index_4 - l_count_8;
   for (li_12 = 0; li_12 < StringLen(gs_1980); li_12++) {
      l_str2int_20 = StrToInteger(StringSubstr(gs_1980, li_12, 1));
      if (l_str2int_20 != 0.0) {
         if (l_str2int_20 / 2.0 != MathFloor(l_str2int_20 / 2.0)) {
            if (l_str2int_20 < 4.0) {
               for (int l_count_16 = 0; l_count_16 < li_28; l_count_16++) {
                  ArrayCopy(gsa_1864, gsa_1860, 0, 0, WHOLE_ARRAY);
                  for (l_index_4 = 158; l_index_4 >= 0; l_index_4--) for (l_count_8 = 0; l_count_8 <= ai_0; l_count_8++) gsa_1860[l_index_4 + 1][l_count_8] = gsa_1860[l_index_4][l_count_8];
                  for (l_count_8 = 0; l_count_8 <= ai_0; l_count_8++) gsa_1860[0][l_count_8] = gsa_1864[159][l_count_8];
               }
            } else {
               for (l_count_16 = 0; l_count_16 < li_28; l_count_16++) {
                  ArrayCopy(gsa_1864, gsa_1860, 0, 0, WHOLE_ARRAY);
                  for (l_index_4 = 1; l_index_4 < 160; l_index_4++) for (l_count_8 = 0; l_count_8 <= ai_0; l_count_8++) gsa_1860[l_index_4 - 1][l_count_8] = gsa_1860[l_index_4][l_count_8];
                  for (l_count_8 = 0; l_count_8 <= ai_0; l_count_8++) gsa_1860[159][l_count_8] = gsa_1864[0][l_count_8];
               }
            }
         } else {
            if (l_str2int_20 > 5.0) {
               for (l_count_16 = 0; l_count_16 < li_28; l_count_16++) {
                  ArrayCopy(gsa_1864, gsa_1860, 0, 0, WHOLE_ARRAY);
                  for (l_count_8 = ai_0 - 1; l_count_8 >= 0; l_count_8--) for (l_index_4 = 0; l_index_4 < 160; l_index_4++) gsa_1860[l_index_4][l_count_8 + 1] = gsa_1860[l_index_4][l_count_8];
                  for (l_index_4 = 0; l_index_4 <= 160; l_index_4++) gsa_1860[l_index_4][0] = gsa_1864[l_index_4][ai_0];
               }
            } else {
               for (l_count_16 = 0; l_count_16 < li_28; l_count_16++) {
                  ArrayCopy(gsa_1864, gsa_1860, 0, 0, WHOLE_ARRAY);
                  for (l_count_8 = 1; l_count_8 <= ai_0; l_count_8++) for (l_index_4 = 0; l_index_4 < 160; l_index_4++) gsa_1860[l_index_4][l_count_8 - 1] = gsa_1860[l_index_4][l_count_8];
                  for (l_index_4 = 0; l_index_4 <= 160; l_index_4++) gsa_1860[l_index_4][ai_0] = gsa_1864[l_index_4][0];
               }
            }
         }
      }
   }
   ArrayCopy(gsa_1864, gsa_1860, 0, 0, WHOLE_ARRAY);
   if (StrToInteger(gsa_1864[0][0]) > 0) ai_0 = 0;
   return (ai_0);
}

int FNC_067(int ai_0, int ai_4, int ai_8) {
   bool li_ret_12 = FALSE;
   if (gia_2336[ai_0][0] == 0) {
      if (FNC_073(ai_0)) {
         FNC_068(ai_0);
         gia_2336[ai_0][0] = 96;
         gi_1272 = gia_2336[ai_0][1];
      } else {
         FNC_030("OSbuffer", ai_0);
         if (FNC_005(0) || (!gi_252 && ai_0 > 1) && ai_8) {
            FNC_046(9, "FNC_067()", gs_2424, gs_2424);
            gia_2336[ai_0][0] = 95;
            gia_2336[ai_0][1] = 0;
            gda_2332[ai_0][6] = gd_2068;
            gia_2324[ai_0][4] = TimeCurrent();
         } else {
            if (FNC_005(1) || (!gi_252 && ai_0 > 1) && ai_4) {
               FNC_046(9, "FNC_067()", gs_2424, gs_2424);
               gia_2336[ai_0][0] = 95;
               gia_2336[ai_0][1] = 1;
               gda_2332[ai_0][6] = gd_2076;
               gia_2324[ai_0][4] = TimeCurrent();
            }
         }
      }
   }
   if (gia_2336[ai_0][0] == 95) {
      if (FNC_073(ai_0)) {
         FNC_068(ai_0);
         gia_2336[ai_0][0] = 96;
      } else {
         if (FNC_011(ai_0, gia_2336[ai_0][1], gi_256, gi_264)) {
            gi_1272 = gia_2336[ai_0][1];
            gia_2336[ai_0][0] = 96;
            FNC_013(ai_0, 95);
         }
      }
   }
   if (gia_2336[ai_0][0] == 96) {
      if (!FNC_073(ai_0)) gia_2336[ai_0][0] = 94;
      else {
         FNC_068(ai_0);
         FNC_037(0);
         if (gia_2336[ai_0][1] == 0) {
            if (FNC_008(ai_0)) {
               gda_2332[ai_0][5] = gd_2076;
               gia_2324[ai_0][5] = TimeCurrent();
               gia_2336[ai_0][0] = 98;
            }
         }
         if (gia_2336[ai_0][1] == 1) {
            if (FNC_008(ai_0)) {
               gda_2332[ai_0][5] = gd_2068;
               gia_2324[ai_0][5] = TimeCurrent();
               gia_2336[ai_0][0] = 98;
            }
         }
      }
   }
   if (gia_2336[ai_0][0] == 98 || gia_2336[ai_0][0] == 94) {
      if (FNC_073(ai_0)) {
         FNC_068(ai_0);
         gia_2336[ai_0][0] = 98;
         if (!FNC_010(ai_0, gia_2336[ai_0][1])) gia_2336[ai_0][0] = 94;
      } else {
         if (FNC_029(ai_0) > 0) {
            gia_2336[ai_0][0] = 0;
            gi_1272 = FALSE;
         }
      }
   }
   return (li_ret_12);
}

int FNC_068(int ai_0) {
   int l_bool_12;
   int li_16;
   string l_ticket_24;
   string ls_unused_32;
   string ls_unused_40;
   string l_ticket_48;
   string ls_unused_56;
   string ls_unused_64;
   double l_ord_open_price_72;
   double l_ord_profit_80;
   double l_ord_open_price_88;
   double l_ord_profit_96;
   double l_ord_lots_104;
   double l_ord_lots_112;
   int l_cmd_120;
   int l_cmd_128;
   int l_datetime_136;
   int l_datetime_140;
   bool li_144;
   bool li_148;
   bool li_ret_4 = FALSE;
   if (!CrossOverMode) {
      li_16 = OrdersTotal() - 1;
      for (int l_pos_8 = li_16; l_pos_8 >= 0; l_pos_8--) {
         l_bool_12 = OrderSelect(l_pos_8, SELECT_BY_POS, MODE_TRADES);
         if (l_bool_12 > FALSE && OrderMagicNumber() == g_magic_1424) {
            if (OrderSymbol() == Symbol() && StringFind(OrderComment(), gsa_2328[ai_0][4]) >= 0) {
               gda_2332[ai_0][0] = OrderClosePrice();
               gda_2332[ai_0][1] = OrderOpenPrice();
               gda_2332[ai_0][2] = OrderStopLoss();
               gda_2332[ai_0][3] = OrderTakeProfit();
               gda_2332[ai_0][4] = OrderProfit();
               gia_2324[ai_0][0] = OrderCloseTime();
               gia_2324[ai_0][1] = OrderOpenTime();
               gia_2336[ai_0][1] = OrderType();
               gia_2336[ai_0][2] = OrderMagicNumber();
               gsa_2328[ai_0][0] = OrderTicket();
               gsa_2328[ai_0][1] = OrderSymbol();
               gsa_2328[ai_0][2] = gs_1924;
               gda_2332[ai_0][7] = OrderLots();
               if (gda_2332[ai_0][0] > 0.0) {
                  if (gia_2336[ai_0][1] == 1) gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][1] - gd_2068) / g_point_2084);
                  if (gia_2336[ai_0][1] == 0) gia_2336[ai_0][10] = MathRound((gd_2076 - gda_2332[ai_0][1]) / g_point_2084);
               } else {
                  if (gia_2336[ai_0][1] == 1) gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][0]) / g_point_2084);
                  if (gia_2336[ai_0][1] == 0) gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][0] - gda_2332[ai_0][1]) / g_point_2084);
                  gia_2336[ai_0][3] = TimeCurrent() - gia_2324[ai_0][1];
               }
               li_ret_4 = TRUE;
            }
         }
      }
   } else {
      li_144 = FALSE;
      li_148 = FALSE;
      li_16 = OrdersTotal() - 1;
      for (l_pos_8 = li_16; l_pos_8 >= 0; l_pos_8--) {
         l_bool_12 = OrderSelect(l_pos_8, SELECT_BY_POS, MODE_TRADES);
         if (l_bool_12 > FALSE && OrderMagicNumber() == g_magic_1424 && OrderSymbol() == g_symbol_2144 && StringFind(OrderComment(), gsa_2328[ai_0][4]) >= 0) {
            l_ticket_24 = OrderTicket();
            ls_unused_32 = g_symbol_2144;
            ls_unused_40 = gs_2160;
            l_ord_open_price_72 = OrderOpenPrice();
            l_ord_lots_112 = OrderLots();
            l_ord_profit_80 = OrderProfit();
            l_cmd_120 = OrderType();
            l_datetime_136 = OrderOpenTime();
            li_144 = TRUE;
         }
      }
      for (l_pos_8 = li_16; l_pos_8 >= 0; l_pos_8--) {
         l_bool_12 = OrderSelect(l_pos_8, SELECT_BY_POS, MODE_TRADES);
         if (l_bool_12 > FALSE && OrderMagicNumber() == g_magic_1424 && OrderSymbol() == g_symbol_2152 && StringFind(OrderComment(), gsa_2328[ai_0][4]) >= 0) {
            l_ticket_48 = OrderTicket();
            ls_unused_56 = g_symbol_2152;
            ls_unused_64 = gs_2168;
            l_ord_open_price_88 = OrderOpenPrice();
            l_ord_lots_104 = OrderLots();
            l_ord_profit_96 = OrderProfit();
            l_cmd_128 = OrderType();
            l_datetime_140 = OrderOpenTime();
            li_148 = TRUE;
         }
      }
      if (li_144 && li_148) {
         gda_2332[ai_0][1] = FNC_069(l_ord_open_price_72, l_ord_open_price_88);
         gda_2332[ai_0][2] = 0.0;
         gda_2332[ai_0][3] = 0.0;
         gda_2332[ai_0][4] = l_ord_profit_80 + l_ord_profit_96;
         gia_2324[ai_0][0] = 0;
         if (l_datetime_136 > l_datetime_140) gia_2324[ai_0][1] = l_datetime_136;
         else gia_2324[ai_0][1] = l_datetime_140;
         gia_2336[ai_0][1] = FNC_070(l_cmd_120, l_cmd_128);
         gia_2336[ai_0][2] = OrderMagicNumber();
         gsa_2328[ai_0][0] = l_ticket_24 + "/" + l_ticket_48;
         gsa_2328[ai_0][1] = g_symbol_2144 + "/" + g_symbol_2152;
         gsa_2328[ai_0][2] = gs_2160 + "/" + gs_2168;
         gda_2332[ai_0][7] = l_ord_lots_112;
         gia_2336[ai_0][3] = TimeCurrent() - gia_2324[ai_0][1];
         if (gia_2336[ai_0][1] == 1) {
            gia_2336[ai_0][10] = MathRound((gda_2332[ai_0][1] - gd_2068) / g_point_2084);
            gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][1] - gda_2332[ai_0][6]) / g_point_2084);
         }
         if (gia_2336[ai_0][1] == 0) {
            gia_2336[ai_0][10] = MathRound((gd_2076 - gda_2332[ai_0][1]) / g_point_2084);
            gia_2336[ai_0][4] = MathRound((gda_2332[ai_0][6] - gda_2332[ai_0][1]) / g_point_2084);
         }
         li_ret_4 = TRUE;
      }
   }
   return (li_ret_4);
}

double FNC_069(double ad_0, double ad_8) {
   double ld_ret_16 = 0.0;
   if (gi_2176 == 1 && gi_2180 == -1) ld_ret_16 = ad_0 * ad_8;
   if (gi_2176 == 1 && gi_2180 == 1) ld_ret_16 = ad_0 / ad_8;
   if (gi_2176 == -1 && gi_2180 == -1) ld_ret_16 = ad_8 / ad_0;
   return (ld_ret_16);
}

int FNC_070(int ai_0, int ai_4) {
   int li_ret_8 = -1;
   if (gi_2176 == 1 && gi_2180 == -1) {
      if (ai_0 == 0 && ai_4 == 0) li_ret_8 = 0;
      if (ai_0 == 1 && ai_4 == 1) li_ret_8 = 1;
   }
   if (gi_2176 == 1 && gi_2180 == 1) {
      if (ai_0 == 0 && ai_4 == 1) li_ret_8 = 0;
      if (ai_0 == 1 && ai_4 == 0) li_ret_8 = 1;
   }
   if (gi_2176 == -1 && gi_2180 == -1) {
      if (ai_0 == 1 && ai_4 == 0) li_ret_8 = 0;
      if (ai_0 == 0 && ai_4 == 1) li_ret_8 = 1;
   }
   return (li_ret_8);
}

int FNC_071(string a_symbol_0, int ai_8) {
   int li_ret_12 = -1;
   if (gi_2176 == 1 && gi_2180 == -1) {
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2144) li_ret_12 = 0;
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2152) li_ret_12 = 0;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2144) li_ret_12 = 1;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2152) li_ret_12 = 1;
   }
   if (gi_2176 == 1 && gi_2180 == 1) {
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2144) li_ret_12 = 0;
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2152) li_ret_12 = 1;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2144) li_ret_12 = 1;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2152) li_ret_12 = 0;
   }
   if (gi_2176 == -1 && gi_2180 == -1) {
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2144) li_ret_12 = 1;
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2152) li_ret_12 = 0;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2144) li_ret_12 = 0;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2152) li_ret_12 = 1;
   }
   return (li_ret_12);
}

double FNC_072(string a_symbol_0, int ai_8) {
   double l_price_12 = 0.0;
   if (gi_2176 == 1 && gi_2180 == -1) {
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2144) l_price_12 = g_ask_2236;
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2152) l_price_12 = g_ask_2252;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2144) l_price_12 = g_bid_2228;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2152) l_price_12 = g_bid_2244;
   }
   if (gi_2176 == 1 && gi_2180 == 1) {
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2144) l_price_12 = g_ask_2236;
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2152) l_price_12 = g_bid_2244;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2144) l_price_12 = g_bid_2228;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2152) l_price_12 = g_ask_2252;
   }
   if (gi_2176 == -1 && gi_2180 == -1) {
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2144) l_price_12 = g_bid_2228;
      if (ai_8 == 0 && a_symbol_0 == g_symbol_2152) l_price_12 = g_ask_2252;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2144) l_price_12 = g_ask_2236;
      if (ai_8 == 1 && a_symbol_0 == g_symbol_2152) l_price_12 = g_bid_2244;
   }
   if (a_symbol_0 == g_symbol_2144) l_price_12 = NormalizeDouble(l_price_12, g_digits_2112);
   if (a_symbol_0 == g_symbol_2152) l_price_12 = NormalizeDouble(l_price_12, g_digits_2120);
   return (l_price_12);
}

bool FNC_073(int ai_0) {
   int l_bool_12;
   int li_16;
   bool li_24;
   bool li_28;
   int l_ticket_32;
   int l_ticket_36;
   double l_price_40;
   bool li_ret_4 = FALSE;
   if (!CrossOverMode) {
      li_16 = OrdersTotal() - 1;
      for (int l_pos_8 = li_16; l_pos_8 >= 0; l_pos_8--) {
         l_bool_12 = OrderSelect(l_pos_8, SELECT_BY_POS, MODE_TRADES);
         if (l_bool_12 > FALSE && OrderMagicNumber() == g_magic_1424 && OrderSymbol() == Symbol() && StringFind(OrderComment(), gsa_2328[ai_0][4]) >= 0) {
            FNC_081(ai_0, OrderType());
            li_ret_4 = TRUE;
            break;
         }
      }
   } else {
      li_24 = FALSE;
      li_28 = FALSE;
      l_ticket_32 = 0;
      l_ticket_36 = 0;
      li_16 = OrdersTotal() - 1;
      for (l_pos_8 = li_16; l_pos_8 >= 0; l_pos_8--) {
         if (OrderSelect(l_pos_8, SELECT_BY_POS, MODE_TRADES)) {
            if (OrderMagicNumber() == g_magic_1424 && OrderSymbol() == g_symbol_2152 && StringFind(OrderComment(), gsa_2328[ai_0][4]) >= 0) {
               l_ticket_36 = OrderTicket();
               li_28 = TRUE;
               break;
            }
         }
      }
      for (l_pos_8 = li_16; l_pos_8 >= 0; l_pos_8--) {
         if (OrderSelect(l_pos_8, SELECT_BY_POS, MODE_TRADES)) {
            if (OrderMagicNumber() == g_magic_1424 && OrderSymbol() == g_symbol_2144 && StringFind(OrderComment(), gsa_2328[ai_0][4]) >= 0) {
               l_ticket_32 = OrderTicket();
               li_24 = TRUE;
               break;
            }
         }
      }
      if (li_24 && li_28) li_ret_4 = TRUE;
      else {
         if (li_24 || li_28) {
            if (li_24) {
               OrderSelect(l_ticket_32, SELECT_BY_TICKET);
               if (OrderType() == OP_SELL) l_price_40 = g_ask_2236;
               else l_price_40 = g_bid_2228;
            }
            if (li_28) {
               OrderSelect(l_ticket_36, SELECT_BY_TICKET);
               if (OrderType() == OP_SELL) l_price_40 = g_ask_2252;
               else l_price_40 = g_bid_2244;
            }
            if (IsTradeAllowed()) {
               if (OrderClose(OrderTicket(), OrderLots(), l_price_40, g_slippage_332 / gi_1236 * gi_2184, Black)) {
                  if (gi_1192) {
                     gi_1768 = TRUE;
                     GlobalVariableSet(g_var_name_2004, gi_1476);
                     FNC_046(8, "FNC_073()", "Òîðãîâëÿ çàáëîêèðîâàíà: Çàêðûò ïîòåðÿííûé îðäåð", "Trade is disabled: Closed lost order");
                  } else FNC_046(8, "FNC_073()", "Çàêðûò ïîòåðÿííûé îðäåð", "Closed lost order");
               } else FNC_046(8, "FNC_073()", "Íå óäàëîñü çàêðûòü ïîòåðÿííûé îðäåð", "Can not close lost order");
            }
         }
      }
      FNC_085(ai_0, li_ret_4);
   }
   return (li_ret_4);
}

int FNC_074() {
   double ld_4;
   double ld_12;
   bool li_ret_0 = FALSE;
   RefreshRates();
   g_stoplevel_2128 = MarketInfo(Symbol(), MODE_STOPLEVEL);
   gd_2136 = MarketInfo(Symbol(), MODE_FREEZELEVEL);
   g_point_2084 = MarketInfo(Symbol(), MODE_POINT);
   g_digits_2092 = MarketInfo(Symbol(), MODE_DIGITS);
   if (gd_1648 > 0.0 && gd_1524 != 0.0) gd_1640 = gd_1524 / gd_1648;
   if (CheckCrossOver) {
      ld_4 = FNC_075(gs_2160);
      ld_12 = FNC_075(gs_2168);
      if (ld_4 > 0.0 && ld_12 > 0.0) {
         gd_2196 = MarketInfo(g_symbol_2144, MODE_SPREAD);
         gd_2204 = MarketInfo(g_symbol_2152, MODE_SPREAD);
         gd_2212 = gd_2196 * MarketInfo(g_symbol_2144, MODE_POINT);
         gd_2220 = gd_2204 * MarketInfo(g_symbol_2152, MODE_POINT);
         g_bid_2228 = MarketInfo(g_symbol_2144, MODE_BID);
         g_ask_2236 = MarketInfo(g_symbol_2144, MODE_ASK);
         g_bid_2244 = MarketInfo(g_symbol_2152, MODE_BID);
         g_ask_2252 = MarketInfo(g_symbol_2152, MODE_ASK);
         if (gi_2176 == 1 && gi_2180 == -1) {
            gd_2068 = g_ask_2236 * g_ask_2252;
            gd_2076 = g_bid_2228 * g_bid_2244;
         }
         if (gi_2176 == 1 && gi_2180 == 1) {
            gd_2068 = g_ask_2236 / g_bid_2244;
            gd_2076 = g_bid_2228 / g_ask_2252;
         }
         if (gi_2176 == -1 && gi_2180 == -1) {
            gd_2068 = g_ask_2252 / g_bid_2228;
            gd_2076 = g_bid_2244 / g_ask_2236;
         }
         gd_2060 = (gd_2068 - gd_2076) / g_point_2084;
         li_ret_0 = TRUE;
      } else {
         if (CheckCrossOver) {
            FNC_046(8, "FNC_074()", "Ðåæèì CheckCrossOver âûêëþ÷åí: íåäîñàòî÷íî äàííûõ ïî äîëëàðîâûì ïàðàì " + g_symbol_2144 + " è " + g_symbol_2152, "CheckCrossOver is disable: no USD pairs data " +
               g_symbol_2144 + " and " + g_symbol_2144);
         }
         CheckCrossOver = FALSE;
         if (CrossOverMode) {
            FNC_046(8, "FNC_074()", "Ðåæèì CrossOverMode âûêëþ÷åí: íåäîñàòî÷íî äàííûõ ïî äîëëàðîâûì ïàðàì " + g_symbol_2144 + " è " + g_symbol_2152, "CrossOverMode is disable: no USD pairs data " +
               g_symbol_2144 + " and " + g_symbol_2144);
         }
         CrossOverMode = FALSE;
      }
   }
   if (!CheckCrossOver) {
      gd_2196 = 0.0;
      gd_2204 = 0.0;
      gd_2212 = 0.0;
      gd_2220 = 0.0;
      g_bid_2228 = 0.0;
      g_ask_2236 = 0.0;
      g_bid_2244 = 0.0;
      g_ask_2252 = 0.0;
      gd_2068 = Ask;
      gd_2076 = Bid;
      gd_2060 = MarketInfo(Symbol(), MODE_SPREAD);
   }
   return (li_ret_0);
}

double FNC_075(string a_symbol_0) {
   double ld_ret_8 = MarketInfo(a_symbol_0, MODE_BID);
   if (ld_ret_8 <= 0.0) ld_ret_8 = GlobalVariableGet("z" + a_symbol_0);
   else
      if (!IsTesting() && !IsOptimization()) GlobalVariableSet("z" + a_symbol_0, ld_ret_8);
   if (ld_ret_8 <= 0.0) ld_ret_8 = 1.0;
   return (ld_ret_8);
}

int FNC_076() {
   string l_symbol_4;
   string ls_12;
   string ls_20;
   string ls_28;
   string ls_36;
   double l_bid_44;
   bool li_ret_0 = FALSE;
   if (gs_208 == "" || gs_208 == "") {
      ls_28 = StringSubstr(gs_1924, 0, 3);
      ls_36 = StringSubstr(gs_1924, 3, 0);
   } else {
      gi_unused_2404 = 1;
      ls_28 = gs_208;
      ls_36 = gs_216;
   }
   int l_count_52 = 0;
   if (CheckCrossOver) {
      if (ls_36 != "USD" && ls_28 != "USD") {
         while (l_count_52 < 4) {
            ls_12 = "USD" + ls_28;
            l_symbol_4 = gs_2028 + ls_12 + gs_2036;
            l_bid_44 = MarketInfo(l_symbol_4, MODE_BID);
            if (l_bid_44 > 0.0) {
               gs_2160 = ls_12;
               gi_2176 = -1;
            } else {
               ls_20 = ls_28 + "USD";
               l_symbol_4 = gs_2028 + ls_20 + gs_2036;
               l_bid_44 = MarketInfo(l_symbol_4, MODE_BID);
               if (l_bid_44 > 0.0) {
                  gs_2160 = ls_20;
                  gi_2176 = 1;
               } else {
                  ls_20 = ls_28;
                  l_symbol_4 = gs_2028 + ls_20 + gs_2036;
                  l_bid_44 = MarketInfo(l_symbol_4, MODE_BID);
                  if (l_bid_44 > 0.0) {
                     gs_2160 = ls_20;
                     gi_2176 = 1;
                  }
               }
            }
            if (gs_2160 != "") {
               ls_12 = "USD" + ls_36;
               l_symbol_4 = gs_2028 + ls_12 + gs_2036;
               l_bid_44 = MarketInfo(l_symbol_4, MODE_BID);
               if (l_bid_44 > 0.0) {
                  gs_2168 = ls_12;
                  gi_2180 = -1;
               } else {
                  ls_20 = ls_36 + "USD";
                  l_symbol_4 = gs_2028 + ls_20 + gs_2036;
                  l_bid_44 = MarketInfo(l_symbol_4, MODE_BID);
                  if (l_bid_44 > 0.0) {
                     gs_2168 = ls_20;
                     gi_2180 = 1;
                  } else {
                     ls_20 = ls_36;
                     l_symbol_4 = gs_2028 + ls_20 + gs_2036;
                     l_bid_44 = MarketInfo(l_symbol_4, MODE_BID);
                     if (l_bid_44 > 0.0) {
                        gs_2168 = ls_20;
                        gi_2180 = 1;
                     }
                  }
               }
               if (gs_2168 != "") li_ret_0 = TRUE;
            }
            if (!(!li_ret_0)) break;
            l_count_52++;
            Sleep(1000);
         }
         g_symbol_2144 = gs_2028 + gs_2160 + gs_2036;
         g_symbol_2152 = gs_2028 + gs_2168 + gs_2036;
      } else {
         if (CheckCrossOver) FNC_046(8, "FNC_076()", "Ðåæèì CheckCrossOver âîçìîæåí òîëüêî íà êðîññ-êóðñàõ", "CheckCrossOver mode works only on cross-pairs");
         if (CrossOverMode) FNC_046(8, "FNC_076()", "Ðåæèì CrossOverMode âîçìîæåí òîëüêî íà êðîññ-êóðñàõ", "CrossOverMode mode works only on cross-pairs");
      }
      if (!li_ret_0) {
         if (CheckCrossOver) FNC_046(8, "FNC_076()", "Ðåæèì CheckCrossOver âûêëþ÷åí: Íåâîçìîæíî èíèöèàëèçèðîâàòü äîëëàðîâûå ïàðû", "CheckCrossOver is disable: Unable to init USD pairs");
         CheckCrossOver = FALSE;
         if (CrossOverMode) FNC_046(8, "FNC_076()", "Ðåæèì CrossOverMode âûêëþ÷åí: Íåâîçìîæíî èíèöèàëèçèðîâàòü äîëëàðîâûå ïàðû", "CrossOverMode is disable: Unable to init USD pairs");
         CrossOverMode = FALSE;
      } else {
         FNC_046(8, "FNC_076()", "Èíèöèàëèçèðîâàíû äîëëàðîâûå ïàðû: " + g_symbol_2144 + " è " + g_symbol_2152, "Init USD pairs: " + g_symbol_2144 + " and " + g_symbol_2152);
         g_point_2096 = MarketInfo(g_symbol_2144, MODE_POINT);
         g_point_2104 = MarketInfo(g_symbol_2152, MODE_POINT);
         if (g_point_2096 == 0.00001 || g_point_2096 == 0.001) gi_2184 = 10;
         else gi_2184 = 1;
         if (g_point_2104 == 0.00001 || g_point_2104 == 0.001) gi_2188 = 10;
         else gi_2188 = 1;
         g_digits_2112 = MarketInfo(g_symbol_2144, MODE_DIGITS);
         g_digits_2120 = MarketInfo(g_symbol_2152, MODE_DIGITS);
      }
   }
   return (li_ret_0);
}

int FNC_077() {
   int l_file_12;
   string ls_16;
   string l_name_24;
   bool li_ret_0 = FALSE;
   int li_4 = StrToInteger(StringSubstr(WindowExpertName(), StringFind(WindowExpertName(), "_", 0) + 2, 4)) + 1;
   while (li_4 > 4160) {
      li_4--;
      if (li_4 == 0) ls_16 = "";
      else {
         if (li_4 > 9) ls_16 = li_4;
         else ls_16 = "0" + li_4;
      }
      l_name_24 = "v" + li_4 + ".key";
      l_file_12 = FileOpen(l_name_24, FILE_CSV|FILE_READ, ';');
      if (l_file_12 >= 0) break;
   }
   if (l_file_12 < 1) {
      FNC_046(8, "FNC_049()", "Êëþ÷åâîé ôàéë íå çàãðóæåí, îøèáêà: " + FNC_047(GetLastError()), "Can not load the key file, error: " + FNC_047(GetLastError()));
      return (0);
   }
   FNC_046(8, "FNC_049()", "Çàãðóæåí êëþ÷åâîé ôàéë (" + l_name_24 + ")", "Loaded the key file (" + l_name_24 + ")");
   int li_8 = -1;
   while (!FileIsLineEnding(l_file_12)) {
      li_8++;
      gsa_1860[0][li_8] = FileReadString(l_file_12);
   }
   li_ret_0 = li_8;
   li_4 = 1;
   li_8 = -1;
   while (!FileIsEnding(l_file_12)) {
      li_8++;
      gsa_1860[li_4][li_8] = FileReadString(l_file_12);
      if (li_8 == li_ret_0) {
         li_8 = -1;
         li_4++;
      }
   }
   FileClose(l_file_12);
   ArrayCopy(gsa_1864, gsa_1860, 0, 0, WHOLE_ARRAY);
   return (li_ret_0);
}

bool FNC_078() {
   bool li_ret_0 = TRUE;
   if (g_time_2372 == 0) g_time_2372 = Time[0];
   if (g_time_2372 == Time[0]) li_ret_0 = FALSE;
   return (li_ret_0);
}

int FNC_079() {
   gi_1208 = 0;
   gi_1212 = 0;
   gi_unused_1216 = 0;
   gi_1220 = FALSE;
   gi_unused_1224 = 0;
   gi_unused_1228 = 0;
   gi_unused_1232 = 0;
   gi_1236 = 0;
   gi_1240 = 0;
   gi_1244 = 0;
   gi_unused_1248 = 0;
   gi_unused_1372 = 0;
   gi_unused_1376 = -1;
   gi_unused_1380 = -1;
   gi_unused_1384 = 25;
   gi_unused_1388 = 0;
   gi_unused_1400 = 0;
   gi_unused_1404 = 0;
   gi_unused_1408 = 0;
   gi_unused_1412 = 0;
   gi_unused_1416 = 0;
   gi_unused_1420 = 0;
   g_magic_1424 = 0;
   gi_1312 = 0;
   gi_1316 = 0;
   gi_1320 = 0;
   gi_1324 = 0;
   gi_unused_1428 = 0;
   gi_unused_1432 = 0;
   gi_unused_1436 = 0;
   gi_2440 = 0;
   g_minute_1440 = 0;
   gi_1444 = 0;
   gi_1452 = -1;
   gi_1456 = FALSE;
   gi_1460 = 0;
   gi_1464 = 0;
   gi_unused_1328 = 0;
   gi_unused_1332 = 0;
   gi_unused_1336 = 10;
   gi_unused_1340 = 0;
   g_day_of_week_1344 = -1;
   g_day_of_week_1348 = -1;
   gi_unused_1352 = 25;
   gi_unused_1356 = -1;
   gi_1360 = -1;
   g_time_1364 = -1;
   gi_1368 = 0;
   g_hour_1468 = 0;
   g_day_of_week_1472 = 0;
   gi_1476 = 0;
   g_month_1480 = 0;
   g_year_1484 = 0;
   g_count_1488 = 0;
   gi_1252 = 999;
   gi_1256 = 0;
   g_count_1260 = 0;
   gi_1268 = FALSE;
   gi_1272 = FALSE;
   gi_1276 = 0;
   gi_1280 = 0;
   g_bars_1284 = FALSE;
   g_str2int_1296 = 0;
   g_str2int_1300 = 0;
   g_str2int_1304 = 0;
   g_bars_2436 = FALSE;
   gd_1532 = 0.0;
   gd_unused_1540 = 0.0;
   gd_1548 = 0.0;
   gd_1556 = 0.0;
   gd_1564 = 0.0;
   gd_1572 = 0.0;
   gd_1492 = 0.0;
   gd_unused_1500 = 0.0;
   gd_unused_1508 = 0.0;
   gd_unused_1516 = 0.0;
   gd_unused_1580 = 0.0;
   g_global_var_1588 = 0.0;
   gd_unused_1596 = 0.0;
   gd_unused_1604 = 0.0;
   gd_unused_1612 = Bid;
   gd_unused_1620 = Ask;
   g_global_var_2448 = 0.0;
   gd_1524 = 0.0;
   gd_1640 = 0.0;
   gd_1648 = 0.0;
   gi_unused_1656 = 0;
   gi_unused_1664 = 0;
   gi_unused_1668 = 0;
   gi_unused_1672 = 0;
   gi_1676 = FALSE;
   gi_1680 = FALSE;
   gi_unused_1684 = 0;
   gi_unused_1752 = 1;
   gi_1756 = FALSE;
   gi_1760 = FALSE;
   gi_unused_1764 = 0;
   gi_1768 = FALSE;
   gi_1772 = FALSE;
   gi_unused_1776 = 0;
   gi_unused_1780 = 0;
   gi_unused_1784 = 0;
   gi_1788 = FALSE;
   g_str2int_340 = FALSE;
   gi_unused_1792 = 0;
   gi_1796 = TRUE;
   gi_unused_1800 = 1;
   gi_1804 = TRUE;
   gi_unused_1808 = 0;
   gi_unused_1812 = 0;
   gi_1816 = FALSE;
   gi_1688 = FALSE;
   gi_1692 = FALSE;
   gi_1700 = FALSE;
   gi_1704 = FALSE;
   gi_1708 = FALSE;
   gi_1712 = FALSE;
   g_bool_1716 = FALSE;
   gi_1720 = FALSE;
   gi_1724 = FALSE;
   gi_1728 = FALSE;
   gi_unused_1732 = 0;
   gi_1736 = FALSE;
   gi_1740 = FALSE;
   gi_2396 = FALSE;
   gi_2400 = FALSE;
   gi_unused_2404 = 0;
   gi_1820 = 0;
   gi_unused_1824 = 0;
   gi_unused_1828 = 0;
   gi_1832 = 0;
   gi_1836 = 0;
   gi_1840 = 0;
   gi_1844 = 0;
   gi_1848 = 0;
   gs_1876 = "";
   gs_1884 = "";
   gs_unused_1892 = "";
   gs_unused_1900 = "";
   gs_1908 = "";
   gs_1916 = "";
   gs_1924 = "";
   gs_1932 = "";
   gs_1940 = "";
   gs_1948 = "";
   gs_1956 = "";
   gs_1964 = "";
   gs_1972 = "";
   gs_1980 = "";
   g_var_name_1988 = "";
   g_var_name_1996 = "";
   g_var_name_2004 = "";
   g_var_name_2012 = "";
   g_var_name_2020 = "";
   gs_2028 = "";
   gs_2036 = "";
   gs_2044 = "";
   gs_2052 = "";
   g_spread_2260 = 1000000.0;
   g_spread_2268 = 0.0;
   gd_2276 = 0.0;
   gd_2284 = 1000000.0;
   gd_2292 = 0.0;
   gd_2300 = 0.0;
   g_count_2312 = 0;
   for (int l_index_0 = 0; l_index_0 < 7; l_index_0++) gia_2456[l_index_0] = 0;
   return (1);
}

int FNC_080() {
   string ls_0 = "";
   double l_spread_8 = MarketInfo(Symbol(), MODE_SPREAD);
   string ls_16 = "";
   string ls_24 = "";
   string ls_32 = "";
   string ls_40 = "";
   g_count_2312++;
   if (g_spread_2260 > l_spread_8) g_spread_2260 = l_spread_8;
   if (g_spread_2268 < l_spread_8) g_spread_2268 = l_spread_8;
   gd_2276 += l_spread_8;
   if (gd_2284 > gd_2060) gd_2284 = gd_2060;
   if (gd_2292 < gd_2060) gd_2292 = gd_2060;
   gd_2300 += gd_2060;
   if (!IsOptimization() && !IsTesting() && gi_1100) {
      if (gda_2308[g_hour_1468][4] == 0.0) {
         gda_2308[g_hour_1468][0] = gd_2060;
         gda_2308[g_hour_1468][3] = gd_2060;
         gda_2308[g_hour_1468][1] = gd_2060;
         gda_2308[g_hour_1468][4] = 1.0;
         gda_2308[g_hour_1468 + 24][0] = l_spread_8;
         gda_2308[g_hour_1468 + 24][3] = l_spread_8;
         gda_2308[g_hour_1468 + 24][1] = l_spread_8;
         gda_2308[g_hour_1468 + 24][4] = 1.0;
      } else {
         gda_2308[g_hour_1468][4] += 1.0;
         if (gda_2308[g_hour_1468][0] > gd_2060) gda_2308[g_hour_1468][0] = gd_2060;
         if (gda_2308[g_hour_1468][3] < gd_2060) gda_2308[g_hour_1468][3] = gd_2060;
         gda_2308[g_hour_1468][1] += gd_2060;
         gda_2308[g_hour_1468 + 24][4] += 1.0;
         if (gda_2308[g_hour_1468 + 24][0] > l_spread_8) gda_2308[g_hour_1468 + 24][0] = l_spread_8;
         if (gda_2308[g_hour_1468 + 24][3] < l_spread_8) gda_2308[g_hour_1468 + 24][3] = l_spread_8;
         gda_2308[g_hour_1468 + 24][1] += l_spread_8;
      }
      gda_2308[g_hour_1468][2] = gda_2308[g_hour_1468][1] / gda_2308[g_hour_1468][4];
      gda_2308[g_hour_1468 + 24][2] = gda_2308[g_hour_1468 + 24][1] / gda_2308[g_hour_1468 + 24][4];
      ls_16 = "\n" 
      + StringConcatenate("00:", DoubleToStr(gda_2308[24][0], 0), "/", DoubleToStr(gda_2308[24][2], 1), "/", DoubleToStr(gda_2308[24][3], 0), "/", DoubleToStr(gda_2308[24][4], 0), "  ", "01:", DoubleToStr(gda_2308[25][0], 0), "/", DoubleToStr(gda_2308[25][2], 1), "/", DoubleToStr(gda_2308[25][3], 0), "/", DoubleToStr(gda_2308[25][4], 0), "  ", "02:", DoubleToStr(gda_2308[26][0], 0), "/", DoubleToStr(gda_2308[26][2], 1), "/", DoubleToStr(gda_2308[26][3], 0), "/", DoubleToStr(gda_2308[26][4], 0), "  ", "03:", DoubleToStr(gda_2308[27][0], 0), "/", DoubleToStr(gda_2308[27][2], 1), "/", DoubleToStr(gda_2308[27][3], 0), "/", DoubleToStr(gda_2308[27][4], 0), "  ", "04:", DoubleToStr(gda_2308[28][0], 0), "/", DoubleToStr(gda_2308[28][2], 1), "/", DoubleToStr(gda_2308[28][3], 0), "/", DoubleToStr(gda_2308[28][4], 0), "  ", "05:", DoubleToStr(gda_2308[29][0], 0), "/", DoubleToStr(gda_2308[29][2], 1), "/", DoubleToStr(gda_2308[29][3], 0), "/", DoubleToStr(gda_2308[29][4], 0), "  ");
      ls_16 = ls_16 + StringConcatenate("06:", DoubleToStr(gda_2308[30][0], 0), "/", DoubleToStr(gda_2308[30][2], 1), "/", DoubleToStr(gda_2308[30][3], 0), "/", DoubleToStr(gda_2308[30][4], 0), "  ", "07:", DoubleToStr(gda_2308[31][0], 0), "/", DoubleToStr(gda_2308[31][2], 1), "/", DoubleToStr(gda_2308[31][3], 0), "/", DoubleToStr(gda_2308[31][4], 0), "  ", "08:", DoubleToStr(gda_2308[32][0], 0), "/", DoubleToStr(gda_2308[32][2], 1), "/", DoubleToStr(gda_2308[32][3], 0), "/", DoubleToStr(gda_2308[32][4], 0), "  ", "09:", DoubleToStr(gda_2308[33][0], 0), "/", DoubleToStr(gda_2308[33][2], 1), "/", DoubleToStr(gda_2308[33][3], 0), "/", DoubleToStr(gda_2308[33][4], 0), "  ", "10:", DoubleToStr(gda_2308[34][0], 0), "/", DoubleToStr(gda_2308[34][2], 1), "/", DoubleToStr(gda_2308[34][3], 0), "/", DoubleToStr(gda_2308[34][4], 0), "  ", "11:", DoubleToStr(gda_2308[35][0], 0), "/", DoubleToStr(gda_2308[35][2], 1), "/", DoubleToStr(gda_2308[35][3], 0), "/", DoubleToStr(gda_2308[35][4], 0));
      ls_16 = ls_16 + StringConcatenate("\n", "12:", DoubleToStr(gda_2308[36][0], 0), "/", DoubleToStr(gda_2308[36][2], 1), "/", DoubleToStr(gda_2308[36][3], 0), "/", DoubleToStr(gda_2308[36][4], 0), "  ", "13:", DoubleToStr(gda_2308[37][0], 0), "/", DoubleToStr(gda_2308[37][2], 1), "/", DoubleToStr(gda_2308[37][3], 0), "/", DoubleToStr(gda_2308[37][4], 0), "  ", "14:", DoubleToStr(gda_2308[38][0], 0), "/", DoubleToStr(gda_2308[38][2], 1), "/", DoubleToStr(gda_2308[38][3], 0), "/", DoubleToStr(gda_2308[38][4], 0), "  ", "15:", DoubleToStr(gda_2308[39][0], 0), "/", DoubleToStr(gda_2308[39][2], 1), "/", DoubleToStr(gda_2308[39][3], 0), "/", DoubleToStr(gda_2308[39][4], 0), "  ", "16:", DoubleToStr(gda_2308[40][0], 0), "/", DoubleToStr(gda_2308[40][2], 1), "/", DoubleToStr(gda_2308[40][3], 0), "/", DoubleToStr(gda_2308[40][4], 0), "  ", "17:", DoubleToStr(gda_2308[41][0], 0), "/", DoubleToStr(gda_2308[41][2], 1), "/", DoubleToStr(gda_2308[41][3], 0), "/", DoubleToStr(gda_2308[41][4], 0), "  ", "18:", DoubleToStr(gda_2308[42][0], 0), "/", DoubleToStr(gda_2308[42][2], 1), "/", DoubleToStr(gda_2308[42][3], 0), "/", DoubleToStr(gda_2308[42][4], 0), "  ");
      ls_16 = ls_16 + StringConcatenate("19:", DoubleToStr(gda_2308[43][0], 0), "/", DoubleToStr(gda_2308[43][2], 1), "/", DoubleToStr(gda_2308[43][3], 0), "/", DoubleToStr(gda_2308[43][4], 0), "  ", "20:", DoubleToStr(gda_2308[44][0], 0), "/", DoubleToStr(gda_2308[44][2], 1), "/", DoubleToStr(gda_2308[44][3], 0), "/", DoubleToStr(gda_2308[44][4], 0), "  ", "21:", DoubleToStr(gda_2308[45][0], 0), "/", DoubleToStr(gda_2308[45][2], 1), "/", DoubleToStr(gda_2308[45][3], 0), "/", DoubleToStr(gda_2308[45][4], 0), "  ", "22:", DoubleToStr(gda_2308[46][0], 0), "/", DoubleToStr(gda_2308[46][2], 1), "/", DoubleToStr(gda_2308[46][3], 0), "/", DoubleToStr(gda_2308[46][4], 0), "  ", "23:", DoubleToStr(gda_2308[47][0], 0), "/", DoubleToStr(gda_2308[47][2], 1), "/", DoubleToStr(gda_2308[47][3], 0), "/", DoubleToStr(gda_2308[47][4], 0));
      ls_24 = "\n" 
      + StringConcatenate("00:", DoubleToStr(gda_2308[0][0], 0), "/", DoubleToStr(gda_2308[0][2], 1), "/", DoubleToStr(gda_2308[0][3], 0), "/", DoubleToStr(gda_2308[0][4], 0), "  ", "01:", DoubleToStr(gda_2308[1][0], 0), "/", DoubleToStr(gda_2308[1][2], 1), "/", DoubleToStr(gda_2308[1][3], 0), "/", DoubleToStr(gda_2308[1][4], 0), "  ", "02:", DoubleToStr(gda_2308[2][0], 0), "/", DoubleToStr(gda_2308[2][2], 1), "/", DoubleToStr(gda_2308[2][3], 0), "/", DoubleToStr(gda_2308[2][4], 0), "  ", "03:", DoubleToStr(gda_2308[3][0], 0), "/", DoubleToStr(gda_2308[3][2], 1), "/", DoubleToStr(gda_2308[3][3], 0), "/", DoubleToStr(gda_2308[3][4], 0), "  ", "04:", DoubleToStr(gda_2308[4][0], 0), "/", DoubleToStr(gda_2308[4][2], 1), "/", DoubleToStr(gda_2308[4][3], 0), "/", DoubleToStr(gda_2308[4][4], 0), "  ", "05:", DoubleToStr(gda_2308[5][0], 0), "/", DoubleToStr(gda_2308[5][2], 1), "/", DoubleToStr(gda_2308[5][3], 0), "/", DoubleToStr(gda_2308[5][4], 0), "  ");
      ls_24 = ls_24 + StringConcatenate("06:", DoubleToStr(gda_2308[6][0], 0), "/", DoubleToStr(gda_2308[6][2], 1), "/", DoubleToStr(gda_2308[6][3], 0), "/", DoubleToStr(gda_2308[6][4], 0), "  ", "07:", DoubleToStr(gda_2308[7][0], 0), "/", DoubleToStr(gda_2308[7][2], 1), "/", DoubleToStr(gda_2308[7][3], 0), "/", DoubleToStr(gda_2308[7][4], 0), "  ", "08:", DoubleToStr(gda_2308[8][0], 0), "/", DoubleToStr(gda_2308[8][2], 1), "/", DoubleToStr(gda_2308[8][3], 0), "/", DoubleToStr(gda_2308[8][4], 0), "  ", "09:", DoubleToStr(gda_2308[9][0], 0), "/", DoubleToStr(gda_2308[9][2], 1), "/", DoubleToStr(gda_2308[9][3], 0), "/", DoubleToStr(gda_2308[9][4], 0), "  ", "10:", DoubleToStr(gda_2308[10][0], 0), "/", DoubleToStr(gda_2308[10][2], 1), "/", DoubleToStr(gda_2308[10][3], 0), "/", DoubleToStr(gda_2308[10][4], 0), "  ", "11:", DoubleToStr(gda_2308[11][0], 0), "/", DoubleToStr(gda_2308[11][2], 1), "/", DoubleToStr(gda_2308[11][3], 0), "/", DoubleToStr(gda_2308[11][4], 0));
      ls_24 = ls_24 + StringConcatenate("\n", "12:", DoubleToStr(gda_2308[12][0], 0), "/", DoubleToStr(gda_2308[12][2], 1), "/", DoubleToStr(gda_2308[12][3], 0), "/", DoubleToStr(gda_2308[12][4], 0), "  ", "13:", DoubleToStr(gda_2308[13][0], 0), "/", DoubleToStr(gda_2308[13][2], 1), "/", DoubleToStr(gda_2308[13][3], 0), "/", DoubleToStr(gda_2308[13][4], 0), "  ", "14:", DoubleToStr(gda_2308[14][0], 0), "/", DoubleToStr(gda_2308[14][2], 1), "/", DoubleToStr(gda_2308[14][3], 0), "/", DoubleToStr(gda_2308[14][4], 0), "  ", "15:", DoubleToStr(gda_2308[15][0], 0), "/", DoubleToStr(gda_2308[15][2], 1), "/", DoubleToStr(gda_2308[15][3], 0), "/", DoubleToStr(gda_2308[15][4], 0), "  ", "16:", DoubleToStr(gda_2308[16][0], 0), "/", DoubleToStr(gda_2308[16][2], 1), "/", DoubleToStr(gda_2308[16][3], 0), "/", DoubleToStr(gda_2308[16][4], 0), "  ", "17:", DoubleToStr(gda_2308[17][0], 0), "/", DoubleToStr(gda_2308[17][2], 1), "/", DoubleToStr(gda_2308[17][3], 0), "/", DoubleToStr(gda_2308[17][4], 0), "  ", "18:", DoubleToStr(gda_2308[18][0], 0), "/", DoubleToStr(gda_2308[18][2], 1), "/", DoubleToStr(gda_2308[18][3], 0), "/", DoubleToStr(gda_2308[18][4], 0), "  ");
      ls_24 = ls_24 + StringConcatenate("19:", DoubleToStr(gda_2308[19][0], 0), "/", DoubleToStr(gda_2308[19][2], 1), "/", DoubleToStr(gda_2308[19][3], 0), "/", DoubleToStr(gda_2308[19][4], 0), "  ", "20:", DoubleToStr(gda_2308[20][0], 0), "/", DoubleToStr(gda_2308[20][2], 1), "/", DoubleToStr(gda_2308[20][3], 0), "/", DoubleToStr(gda_2308[20][4], 0), "  ", "21:", DoubleToStr(gda_2308[21][0], 0), "/", DoubleToStr(gda_2308[21][2], 1), "/", DoubleToStr(gda_2308[21][3], 0), "/", DoubleToStr(gda_2308[21][4], 0), "  ", "22:", DoubleToStr(gda_2308[22][0], 0), "/", DoubleToStr(gda_2308[22][2], 1), "/", DoubleToStr(gda_2308[22][3], 0), "/", DoubleToStr(gda_2308[22][4], 0), "  ", "23:", DoubleToStr(gda_2308[23][0], 0), "/", DoubleToStr(gda_2308[23][2], 1), "/", DoubleToStr(gda_2308[23][3], 0), "/", DoubleToStr(gda_2308[23][4], 0));
   }
   string ls_48 = "";
   if (gd_1640 > 0.0) ls_48 = " +commission " + DoubleToStr(gd_1640, 1);
   ls_32 = gs_1924 + " spread " + DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 1) + "  (min=" + DoubleToStr(g_spread_2260, 1) + "   avrg=" + DoubleToStr(gd_2276 / g_count_2312, 1) + "   max=" + DoubleToStr(g_spread_2268, 1) + ")" + ls_48 + ls_16;
   if (CheckCrossOver) {
      if (gd_2060 - MarketInfo(Symbol(), MODE_SPREAD) > 0.0) ls_0 = "   +";
      if (gd_2060 - MarketInfo(Symbol(), MODE_SPREAD) == 0.0) ls_0 = "     ";
      if (gd_2060 - MarketInfo(Symbol(), MODE_SPREAD) < 0.0) ls_0 = "   ";
      ls_48 = "";
      if (gd_1640 > 0.0) ls_48 = " +commission " + DoubleToStr(2.0 * gd_1640, 1);
      ls_40 = "\n" 
      + StringSubstr(gs_1924, 0, 3) + "-USD-" + StringSubstr(gs_1924, 3, 3) + " spread " + DoubleToStr(gd_2060, 1) + ls_0 + DoubleToStr(gd_2060 - MarketInfo(Symbol(), MODE_SPREAD), 1) + "  (min=" + DoubleToStr(gd_2284, 1) + "   avrg=" + DoubleToStr(gd_2300 / g_count_2312, 1) + "   max=" + DoubleToStr(gd_2292, 1) + ")" + ls_48 + ls_24;
   }
   FNC_046(0, "", ls_32 + ls_40, ls_32 + ls_40);
   return (1);
}

int FNC_081(int ai_0, int ai_4) {
   double l_price_8;
   double l_pips_16;
   if (!CrossOverMode) {
      if (ai_4 == 0) {
         l_price_8 = 1.0 * gi_256;
         l_pips_16 = FNC_040(ai_0, 0);
         if (InvisibleStopLoss) l_price_8 = 0.0;
         if ((l_price_8 != 0.0 && OrderStopLoss() == 0.0) || l_pips_16 != 0.0 && !gi_960) {
            if (l_price_8 != 0.0) {
               if (l_price_8 < g_stoplevel_2128) l_price_8 = g_stoplevel_2128;
               l_price_8 = NormalizeDouble(OrderOpenPrice() - l_price_8 * g_point_2084, g_digits_2092);
            }
            if (l_pips_16 != 0.0) l_pips_16 = NormalizeDouble(OrderOpenPrice() + l_pips_16 * g_point_2084, g_digits_2092);
            if (IsTradeAllowed()) {
               if (!OrderModify(OrderTicket(), OrderOpenPrice(), l_price_8, l_pips_16, 0, Red)) FNC_046(8, "isBuyOrder()", "Íåâîçìîæíî óñòàíîâèòü SL èëè TP: " + FNC_047(GetLastError()), "Unable to set SL or TP: " + FNC_047(GetLastError()));
            } else {
               if (!gi_1116) FNC_046(8, "isBuyOrder()", "Íåâîçìîæíî óñòàíîâèòü SL èëè TP: òîðãîâûé ïîòîê çàíÿò", "Unable to set SL or TP: Trade context busy");
               else FNC_046(9, "isBuyOrder()", "Íåâîçìîæíî óñòàíîâèòü SL èëè TP: òîðãîâûé ïîòîê çàíÿò", "Unable to set SL or TP: Trade context busy");
            }
         }
      }
      if (ai_4 == 1) {
         l_price_8 = 1.0 * gi_256;
         l_pips_16 = FNC_040(ai_0, 1);
         if (InvisibleStopLoss) l_price_8 = 0.0;
         if ((l_price_8 != 0.0 && OrderStopLoss() == 0.0) || l_pips_16 != 0.0 && !gi_960) {
            if (l_price_8 != 0.0) {
               if (l_price_8 < g_stoplevel_2128) l_price_8 = g_stoplevel_2128;
               l_price_8 = NormalizeDouble(OrderOpenPrice() + l_price_8 * g_point_2084, g_digits_2092);
            }
            if (l_pips_16 != 0.0) l_pips_16 = NormalizeDouble(OrderOpenPrice() - l_pips_16 * g_point_2084, g_digits_2092);
            if (IsTradeAllowed()) {
               if (!OrderModify(OrderTicket(), OrderOpenPrice(), l_price_8, l_pips_16, 0, Red)) FNC_046(8, "isBuyOrder()", "Íåâîçìîæíî óñòàíîâèòü SL èëè TP: " + FNC_047(GetLastError()), "Unable to set SL or TP: " + FNC_047(GetLastError()));
            } else {
               if (!gi_1116) FNC_046(8, "isSellOrder()", "Íåâîçìîæíî óñòàíîâèòü SL èëè TP: òîðãîâûé ïîòîê çàíÿò", "Unable to set SL or TP: Trade context busy");
               else FNC_046(9, "isSellOrder()", "Íåâîçìîæíî óñòàíîâèòü SL èëè TP: òîðãîâûé ïîòîê çàíÿò", "Unable to set SL or TP: Trade context busy");
            }
         }
      }
   }
   return (1);
}

int FNC_082() {
   int li_0;
   if (DayOfWeek() != g_day_of_week_1348) {
      g_day_of_week_1348 = DayOfWeek();
      li_0 = gi_1280;
      gi_1280 = FNC_018();
      if (li_0 != gi_1280) {
         FNC_045();
         if (gi_1280 >= 0) FNC_046(8, "FNC_018()", "Íîâîå çíà÷åíèå êîððåêöèè âðåìåíè: Correction+" + gi_1280, "New value of time correcton: Correction+" + gi_1280);
         if (gi_1280 < 0) FNC_046(8, "FNC_018()", "Íîâîå çíà÷åíèå êîððåêöèè âðåìåíè: Correction" + gi_1280, "New value of time correcton: Correction" + gi_1280);
      }
   }
   gi_1820 = TimeCurrent() + 7200 - 3600 * (TimeZone + gi_1280);
   g_hour_1468 = TimeHour(gi_1820);
   g_day_of_week_1472 = TimeDayOfWeek(gi_1820);
   gi_1476 = TimeDay(gi_1820);
   g_month_1480 = TimeMonth(gi_1820);
   g_year_1484 = TimeYear(gi_1820);
   return (gi_1820);
}

int FNC_083() {
   string ls_24;
   int l_file_32;
   string l_name_36;
   datetime lt_unused_44;
   bool li_48;
   bool li_52;
   bool li_ret_0 = FALSE;
   string ls_16 = gs_2408;
   gi_1448 = MathAbs(StrToInteger(StringSubstr(ls_16, StringFind(ls_16, CharToStr(46), 0) - 1, 1)) - StrToInteger(gsa_1864[20][1]));
   if (!CheckCrossOver && gi_2388) return (li_ret_0);
   double ld_4 = NormalizeDouble(gd_2076, Digits);
   if (!gi_2388) {
      gi_2388 = TRUE;
      l_name_36 = "cr" + gs_1924 + Period() + " Time: ";
      for (int l_index_12 = 0; l_index_12 < Bars; l_index_12++) ObjectDelete(l_name_36 + TimeToStr(Time[l_index_12]));
      l_name_36 = "crBid";
      ObjectDelete(l_name_36);
      l_name_36 = "crAsk";
      ObjectDelete(l_name_36);
      if (!CheckCrossOver) return (li_ret_0);
      gi_2376 = WindowBarsPerChart() * 2;
      if (gi_2376 < 50) gi_2376 = 50;
      ArrayResize(gda_2340, gi_2376);
      ArrayResize(gda_2344, gi_2376);
      ArrayResize(gda_2348, gi_2376);
      ArrayResize(gda_2352, gi_2376);
      ArrayResize(gda_2356, gi_2376);
      ArrayResize(gia_2364, gi_2376);
      ArrayResize(gia_2360, gi_2376);
      ArrayInitialize(gda_2340, 0.0);
      ArrayInitialize(gda_2344, 0.0);
      ArrayInitialize(gda_2348, 0.0);
      ArrayInitialize(gda_2352, 0.0);
      ArrayInitialize(gda_2356, 0.0);
      lt_unused_44 = Time[0];
      for (l_index_12 = 0; l_index_12 < gi_2376; l_index_12++) {
         gia_2360[l_index_12] = 0;
         gia_2364[l_index_12] = Time[l_index_12];
      }
      gda_2348[0] = ld_4;
      li_48 = TRUE;
      l_file_32 = FileOpen(ls_16, FILE_CSV|FILE_WRITE|FILE_READ, ';');
      if (l_file_32 < 1) {
         Print("Íåâîçìîæíî îòêðûòü ôàéë " + ls_16 + ", îøèáêà: ", GetLastError());
         li_48 = FALSE;
      }
      for (l_index_12 = gi_2376 - 1; l_index_12 > 0; l_index_12--) {
         li_52 = FALSE;
         if (li_48) {
            FileSeek(l_file_32, 0, SEEK_SET);
            while (!FileIsEnding(l_file_32)) {
               ls_24 = FileReadString(l_file_32);
               if (StrToTime(ls_24) == gia_2364[l_index_12] && !gi_1448) {
                  gda_2348[l_index_12] = StrToDouble(FileReadString(l_file_32));
                  gda_2352[l_index_12] = StrToDouble(FileReadString(l_file_32));
                  gda_2344[l_index_12] = StrToDouble(FileReadString(l_file_32));
                  gda_2340[l_index_12] = StrToDouble(FileReadString(l_file_32));
                  gda_2356[l_index_12] = StrToDouble(FileReadString(l_file_32));
                  gia_2360[l_index_12] = StrToInteger(FileReadString(l_file_32));
                  li_52 = TRUE;
                  break;
               }
               FileReadString(l_file_32);
               FileReadString(l_file_32);
               FileReadString(l_file_32);
               FileReadString(l_file_32);
               FileReadString(l_file_32);
               FileReadString(l_file_32);
            }
         }
         if (!li_52) {
            gda_2348[l_index_12] = Open[l_index_12];
            gda_2352[l_index_12] = Close[l_index_12];
            gda_2344[l_index_12] = Low[l_index_12];
            gda_2340[l_index_12] = High[l_index_12];
            gda_2356[l_index_12] = Volume[l_index_12];
            gia_2360[l_index_12] = 65280;
         }
         if (gia_2360[l_index_12] != 65280) FNC_084(l_index_12, gia_2360[l_index_12]);
      }
      if (li_48) FileClose(l_file_32);
      if (Time[0] == StrToTime(Year() + ".01.01 0:00") + 60.0 * GlobalVariableGet("z" + gs_1924 + "crTime0")) {
         gda_2352[0] = GlobalVariableGet("z" + gs_1924 + "crClose0");
         gda_2340[0] = GlobalVariableGet("z" + gs_1924 + "crHigh0");
         gda_2344[0] = GlobalVariableGet("z" + gs_1924 + "crLow0");
         gda_2356[0] = GlobalVariableGet("z" + gs_1924 + "crVolume0");
         gia_2360[0] = GlobalVariableGet("z" + gs_1924 + "crColor0");
      }
   } else {
      if (WindowBarsPerChart() > gi_2380) {
      }
      if (Time[0] != gia_2364[0]) {
         FNC_087(0);
         for (l_index_12 = gi_2376 - 1; l_index_12 > 0; l_index_12--) {
            gda_2340[l_index_12] = gda_2340[l_index_12 - 1];
            gda_2344[l_index_12] = gda_2344[l_index_12 - 1];
            gda_2348[l_index_12] = gda_2348[l_index_12 - 1];
            gda_2352[l_index_12] = gda_2352[l_index_12 - 1];
            gda_2356[l_index_12] = gda_2356[l_index_12 - 1];
            gia_2364[l_index_12] = gia_2364[l_index_12 - 1];
         }
         gia_2364[0] = Time[0];
         gda_2340[0] = ld_4;
         gda_2344[0] = ld_4;
         gda_2348[0] = ld_4;
         gda_2352[0] = ld_4;
         gda_2356[0] = 0.0;
      }
      gda_2352[0] = ld_4;
      if (gda_2340[0] < ld_4) gda_2340[0] = ld_4;
      if (gda_2344[0] > ld_4 || gda_2344[0] == 0.0) gda_2344[0] = ld_4;
      gda_2356[0] = MathAbs((gda_2352[0] - gda_2348[0]) / g_point_2084);
      gia_2360[0] = 65535;
      FNC_086();
      FNC_084(0, gia_2360[0]);
      GlobalVariableSet("z" + gs_1924 + "crClose0", gda_2352[0]);
      GlobalVariableSet("z" + gs_1924 + "crHigh0", gda_2340[0]);
      GlobalVariableSet("z" + gs_1924 + "crLow0", gda_2344[0]);
      GlobalVariableSet("z" + gs_1924 + "crVolume0", gda_2356[0]);
      GlobalVariableSet("z" + gs_1924 + "crColor0", gia_2360[0]);
      GlobalVariableSet("z" + gs_1924 + "crTime0", MathFloor((Time[0] - StrToTime(Year() + ".01.01 0:00")) / 60));
   }
   return (li_ret_0);
}

int FNC_084(int ai_0, int a_color_4) {
   string l_name_8;
   if (CheckCrossOver) {
      l_name_8 = "cr" + gs_1924 + Period() + " Time: " + TimeToStr(gia_2364[ai_0]);
      ObjectDelete(l_name_8);
      ObjectCreate(l_name_8, OBJ_TREND, 0, gia_2364[ai_0], gda_2344[ai_0], gia_2364[ai_0], gda_2340[ai_0]);
      ObjectSet(l_name_8, OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet(l_name_8, OBJPROP_WIDTH, 1);
      ObjectSet(l_name_8, OBJPROP_RAY, FALSE);
      ObjectSet(l_name_8, OBJPROP_COLOR, a_color_4);
   }
   return (1);
}

int FNC_085(int ai_0, int ai_4) {
   string l_name_8;
   if (!IsOptimization() && !IsTesting()) {
      if (!gi_2400) {
         gi_2400 = TRUE;
         l_name_8 = "cross_buy";
         ObjectDelete(l_name_8);
         l_name_8 = "cross_sell";
         ObjectDelete(l_name_8);
         return (0);
      }
      if (gia_2336[ai_0][1] == 0) l_name_8 = "cross_buy";
      if (gia_2336[ai_0][1] == 1) l_name_8 = "cross_sell";
      l_name_8 = l_name_8 + " " + gsa_2328[ai_0][1];
      ObjectDelete(l_name_8);
      if (ai_4 && gda_2332[ai_0][1] > 0.0) {
         ObjectCreate(l_name_8, OBJ_HLINE, 0, 0, NormalizeDouble(gda_2332[ai_0][1], Digits));
         ObjectSet(l_name_8, OBJPROP_STYLE, STYLE_DASHDOT);
         ObjectSet(l_name_8, OBJPROP_WIDTH, 1);
         ObjectSet(l_name_8, OBJPROP_COLOR, Lime);
      }
   }
   return (1);
}

int FNC_086() {
   string l_name_0;
   if (CheckCrossOver) {
      l_name_0 = "crBid";
      ObjectDelete(l_name_0);
      ObjectCreate(l_name_0, OBJ_HLINE, 0, 0, NormalizeDouble(gd_2076, Digits));
      ObjectSet(l_name_0, OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet(l_name_0, OBJPROP_WIDTH, 1);
      ObjectSet(l_name_0, OBJPROP_COLOR, Yellow);
      l_name_0 = "crAsk";
      ObjectDelete(l_name_0);
      ObjectCreate(l_name_0, OBJ_HLINE, 0, 0, NormalizeDouble(gd_2068, Digits));
      ObjectSet(l_name_0, OBJPROP_STYLE, STYLE_SOLID);
      ObjectSet(l_name_0, OBJPROP_WIDTH, 1);
      ObjectSet(l_name_0, OBJPROP_COLOR, DeepPink);
   }
   return (1);
}

int FNC_087(int ai_0) {
   string ls_20;
   bool li_ret_4 = FALSE;
   bool li_8 = FALSE;
   string l_name_12 = gs_2408;
   int l_file_28 = FileOpen(l_name_12, FILE_CSV|FILE_WRITE|FILE_READ, ';');
   if (l_file_28 < 1) Print("Íåâîçìîæíî îòêðûòü ôàéë " + l_name_12 + ", îøèáêà: ", GetLastError());
   else {
      FileSeek(l_file_28, 0, SEEK_SET);
      while (!FileIsEnding(l_file_28)) {
         gi_2384 = FileTell(l_file_28);
         ls_20 = FileReadString(l_file_28);
         if (StrToTime(ls_20) == gia_2364[ai_0]) break;
         FileReadString(l_file_28);
         FileReadString(l_file_28);
         FileReadString(l_file_28);
         FileReadString(l_file_28);
         FileReadString(l_file_28);
         FileReadString(l_file_28);
      }
      if (!li_8) {
         gi_2384 = FileTell(l_file_28);
         FileSeek(l_file_28, 0, SEEK_END);
         FileWrite(l_file_28, TimeToStr(gia_2364[ai_0]), DoubleToStr(gda_2348[ai_0], Digits), DoubleToStr(gda_2352[ai_0], Digits), DoubleToStr(gda_2344[ai_0], Digits), DoubleToStr(gda_2340[ai_0], Digits), DoubleToStr(gda_2356[ai_0], 0), gia_2360[ai_0]);
      }
      FileClose(l_file_28);
   }
   return (li_ret_4);
}

int FNC_088(int ai_0, int ai_unused_4, int ai_8, int ai_12) {
   double lda_20[10];
   double ld_24;
   double ld_32;
   double ld_40;
   double ld_48;
   int l_count_56;
   int li_64;
   int li_68;
   int li_16 = 0;
   if (ai_0 < 1) ai_0 = 13;
   if (Bars <= ai_0 || g_bars_2436 == Bars) return (0);
   li_16 = g_bars_2436;
   g_bars_2436 = Bars;
   if (li_16 < 0) return (0);
   if (li_16 > 0) li_16--;
   ArrayResize(lda_20, Bars);
   ArrayCopy(lda_20, gda_2444, 1, 0, WHOLE_ARRAY);
   ArrayResize(gda_2444, Bars);
   ArrayCopy(gda_2444, lda_20, 0, 0, WHOLE_ARRAY);
   if (ai_8 == 0) {
      ld_24 = 0.0;
      li_64 = Bars - li_16 - 1;
      if (li_64 < ai_0) li_64 = ai_0;
      l_count_56 = 1;
      while (l_count_56 < ai_0) {
         ld_24 += FNC_089(li_64, ai_12);
         l_count_56++;
         li_64--;
      }
      while (li_64 >= 0) {
         ld_24 += FNC_089(li_64, ai_12);
         gda_2444[li_64] = ld_24 / ai_0;
         ld_24 -= FNC_089(li_64 + ai_0 - 1, ai_12);
         li_64--;
      }
      if (li_16 < 1) for (l_count_56 = 1; l_count_56 < ai_0; l_count_56++) gda_2444[Bars - l_count_56] = 0;
   }
   if (ai_8 == 1) {
      ld_32 = 2.0 / (ai_0 + 1);
      li_64 = Bars - 2;
      if (li_16 > 2) li_64 = Bars - li_16 - 1;
      while (li_64 >= 0) {
         if (li_64 == Bars - 2) gda_2444[li_64 + 1] = FNC_089(li_64 + 1, ai_12);
         gda_2444[li_64] = FNC_089(li_64, ai_12) * ld_32 + (gda_2444[li_64 + 1]) * (1 - ld_32);
         li_64--;
      }
   }
   if (ai_8 == 2) {
      ld_24 = 0.0;
      li_64 = Bars - li_16 + 1;
      li_64 = Bars - ai_0;
      if (li_64 > Bars - li_16) li_64 = Bars - li_16;
      while (li_64 >= 0) {
         if (li_64 == Bars - ai_0) {
            l_count_56 = 0;
            for (int li_60 = li_64; l_count_56 < ai_0; li_60++) {
               ld_24 += FNC_089(li_60, ai_12);
               gda_2444[li_60] = 0;
               l_count_56++;
            }
         } else ld_24 = (gda_2444[li_64 + 1]) * (ai_0 - 1) + FNC_089(li_64, ai_12);
         gda_2444[li_64] = ld_24 / ai_0;
         li_64--;
      }
   }
   if (ai_8 >= 3) {
      ld_24 = 0.0;
      ld_40 = 0.0;
      li_68 = 0;
      li_64 = Bars - li_16 - 1;
      if (li_64 < ai_0) li_64 = ai_0;
      l_count_56 = 1;
      while (l_count_56 <= ai_0) {
         ld_48 = FNC_089(li_64, ai_12);
         ld_24 += ld_48 * l_count_56;
         ld_40 += ld_48;
         li_68 += l_count_56;
         l_count_56++;
         li_64--;
      }
      li_64++;
      l_count_56 = li_64 + ai_0;
      while (li_64 >= 0) {
         gda_2444[li_64] = ld_24 / li_68;
         if (li_64 == 0) break;
         li_64--;
         l_count_56--;
         ld_48 = FNC_089(li_64, ai_12);
         ld_24 = ld_24 - ld_40 + ld_48 * ai_0;
         ld_40 -= FNC_089(l_count_56, ai_12);
         ld_40 += ld_48;
      }
      if (li_16 < 1) for (l_count_56 = 1; l_count_56 < ai_0; l_count_56++) gda_2444[Bars - l_count_56] = 0;
   }
   return (1);
}

double FNC_089(int ai_0, int ai_4) {
   double ld_ret_8 = 0.0;
   if (CrossOverMode) {
      if (ai_4 == 0) ld_ret_8 = gda_2352[ai_0];
      if (ai_4 == 1) ld_ret_8 = gda_2348[ai_0];
      if (ai_4 == 2) ld_ret_8 = gda_2340[ai_0];
      if (ai_4 == 3) ld_ret_8 = gda_2344[ai_0];
      if (ai_4 == 4) ld_ret_8 = (gda_2340[ai_0] + gda_2344[ai_0]) / 2.0;
      if (ai_4 == 5) ld_ret_8 = (gda_2340[ai_0] + gda_2344[ai_0] + gda_2352[ai_0]) / 3.0;
      if (ai_4 == 6) ld_ret_8 = (gda_2340[ai_0] + gda_2344[ai_0] + gda_2352[ai_0] + gda_2352[ai_0]) / 4.0;
   } else {
      if (ai_4 == 0) ld_ret_8 = Close[ai_0];
      if (ai_4 == 1) ld_ret_8 = Open[ai_0];
      if (ai_4 == 2) ld_ret_8 = High[ai_0];
      if (ai_4 == 3) ld_ret_8 = Low[ai_0];
      if (ai_4 == 4) ld_ret_8 = (High[ai_0] + Low[ai_0]) / 2.0;
      if (ai_4 == 5) ld_ret_8 = (High[ai_0] + Low[ai_0] + Close[ai_0]) / 3.0;
      if (ai_4 == 6) ld_ret_8 = (High[ai_0] + Low[ai_0] + Close[ai_0] + Close[ai_0]) / 4.0;
   }
   return (ld_ret_8);
}

bool FNC_091(bool ai_0) {
   bool li_ret_4 = FALSE;
   if (ai_0) {
      for (int l_index_8 = 0; l_index_8 < 7; l_index_8++)
         if (gia_2324[l_index_8][2] == Time[0]) li_ret_4 = TRUE;
   }
   return (li_ret_4);
}

int FNC_092() {
   switch (UninitializeReason()) {
   case 0:
      FNC_046(9, "FNC_092()", "Ñêðèïò ñàìîñòîÿòåëüíî çàâåðøèë ñâîþ ðàáîòó", "Ñêðèïò ñàìîñòîÿòåëüíî çàâåðøèë ñâîþ ðàáîòó");
      break;
   case REASON_CHARTCLOSE:
      FNC_046(9, "FNC_092()", "Ñèìâîë èëè ïåðèîä ãðàôèêà áûë èçìåíåí", "Ñèìâîë èëè ïåðèîä ãðàôèêà áûë èçìåíåí");
      break;
   case REASON_REMOVE:
      FNC_046(9, "FNC_092()", "Ïðîãðàììà óäàëåíà ñ ãðàôèêà", "Ïðîãðàììà óäàëåíà ñ ãðàôèêà");
      break;
   case REASON_RECOMPILE:
      FNC_046(9, "FNC_092()", "Ïðîãðàììà ïåðåêîìïèëèðîâàíà", "Ïðîãðàììà ïåðåêîìïèëèðîâàíà");
      break;
   case REASON_CHARTCHANGE:
      FNC_046(9, "FNC_092()", "Ñèìâîë èëè ïåðèîä ãðàôèêà áûë èçìåíåí", "Ñèìâîë èëè ïåðèîä ãðàôèêà áûë èçìåíåí");
      break;
   case REASON_PARAMETERS:
      FNC_046(9, "FNC_092()", "Âõîäíûå ïàðàìåòðû áûëè èçìåíåíû ïîëüçîâàòåëåì", "Âõîäíûå ïàðàìåòðû áûëè èçìåíåíû ïîëüçîâàòåëåì");
      break;
   case REASON_ACCOUNT:
      FNC_046(9, "FNC_092()", "Àêòèâèðîâàí äðóãîé ñ÷åò", "Àêòèâèðîâàí äðóãîé ñ÷åò");
   }
   return (1);
}

int FNC_093() {
   bool li_ret_0 = FALSE;
   for (int l_index_4 = 0; l_index_4 < 7; l_index_4++) {
      if (gia_2336[l_index_4][0] == 95) {
         FNC_030("OSbuffer", l_index_4);
         li_ret_0 = TRUE;
         FNC_046(9, "FNC_093()", "Î÷èùåí áóôåð " + l_index_4, "Buffer cleared " + l_index_4);
      }
   }
   return (li_ret_0);
}

int FNC_094() {
   int li_0;
   if (gi_1108) {
      li_0 = GetTickCount() - gi_1368;
      if (gi_1252 > li_0) gi_1252 = li_0;
      if (gi_1256 < li_0) gi_1256 = li_0;
      g_count_1260++;
      gd_1532 += 1.0 * li_0;
      if (gi_1056 == 0) Comment("SysSpeed:  min=" + gi_1252 + "  average=" + DoubleToStr(gd_1532 / (1.0 * g_count_1260), 0) + "  max=" + gi_1256 + "   current=" + li_0);
   }
   return (1);
}

bool FNC_095(int ai_0) {
   bool li_ret_4 = FALSE;
   if (ai_0 == 0) g_datetime_2368 = TimeCurrent();
   else {
      if (ai_0 > 0) {
         if (TimeCurrent() - g_datetime_2368 >= ai_0 / 1000) {
            FNC_046(9, "FNC_095()", "FNC_095(" + ai_0 + ")", "FNC_095(" + ai_0 + ")");
            li_ret_4 = TRUE;
         }
      }
   }
   return (li_ret_4);
}